{{- if (eq .chezmoi.os "darwin") -}}
#!/usr/bin/env bash

set -o errexit    # Exit on error. Append || true if you expect an error.
set -o errtrace   # Exit on error inside any functions or subshells.
set -o noclobber  # don't allow overwriting files
set -o nounset    # Don't allow use of undefined vars. Use ${VAR:-} to use an undefined VAR.
set -o pipefail   # Produce a failure return code if any pipeline command errors
shopt -s failglob # Cause globs that don't get expanded to cause errors

# FIXME: GT! Copy from mac-playbook

echo -e "\n\nSetting macOS preferences."

# ~/.macos ‚Äî https://mths.be/macos

# Close any open System Preferences panes, to prevent them from overriding
# settings we're about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo --validate

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do
    sudo -n true
    sleep 60
    kill -0 "$$" || exit
done 2>/dev/null &

###############################################################################
echo -e "\nSystem Settings"
###############################################################################

## Apple Intelligence & Siri (x-apple.systempreferences:com.apple.Siri-Settings)

# defaults write com.apple.CloudSubscriptionFeatures.optIn auto_opt_in -bool false # Disable "Apple Intelligence"
# defaults write com.apple.assistant.support "Assistant Enabled" -bool false       # Disable "Siri"

## Control Center (x-apple.systempreferences:com.apple.ControlCenter-Settings)

defaults write com.apple.controlcenter "NSStatusItem Visible WiFi" -bool true
defaults write com.apple.controlcenter "NSStatusItem Visible Bluetooth" -bool true
defaults write com.apple.controlcenter "NSStatusItem Visible AirDrop" -bool true
defaults write com.apple.controlcenter "NSStatusItem Visible FocusModes" -bool false
defaults write com.apple.controlcenter "NSStatusItem Visible StageManager" -bool false
defaults write com.apple.controlcenter "NSStatusItem Visible ScreenMirroring" -bool true
defaults write com.apple.controlcenter "NSStatusItem Visible Display" -bool true
defaults write com.apple.controlcenter "NSStatusItem Visible Sound" -bool true
defaults write com.apple.controlcenter "NSStatusItem Visible NowPlaying" -bool false

defaults write com.apple.controlcenter "NSStatusItem Visible Battery" -bool true # Show "Battery" in Menu Bar
defaults write com.apple.weather.menu "NSStatusItem Visible Item-0" -bool true   # Show "Weather" in Menu Bar

### Control Center / Menu Bar Only

# Set "Automatically hide and show the menu bar" to "In Full Screen Only"
defaults write -g AppleMenuBarVisibleInFullscreen -bool false
defaults write -g "_HIHideMenuBar" -bool false

## General

### General / Storage (x-apple.systempreferences:com.apple.settings.Storage)
defaults write MobileMeAccounts iCloudHomeShouldEnable -bool true # Enable "iCloud Drive"

## Keyboard (x-apple.systempreferences:com.apple.Keyboard-Settings)

defaults write -g InitialKeyRepeat_Level_Saved -int 6 # Set "Delay until repeat" to shortest
# defaults write com.apple.HIToolbox -int 1             # Set "Press üåêÔ∏é key to" to "Change Input Source"

### Keyboard / Text Input
defaults write -g WebAutomaticSpellingCorrectionEnabled -bool true                    # See above
defaults write -g NSAutomaticInlinePredictionEnabled -bool true                       # Enable "Show inline predictions"
# defaults write -g KB_SpellingLanguage -dict KB_SpellingLanguageIsAutomatic -bool true # Set "Spelling" to "Automatic by Language"

### Keyboard / Dictation
# defaults write com.apple.assistant.support "Dictation Enabled" -bool false # Disable "Dictation"

## Mouse (x-apple.systempreferences:com.apple.Mouse-Settings)
# defaults write -g com.apple.mouse.scaling -float 0.5              # Set "Tracking speed" to 3/10 slowest
# defaults write -g com.apple.mouse.doubleClickThreshold -float 1.7 # Set "Double-click speed" to 5/11 slowest
# defaults write -g com.apple.scrollwheel.scaling -float 0.3125     # Set "Scrolling speed" to 4/8 slowest
# defaults write -g com.apple.mouse.linear -bool false              # Enable "Pointer acceleration"

## Network (x-apple.systempreferences:com.apple.Network-Settings)
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on    # Enable "Firewall"
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned on    # Enable "Automatically allow built-in software to receive incoming connections"
sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsignedapp on # Enable "Automatically allow downloaded signed software to receive incoming connections"
# sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on    # "Enable stealth mode"

## Printer & Scanners (x-apple.systempreferences:com.apple.Print-Scan-Settings)
defaults write org.cups.PrintingPrefs UseLastPrinter -bool true          # Set "Default printer" to "Last Printer Used"
defaults write org.cups.PrintingPrefs DefaultPaperID -string "na-letter" # Set "Default paper size" to "US Letter"

## Trackpad (x-apple.systempreferences:com.apple.Trackpad-Settings)

### Trackpad / Point & Click

# defaults write -g com.apple.trackpad.scaling -float 0.6875                                 # Set "Tracking speed" to 4/10 slowest
# defaults write com.apple.AppleMultitouchTrackpad FirstClickThreshold -int 1                # Set "Click" to "Medium"
# defaults write com.apple.AppleMultitouchTrackpad SecondClickThreshold -int 1               # See above
# defaults write com.apple.AppleMultitouchTrackpad ActuationStrength -int 1                  # Disable "Quiet Click"
# defaults write -g com.apple.trackpad.forceClick -bool true                                 # Enable "Force Click and haptic feedback"
# defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerTapGesture -bool false # Set "Look up & data detectors" to "Force Click with One Finger"
# defaults write com.apple.AppleMultitouchTrackpad Clicking -bool false                      # Disable "Tap to click"

### Trackpad / More Gestures

# defaults write com.apple.AppleMultitouchTrackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 3 # Enable "Notification Center"
# defaults write com.apple.dock showMissionControlGestureEnabled -bool true                          # Set "Mission Control" to "Swipe Up with Three Fingers"
# defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerVertSwipeGesture -int 2
# defaults write com.apple.AppleMultitouchTrackpad TrackpadFourFingerVertSwipeGesture -bool false
# defaults write com.apple.dock enterMissionControlByTopWindowDrag -bool false # There is no point in this setting since it just enables tiling
# defaults write com.apple.dock showAppExposeGestureEnabled -bool false        # Set "App Expos√©" to "Off"
# defaults write com.apple.dock showDesktopGestureEnabled -bool true           # Enable "Show Desktop"

### Trackpad / Scroll & Zoom

# # Natural scrolling may be enabled in global domain `com.apple.swipescrolldirection`, but this maps to the same setting set in Mouse
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadPinch -bool true                     # Enable "Zoom in or out"
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerDoubleTapGesture -bool true # Enable "Smart zoom"
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRotate -bool true                    # Enable "Rotate"

## Users & Groups (x-apple.systempreferences:com.apple.Users-Groups-Settings)
sudo sysadminctl -guestAccount off # Disable "Allow guests to log in to this computer"

###############################################################################
echo -e "\nGeneral UI/UX"
###############################################################################

# # Flash the screen when a beep is played
# defaults write -g "com.apple.sound.beep.flash" -int 1

# Don't play sounds while adjusting the volume
defaults write -g "com.apple.sound.beep.feedback" -int 0

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# Enable the sound effects on boot - MBP 2015 and later - set to %01 to disable again
# sudo nvram StartupMute=%00
sudo nvram StartupMute=%01

# # Disable transparency in the menu bar and elsewhere on Yosemite
# defaults write com.apple.universalaccess reduceTransparency -bool true

# # Set highlight color to green
# defaults write NSGlobalDomain AppleHighlightColor -string "0.764700 0.976500 0.568600"

# # Set sidebar icon size to medium
# defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# Always show scrollbars
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
# Possible values: `WhenScrolling`, `Automatic` and `Always`

# # Disable the over-the-top focus ring animation
# # defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false

# # Adjust toolbar title rollover delay
# defaults write NSGlobalDomain NSToolbarTitleViewRolloverDelay -float 0

# # Disable smooth scrolling
# # (Uncomment if you're on an older Mac that messes up the animation)
# defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false

# # Increase window resize speed for Cocoa applications
# defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# Expand print panel by default
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# # Automatically quit printer app once the print jobs complete
# defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# # Disable the "Are you sure you want to open this application?" dialog
# defaults write com.apple.LaunchServices LSQuarantine -bool false

# # Remove duplicates in the "Open With" menu (also see `lscleanup` alias)
# /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister \
#     -kill -r -domain local -domain system -domain user

# # Display ASCII control characters using caret notation in standard text views
# # Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
# defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

# # Disable Resume system-wide
# defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

# # Disable automatic termination of inactive apps
# defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# # Disable the crash reporter
# #defaults write com.apple.CrashReporter DialogType -string "none"# # Set Help Viewer windows to non-floating mode
# defaults write com.apple.helpviewer DevMode -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

# # Disable Notification Center and remove the menu bar icon
# # launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null

# # Disable automatic capitalization as it's annoying when typing code
# defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

# Disable smart dashes as they're annoying when typing code
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

# Disable automatic period substitution as it's annoying when typing code
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# Disable smart quotes as they're annoying when typing code
defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# # Disable auto-correct
# defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# # Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
# # all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.
# #rm -rf ~/Library/Application Support/Dock/desktoppicture.db
# #sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# #sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg

# Disable the Screenshot and Empty Trash sound effects
defaults write com.apple.systemsound "com.apple.sound.uiaudio.enabled" -int 0

# # Menu bar: hide the Time Machine, Volume, and User icons
# # Only hide the User icon.
# #"/System/Library/CoreServices/Menu Extras/TimeMachine.menu" \
# #"/System/Library/CoreServices/Menu Extras/Volume.menu" \
# for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
#   defaults write "${domain}" dontAutoLoad -array \
#     "/System/Library/CoreServices/Menu Extras/User.menu"
# done
# defaults write com.apple.systemuiserver menuExtras -array \
#   "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" \
#   "/System/Library/CoreServices/Menu Extras/AirPort.menu" \
#   "/System/Library/CoreServices/Menu Extras/Battery.menu" \
#   "/System/Library/CoreServices/Menu Extras/Clock.menu"#
# sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText "@lildude :: Found this computer? Please call +1-415-448-6673 :: GitHub, Inc."

# Set powerchime when connecting power cord ala iOS
defaults write com.apple.PowerChime ChimeOnAllHardware -bool true

# # Enable dark mode
# defaults write NSGlobalDomain AppleInterfaceStyle -string "Dark"

# # Enable dark menu bar in mojave
# #defaults write -g NSRequiresAquaSystemAppearance -bool Yes

# Show battery percent in menu bar
defaults write com.apple.menuextra.battery ShowPercent -string "YES"

# # Enable sub-pixel aliasing on mojave and later - https://www.howtogeek.com/358596/how-to-fix-blurry-fonts-on-macos-mojave-with-subpixel-antialiasing/
# defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO

################################################################################
echo -e "\nTrackpad, mouse, keyboard, Bluetooth accessories, and input"
################################################################################

# defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
# defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

# # Trackpad: map bottom right corner to right-click
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
# defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
# defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

# # Disable "natural" (Lion-style) scrolling
# defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false

# # Increase sound quality for Bluetooth headphones/headsets
# defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

# Enable full keyboard access for all controls
# (e.g. enable Tab in modal dialogs)
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

# # Use scroll gesture with the Ctrl (^) modifier key to zoom
# defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
# defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
# # Follow the keyboard focus while zoomed in
# defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true

# # Disable press-and-hold for keys in favor of key repeat
# defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a blazingly fast keyboard repeat rate
defaults write NSGlobalDomain KeyRepeat -int 1
defaults write NSGlobalDomain InitialKeyRepeat -int 20

# # Set language and text formats
# # Note: if you're in the US, replace `EUR` with `USD`, `Centimeters` with
# # `Inches`, `en_GB` with `en_US`, and `true` with `false`.
# defaults write NSGlobalDomain AppleLanguages -array "en" "nl"
# defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
# defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
# defaults write NSGlobalDomain AppleMetricUnits -bool true

# Disable language menu in the top right corner of the boot screen
sudo defaults write /Library/Preferences/com.apple.loginwindow showInputMenu -bool false

# # Set the timezone; see `sudo systemsetup -listtimezones` for other values
# sudo systemsetup -settimezone "Asia/Bangkok" >/dev/null

# Stop iTunes from responding to the keyboard media keys
launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

################################################################################
echo -e "\nEnergy saving"
################################################################################

# Enable lid wakeup
sudo pmset -a lidwake 1

# Restart automatically on power loss
sudo pmset -a autorestart 1

# Restart automatically if the computer freezes
# sudo systemsetup -setrestartfreeze on

# # Sleep the display after 15 minutes
# sudo pmset -a displaysleep 15

# # Disable machine sleep while charging
# sudo pmset -c sleep 0
# # Set machine sleep to 5 minutes on battery
# sudo pmset -b sleep 5

# # Set standby delay to 24 hours (default is 1 hour)
# sudo pmset -a standbydelay 86400

# # Never go into computer sleep mode
# sudo systemsetup -setcomputersleep Off > /dev/null
# # Set to 1 minute
# sudo systemsetup -setcomputersleep 1 > /dev/null

# # Hibernation mode
# # 0: Disable hibernation (speeds up entering sleep mode)
# # 3: Copy RAM to disk so the system state can still be restored in case of a
# #   power failure.
# sudo pmset -a hibernatemode 0

# # Remove the sleep image file to save disk space
# sudo rm /private/var/vm/sleepimage
# # Create a zero-byte file instead‚Ä¶
# sudo touch /private/var/vm/sleepimage
# # ‚Ä¶and make sure it can't be rewritten
# sudo chflags uchg /private/var/vm/sleepimage

################################################################################
echo -e "\nScreen"
################################################################################

# Require password immediately after sleep or screen saver begins
# defaults write com.apple.screensaver askForPassword -int 1
# defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop
defaults write com.apple.screencapture location -string "${HOME}/Desktop"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
defaults write com.apple.screencapture type -string "png"

# # Disable shadow in screenshots
# defaults write com.apple.screencapture disable-shadow -bool true

# # Enable subpixel font rendering on non-Apple LCDs
# # Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501
# defaults write NSGlobalDomain AppleFontSmoothing -int 1

# # Enable HiDPI display modes (requires restart)
# sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

################################################################################
echo -e "\nFinder"
################################################################################

# Finder: allow quitting via ‚åò + Q; doing so will also hide desktop icons
defaults write com.apple.finder QuitMenuItem -bool true

# Finder: disable window animations and Get Info animations
defaults write com.apple.finder DisableAllAnimations -bool true

# Set Desktop as the default location for new Finder windows
# For other paths, use `PfLo` and `file:///full/path/here/`
defaults write com.apple.finder NewWindowTarget -string "PfDe"
# defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"

# Show icons for hard drives, servers, and removable media on the desktop
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show hidden files by default
defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Display full POSIX path as Finder window title
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# Keep folders on top when sorting by name
defaults write com.apple.finder _FXSortFoldersFirst -bool true

# # When performing a search, search the current folder by default
# defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# # Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Enable spring loading for directories
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Remove the spring loading delay for directories
defaults write NSGlobalDomain com.apple.springing.delay -float 0

# Avoid creating .DS_Store files on network or USB volumes
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# Disable disk image verification
defaults write com.apple.frameworks.diskimages skip-verify -bool true
defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

# # Automatically open a new Finder window when a volume is mounted
# defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
# defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
# defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# # Show item info near icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

# # Show item info to the right of the icons on the desktop
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

# # Enable snap-to-grid for icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# # Increase grid spacing for icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

# # Increase the size of icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

# Use list view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

# Enable the warning before emptying the Trash
defaults write com.apple.finder WarnOnEmptyTrash -bool true

# # Enable AirDrop over Ethernet and on unsupported Macs running Lion
# defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

# Show the ~/Library folder
chflags nohidden ~/Library # && xattr -d com.apple.FinderInfo ~/Library

# Show the /Volumes folder
sudo chflags nohidden /Volumes

# # Remove Dropbox's green checkmark icons in Finder
# # file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
# # [ -e "${file}" ] && mv -f "${file}" "${file}.bak"

# # Expand the following File Info panes:
# # "General", "Open with", and "Sharing & Permissions"
# defaults write com.apple.finder FXInfoPanesExpanded -dict \
#     General -bool true \
#     OpenWith -bool true \
#     Privileges -bool true
#     Metadata -bool false \
#     Name -bool false \
#     Comments -bool false \
#     Preview -bool false

# General
defaults write com.apple.finder FinderSpawnTab -bool true      # Enable "Open folders in tabs instead of new windows"

# Advanced
# defaults write com.apple.finder FXRemoveOldTrashItems -bool false          # Disable "Remove items from the Trash after 30 days"
defaults write com.apple.finder _FXSortFoldersFirstOnDesktop -bool true    # Enable "Keep folders on top on Desktop"

# Disable Quick Look animations
defaults write -g QLPanelAnimationDuration -float 0

# Disable "removing from iCloud Drive" warnings
defaults write com.apple.finder FXEnableRemoveFromICloudDriveWarning -bool false

# # Hide tags in sidebar - not sure this works.
# defaults write com.apple.finder SidebarTagsSctionDisclosedState -bool false

# Enable Text Selection in Quick Look Windows
defaults write com.apple.finder QLEnableTextSelection -bool true

################################################################################
echo -e "\nDock, Dashboard, and hot corners"
################################################################################

# # Enable highlight hover effect for the grid view of a stack (Dock)
# defaults write com.apple.dock mouse-over-hilite-stack -bool true

# # Set the icon size of Dock items to 36 pixels
# defaults write com.apple.dock tilesize -int 36

# # Change minimize/maximize window effect
# defaults write com.apple.dock mineffect -string "scale"

# # Minimize windows into their application's icon
# defaults write com.apple.dock minimize-to-application -bool true

# Enable spring loading for all Dock items
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

# Show indicator lights for open applications in the Dock
defaults write com.apple.dock show-process-indicators -bool true

# # Wipe all (default) app icons from the Dock
# # This is only really useful when setting up a new Mac, or if you don't use
# # the Dock to launch apps.
# defaults write com.apple.dock persistent-apps -array

# # Add a spacer to the left side of the Dock (where the applications are)
# defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
# # Add a spacer to the right side of the Dock (where the Trash is)
# defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'

# # Show only open applications in the Dock
# defaults write com.apple.dock static-only -bool true

# Don't animate opening applications from the Dock
defaults write com.apple.dock launchanim -bool false

# Speed up Mission Control animations
defaults write com.apple.dock expose-animation-duration -float 0.1

# # Don't group windows by application in Mission Control
# # (i.e. use the old Expos√© behavior instead)
# defaults write com.apple.dock expose-group-by-app -bool false

# # Disable Dashboard
# defaults write com.apple.dashboard mcx-disabled -bool true

# # Don't show Dashboard as a Space
# defaults write com.apple.dock dashboard-in-overlay -bool true

# # Don't automatically rearrange Spaces based on most recent use
# defaults write com.apple.dock mru-spaces -bool false

# # Remove the auto-hiding Dock delay
# defaults write com.apple.dock autohide-delay -float 0
# # Remove the animation when hiding/showing the Dock
# defaults write com.apple.dock autohide-time-modifier -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Make Dock icons of hidden applications translucent
defaults write com.apple.dock showhidden -bool true

# Don't show recent applications in Dock
defaults write com.apple.dock show-recents -bool false

# # Disable the Launchpad gesture (pinch with thumb and three fingers)
# #defaults write com.apple.dock showLaunchpadGestureEnabled -int 0

# # Reset Launchpad, but keep the desktop wallpaper intact
# find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete
# # Add iOS & Watch Simulator to Launchpad
# # sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"
# # editorconfig-checker-disable-next-line
# # sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app" "/Applications/Simulator (Watch).app"

# # Hot corners
# # Possible values:
# #  0: no-op
# #  2: Mission Control
# #  3: Show application windows
# #  4: Desktop
# #  5: Start screen saver
# #  6: Disable screen saver
# #  7: Dashboard
# # 10: Put display to sleep
# # 11: Launchpad
# # 12: Notification Center
# # 13: Lock Screen
# # Top left screen corner ‚Üí Mission Control
# defaults write com.apple.dock wvous-tl-corner -int 2
# defaults write com.apple.dock wvous-tl-modifier -int 0
# # Top right screen corner ‚Üí Desktop
# defaults write com.apple.dock wvous-tr-corner -int 4
# defaults write com.apple.dock wvous-tr-modifier -int 0
# # Bottom left screen corner ‚Üí Start screen saver
# defaults write com.apple.dock wvous-bl-corner -int 5
# defaults write com.apple.dock wvous-bl-modifier -int 0

################################################################################
echo -e "\nAddress Book, Dashboard, iCal, and Disk Utility"
################################################################################

# Enable the debug menu in Address Book
defaults write com.apple.addressbook ABShowDebugMenu -bool true

# # Enable Dashboard dev mode (allows keeping widgets on the desktop)
# defaults write com.apple.dashboard devmode -bool true

# # Enable the debug menu in iCal (pre-10.8)
# defaults write com.apple.iCal IncludeDebugMenu -bool true

# Enable the debug menu in Disk Utility
defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
# Enable advanced image options
defaults write com.apple.DiskUtility advanced-image-options -bool true

# Disable auto-play videos when opened with QuickTime Player
defaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool false

################################################################################
echo -e "\nArchive utility"
################################################################################

# FIXME: Needs updating.

# Move archive files to trash after expansion
# Delete directly: "/dev/null"
# Leave alone (default) "."
defaults write com.apple.archiveutility dearchive-move-after -string "$HOME/.Trash"

################################################################################
echo -e "\nGoogle Chrome and Google Chrome Canary"
################################################################################

# # Allow installing user scripts via GitHub Gist or Userscripts.org
# #defaults write com.google.Chrome ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"
# #defaults write com.google.Chrome.canary ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"

# Disable the all too sensitive backswipe on trackpads
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false

# Disable the all too sensitive backswipe on Magic Mouse
defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
defaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false

# Use the system-native print preview dialog
defaults write com.google.Chrome DisablePrintPreview -bool true
defaults write com.google.Chrome.canary DisablePrintPreview -bool true

# Expand the print dialog by default
defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true
defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true

###############################################################################
echo -e "\nPrinters"
###############################################################################

# Enable CUPS web interface
cupsctl WebInterface=yes

# Turn off printer sharing
cupsctl --no-share-printers

# # Add a context menu item for showing the Web Inspector in web views
# defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

# ???
# defaults write -g WebAutomaticTextReplacementEnabled -bool true

################################################################################
echo -e "\nSpotlight"
################################################################################

# # Hide Spotlight tray-icon (and subsequent helper)
# #sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search

# # Disable Spotlight indexing for any volume that gets mounted and has not yet
# # been indexed before.
# # Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
# sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"

# # Change indexing order and disable some search results
# # Yosemite-specific search results (remove them if you are using macOS 10.9 or older):
# # 	MENU_DEFINITION
# # 	MENU_CONVERSION
# # 	MENU_EXPRESSION
# # 	MENU_SPOTLIGHT_SUGGESTIONS (send search queries to Apple)
# # 	MENU_WEBSEARCH             (send search queries to Apple)
# # 	MENU_OTHER
# defaults write com.apple.spotlight orderedItems -array \
#     '{"enabled" = 1;"name" = "APPLICATIONS";}' \
#     '{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
#     '{"enabled" = 1;"name" = "DIRECTORIES";}' \
#     '{"enabled" = 1;"name" = "PDF";}' \
#     '{"enabled" = 1;"name" = "FONTS";}' \
#     '{"enabled" = 0;"name" = "DOCUMENTS";}' \
#     '{"enabled" = 0;"name" = "MESSAGES";}' \
#     '{"enabled" = 0;"name" = "CONTACT";}' \
#     '{"enabled" = 0;"name" = "EVENT_TODO";}' \
#     '{"enabled" = 0;"name" = "IMAGES";}' \
#     '{"enabled" = 0;"name" = "BOOKMARKS";}' \
#     '{"enabled" = 0;"name" = "MUSIC";}' \
#     '{"enabled" = 0;"name" = "MOVIES";}' \
#     '{"enabled" = 0;"name" = "PRESENTATIONS";}' \
#     '{"enabled" = 0;"name" = "SPREADSHEETS";}' \
#     '{"enabled" = 0;"name" = "SOURCE";}' \
#     '{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
#     '{"enabled" = 0;"name" = "MENU_OTHER";}' \
#     '{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
#     '{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
#     '{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
#     '{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'

# # Load new settings before rebuilding the index
# killall mds >/dev/null 2>&1
# # Make sure indexing is enabled for the main volume
sudo mdutil -i on / >/dev/null
# # Rebuild the index from scratch
# sudo mdutil -E / >/dev/null

###############################################################################
echo -e "\nSSD-specific tweaks"
################################################################################

# # Disable the sudden motion sensor as it's not useful for SSDs
# sudo pmset -a sms 0

# # Secure FileVault on sleep
# sudo pmset -a destroyfvkeyonstandby 1
# sudo pmset -a powernap 0
# sudo pmset -a standby 0
# sudo pmset -a autopoweroff 0


# # Enable "focus follows mouse" for all X11 apps
# # i.e. hover over a window and start typing in it without clicking first
# #defaults write org.x.X11 wm_ffm -bool true

#################################################################################
echo -e "\nTime Machine"
################################################################################

# # Prevent Time Machine from prompting to use new hard drives as backup volume
# defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

# # Disable local Time Machine backups
# hash tmutil &>/dev/null && sudo tmutil disablelocal




















### TGT START HERE  ###

# #######################################
# # MARK: System Settings
# # Updates System Settings ("/System/Applications/System Settings.app")
# ########################################

# ## General#
# ### Airdrop & Handoff (x-apple.systempreferences:com.apple.AirDrop-Handoff-Settings)
# defaults write com.apple.sharingd DiscoverableMode -string "Contacts Only"
# ### Language & Region (x-apple.systempreferences:com.apple.Localization-Settings)
# defaults write -g AppleTemperatureUnit -string "Fahrenheit"
# defaults write -g AppleLiveTextEnabled -bool true # Enable Live Text (Select text in images to copy or take action)
# ### Time Machine (x-apple.systempreferences:com.apple.Time-Machine-Settings)
# # Exclude ~/Github and `$XDG_CACHE_HOME` from Time Machine backups
# sudo defaults write /Library/Preferences/com.apple.TimeMachine SkipPaths -array \
#   "${HOME}/Github" \
#   "${HOME}/.cache"# ## Appearance (x-apple.systempreferences:com.apple.Appearance-Settings)
# defaults write -g AppleReduceDesktopTinting -bool true     # Disable "Allow wallpaper tinting in windows"
# defaults write -g AppleScrollerPagingBehavior -bool true   # Click in the scroll bar to "Jump to the spot that's clicked"
# ## Accessibility (x-apple.systempreferences:com.apple.Accessibility)
# ### Display
# defaults write com.apple.access showWindowTitlebarIcons -bool true # Enable "Show window title icons"
# ### Live Captions# defaults write com.apple.Accessibility FaceTimeCaptions -bool false # Disable "Live Captions in FaceTime
# ## Desktop & Dock (x-apple.systempreferences:com.apple.Desktop-Settings)
# ### Dock
# defaults write -g AppleActionOnDoubleClick -string "Maximize"    # Set "Double-click a window's title bar" to "Zoom"
# ### Desktop & Stage Manager# defaults write com.apple.WindowManager StandardHideDesktopIcons -bool false        # Enable "Show Items" for "Desktop"
# defaults write com.apple.WindowManager EnableStandardClickToShowDesktop -bool true # Set "Click wallpaper to reveal desktop" to "Always"
# defaults write com.apple.WindowManager GloballyEnabled -bool false                 # Disable "Stage Manager"
# ### Widgets
# ### Windows# defaults write com.apple.dock windowtabbing -string "always" # Prefer tabs when opening documents
# defaults write -g NSCloseAlwaysConfirmsChanges -bool true    # Enable "Ask to keep changes when closing documents"
# defaults write com.apple.WindowManager EnableTilingByEdgeDrag -bool true        # Enable "Drag windows to screen edges to tile"
# defaults write com.apple.WindowManager EnableTopTilingByEdgeDrag -bool true     # Enable "Drag windows to menu bar to fill screen"
# defaults write com.apple.WindowManager EnableTilingOptionAccelerator -bool true # Enable "Hold ‚å• key while dragging windows to tile"
# defaults write com.apple.WindowManager EnableTiledWindowMargins -bool false     # Disable "Tiled windows have margins"
# ### Stage Manager# defaults write -g AppleSpacesSwitchOnActivate -bool true                     # Enable "When switching to an application, switch to a Space with open windows for the application"
# defaults write com.apple.dock expose-group-apps -bool true                   # Enable "Group windows by application"
# defaults write com.apple.spaces spans-displays -bool false                   # Enable "Displays have separate Spaces"
# ## Spotlight (x-apple.systempreferences:com.apple.Spotlight-Settings)
# defaults write com.apple.assistant.support "Search Queries Data Sharing Status" -int 2 # Disable "Help Apple Improve Search"
# ## Notifications (x-apple.systempreferences:com.apple.preference.notifications)
# defaults write com.apple.ncprefs content_visibility -int 2 # Set "Show previews" to "When Unlocked"
# ## Sound (x-apple.systempreferences:com.apple.preference.sound)
# sudo nvram StartupMute=%01 # Disable "Play sound on startup"
# ## Lock Screen (x-apple.systempreferences:com.apple.Lock-Screen-Settings)
# sudo pmset -a proximitywake 1
# sudo pmset -b displaysleep 5 disksleep 5 sleep 10     # Battery
# sudo pmset -c displaysleep 30 disksleep 30 sleep 60   # Charger (wall power)
# ## Privacy & Security (x-apple.systempreferences:com.apple.preference.security)
# ### Sensitive Content Warning
# defaults write com.apple.communicationSafetySettings "analyticsEnabled" -bool false # Disable "Improve Sensitive Content Warning"
# ### Analytics & Improvements
# defaults write /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory AutoSubmit -bool false # Disable "Share Mac Analytics"
# defaults write com.apple.assistant.support "Siri Data Sharing Opt-In Status" -int 2                         # Disable "Improve Siri & Dictation"
# defaults write com.apple.Accessibility AXSAudioDonationSiriImprovementEnabled -bool false                   # Disable "Improve Assistive Voice Features"
# ### Apple Advertising
# defaults write com.apple.AdLib allowApplePersonalizedAdvertising -bool false # Disable "Personalized Ads"
# ### Apple Intelligence Report
# defaults write com.apple.AppleIntelligenceReport reportDuration -int 0 # Disable "Apple Intelligence Report"
# ### Security
# sudo spctl --global-enable # Set "Allow applications from" to "App Store" if it is "Anywhere"
# if [[ "$(spctl --test-devid-status)" == "devid disabled" ]]; then
#   url='\e]8;;x-apple.systempreferences:com.apple.settings.PrivacySecurity\aSystem Settings > Privacy & Security\e]8;;\a'
#   echo -e "The option 'Allow applications from' is currently set to 'App Store'. Please go to ${url} and update it to 'App Store and Known Developers'"
# fi
# echo ""
# echo "###############################################################################"
# echo "SSH"
# echo "###############################################################################"
# echo ""
# echo "Enable remote login"
# launchctl load -w /System/Library/LaunchDaemons/ssh.plist
# echo "###############################################################################"
# echo "launchctl"
# echo "###############################################################################
"# echo ""
# echo "Turn on locate db"
# launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist# echo ""
# echo "Using the latest SSH from Homebrew on OSX..."
# echo ""
# # http://apple.stackexchange.com/a/223855
# echo "This changes need to be done manually."
# echo "First disable System Integrity Protection (SIP):"
# echo "* Reboot your Mac into Recovery Mode by restarting your " \
#     "computer and holding down cmd+R until the Apple logo appears " \
#     "onyour screen."
# echo "* In the menubar click Utilities > Terminal."
# echo "* In the Terminal window, type in csrutil disable."
# echo "* Restart your Mac."
# echo "Next update the ssh-agent preferences:"
# echo "* launchctl stop org.openbsd.ssh-agent"
# echo "* launchctl unload -w /System/Library/LaunchAgents/org.openbsd.ssh-agent.plist"
# echo "* emacs -nw /System/Library/LaunchAgents/org.openbsd.ssh-agent.plist"
# echo "* launchctl load -w -S Aqua /System/Library/LaunchAgents/org.openbsd.ssh-agent.plist"
# echo "Finally, re-enable SIP in Recovery Mode with csrutil enable."
# echo "###############################################################################"
# echo "OmniFocus"
# echo "###############################################################################"
# echo ""
# echo "Add service shortcut"
# /usr/libexec/PlistBuddy -c \
#     "Add :NSServicesStatus:'com.omnigroup.OmniFocus2 - OmniFocus 2\: Send to Inbox - _jot':key_equivalent string '@\$x'" \
#     pbs.plist >/dev/null 2>&1
# /System/Library/CoreServices/pbs -flush
# echo "###############################################################################"
# echo "Airplay"
# echo "###############################################################################"
# echo ""
# echo "Show mirroring options"
# /usr/libexec/PlistBuddy -c "Set showInMenuBarIfPresent true" \
#     com.apple.airplay.plist
# echo "###############################################################################"
# echo "pmset"
# echo "###############################################################################"
# ## Show All Power Management Settings
# #sudo pmset -g# # The -a, -b, -c, -u flags determine whether the settings apply to
# # battery ( -b ), charger (wall power) ( -c ), UPS ( -u ) or all ( -a ).
# echo "###############################################################################"
# echo "System Preferences/General"
# echo "###############################################################################"
# plist="com.apple.LaunchServices/com.apple.launchservices.secure.plist"
# echo ""
# echo "Set my default apps for web"
# plb=/usr/libexec/PlistBuddy
# lsh=":LSHandlers:"
# add="Add ${lsh}"
# remove="Remove ${lsh}"
# set="Set ${lsh}"
# add_lsh() {
#     menuitem="${1}"
#     "${plb}" -c "${remove}${menuitem}" "${plist}"
#     "${plb}" -c "${add}${menuitem} dict" "${plist}"
#     "${plb}" -c "${add}${menuitem}:showForUpdates bool" "${plist}"
#     "${plb}" -c "${set}${menuitem}:showForUpdates true" "${plist}"
#     "${plb}" -c "${add}${menuitem}:popupFix bool" "${plist}"
#     "${plb}" -c "${set}${menuitem}:popupFix false" "${plist}"
#     "${plb}" -c "${add}${menuitem}:updateDisplayTime integer" "${plist}"
#     "${plb}" -c "${set}${menuitem}:updateDisplayTime 60" "${plist}"
#     "${plb}" -c "${add}${menuitem}:controlled integer" "${plist}"
#     "${plb}" -c "${set}${menuitem}:controlled 1" "${plist}"
# }# add_app_settings "com.apple.menuextra.bluetooth"
# add_app_settings "com.box.sync"
# add_app_settings "com.corecode.SMARTReporter"
# add_app_settings "com.getdropbox.dropbox"
# add_app_settings "com.google.GoogleDrive"
# add_app_settings "com.softorino.iBetterCharge"
# add_app_settings "net.tunnelblick.tunnelblick"
# add_app_settings "org.herf.Flux"# menuitem="com.apple.menuextra.volume"
# "${plb}" -c "${add}${menuitem} dict" "${plist}"
# "${plb}" -c "${add}${menuitem}:showForUpdates bool" "${plist}"
# "${plb}" -c "${set}${menuitem}:showForUpdates false" "${plist}"
# "${plb}" -c "${add}${menuitem}:popupFix bool" "${plist}"
# "${plb}" -c "${set}${menuitem}:popupFix false" "${plist}"
# "${plb}" -c "${add}${menuitem}:updateDisplayTime integer" "${plist}"
# "${plb}" -c "${set}${menuitem}:updateDisplayTime 5" "${plist}"
# "${plb}" -c "${add}${menuitem}:controlled integer" "${plist}"
# "${plb}" -c "${set}${menuitem}:controlled 2" "${plist}"
# echo "###############################################################################"
# echo "System Preferences/Security & Privacy"
# echo "###############################################################################"
# echo "Want to enable FileVault?"
# select yn in "Yes" "No"; do
#     case "${yn}" in
#     Yes)
#         fdesetup enable
#         break
#         ;;
#     No) exit ;;
#     *) ;;
#     esac
# done
# echo "###############################################################################"
# echo "System Preferences"
# echo "###############################################################################"
# core_apps="/System/Library/CoreServices/Applications"
# archives_pref="${core_apps}/Archive Utility.app/Contents/Resources/Archives.prefPane"
# echo ""
# echo "Install hidden Archive settings preference pane"
# cp -r "${archives_pref}" /Library/PreferencePanes/.
# echo ""
# echo "Symlink Network Utility.app"
# ln -s "${core_apps}/Network Utility.app" /Applications/.
# echo ""
# echo "Symlink Feedback Assistant.app"
# ln -s "${core_apps}/Feedback Assistant.app" /Applications/.
# echo ""
# echo "Symlink Directory Utility.app"
# ln -s "${core_apps}/Directory Utility.app" /Applications/.
# echo "###############################################################################"
# echo "systemsetup"
# echo "###############################################################################"
# ## Check System Sleep Idle Time
# #systemsetup -getcomputersleep# echo ""
# echo "Turn off wake on network access"
# systemsetup -setwakeonnetworkaccess off

# Show first name before last name
# defaults write com.apple.addressbook ABNameDisplay -int 0
# Sort by last name
# defaults write com.apple.addressbook ABNameSortingFormat -string "sortingLastName"  # sortingFirstName
# Turn on Firewall
# defaults write com.apple.alf globalstate -bool true
# Enable stealth mode
# defaults write com.apple.alf stealthenabled -bool true
# Allow signed applications to receive incoming connections
# defaults write com.apple.alf allowsignedenabled -bool true
# Dictionary - Reuse definition window
# defaults write com.apple.Dictionary ProhibitNewWindowForRequest -bool true

# DiskUtility - Hide hidden partitions
# defaults write com.apple.DiskUtility DUShowEveryPartition -bool false

# Dock - Turn off bouncing icons
# defaults write com.apple.dock no-bouncing -bool true

# Dock - Move to bottom middle of the screen
# defaults write com.apple.dock pinning -string "middle"  # Other options: "start", "end".

# Dock - Move to bottom middle of the screen
# defaults write com.apple.dock orientation -string "bottom"  # Other options: "left", "right".

# Dock - Enabling iTunes track notifications
# defaults write com.apple.dock itunes-notifications -bool true

# Dock - Set springboard rows
# defaults write com.apple.dock springboard-rows -int 8

# Dock - Set springboard columns
# defaults write com.apple.dock springboard-columns -int 8

# Dock - Making launchpad better
# defaults write com.apple.dock ResetLaunchPad -bool true

# Dock - Make animation snappier
# defaults write com.apple.dock workspaces-edge-delay -float 0.1

# Menu Extra - Use 24-hour format
# defaults write com.apple.menuextra.clock DateFormat -string "EEE HH:mm"  # Other values, e.g., "EEE MMM d  h:mm a".
# MenuMeters - Update disk information only every 1s
# defaults write com.ragingmenace.MenuMeters DiskInterval -float 1.0

# Use 24-hour format
# defaults write NSGlobalDomain AppleICUForce24HourTime -bool true
# Use Monday as the first day of the week
# defaults write NSGlobalDomain AppleFirstWeekday -string '{gregorian = 2;}'
# Show fast user switching menu as [Icon]
# defaults write NSGlobalDomain userMenuExtraStyle -int 2
# UI - Set action for double click on titlebar
# defaults write NSGlobalDomain AppleActionOnDoubleClick -string "Maximize"  # "Maximize", "Minimize".
# UI - Enable menubar transparency
# defaults write NSGlobalDomain AppleEnableMenuBarTransparency -bool true
# UI - Enable opening and closing window animations
# defaults write NSGlobalDomain NSAutomaticWindowAnimationsEnabled -bool true
# Input - Enable continuous spell checking
# defaults write NSGlobalDomain NSAllowContinuousSpellChecking -bool true
# Photo Booth - Enable the debug menu
# defaults write com.apple.PhotoBooth EnableDebugMenu -bool true

# Preview - Scale images by default when printing
# defaults write com.apple.Preview PVImagePrintingScaleMode -bool true

# Preview - Auto-rotate by default when printing
# defaults write com.apple.Preview PVImagePrintingAutoRotate -bool true

# Reminders - Show debug menu
# defaults write com.apple.reminders RemindersDebugMenu -bool true

# Default duration for new event
# defaults write com.apple.iCal Default duration in minutes for new event -int 60

# ##
# Screensaver - Show with clock
# defaults write com.apple.screensaver showClock -bool true
# Screensaver - Set activation delay for screensaver
# defaults write com.apple.screensaver
#     host: currentHost idleTime -int 0
# Screensaver - Set module name
# defaults write com.apple.screensaver moduleName -string "Aerial"
# Screensaver - Set display name
# defaults write com.apple.screensaver displayName -string "Aerial"
# Screensaver - Set path
# defaults write com.apple.screensaver path -string "/Users/ftod/Library/Screen Savers/Aerial.saver"
# Screensaver - Set type
# defaults write com.apple.screensaver type -int 0

# XQuartz ‚Äì Auto-quit on close last window
# defaults write org.macosforge.xquartz.X11 wm_auto_quit -bool true

# Xcode - Turn off welcome windows
# defaults write com.apple.dt.Xcode XCShowWelcomeWindow -bool false

# Trackpad ‚Äì enable click and drag
# defaults write com.apple.AppleMultitouchTrackpad Dragging -int 1
# Trackpad - enable click and drag for bluetooth trackpads
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Dragging -int 1
# System Preferences ‚Äì Organize Alphabetically
# defaults write com.apple.systempreferences ShowAllMode -bool true
# IOKit - Enable display from automatically adjusting brightness
# defaults write com.apple.iokit.AmbientLightSensor Automatic Display Enabled -bool true
# IOKit - Disable keyboard from automatically adjusting backlight brightness in low light
# defaults write com.apple.iokit.AmbientLightSensor Automatic Keyboard Enabled -bool false
# Network Connect ‚ÄìShow Time Connected to VPN
# defaults write com.apple.networkConnect VPNShowTime -int 1
# Spotlight - Disable indexing network volumes
# defaults write /Library/Preferences/com.apple.SpotlightServer.plist ExternalVolumesIgnore -bool true

# # enable ssh logins
# systemsetup -setremotelogin on &>/dev/null
# # enable ntp
# systemsetup -setusingnetworktime on &>/dev/null
# # restart on power failure
# systemsetup -setrestartpowerfailure on &>/dev/null
# # disable Xcode Cloud upsell
# defaults write com.apple.dt.Xcode XcodeCloudUpsellPromptEnabled -bool false

# # Sets a space thousands separator
# defaults write NSGlobalDomain AppleICUNumberSymbols -dict 1 ' ' 17 ' '

# # Set keyboard to British
# defaults write com.apple.HIToolbox AppleCurrentKeyboardLayoutInputSourceID -string "com.apple.keylayout.British"

# Automatically illuminate built-in MacBook keyboard in low light
defaults write com.apple.BezelServices kDim -bool true

# Turn off keyboard illumination when computer is not used for 5 minutes\n"
defaults write com.apple.BezelServices kDimTime -int 300

# # Enable the MacBook Air SuperDrive on any Mac
# #sudo nvram boot-args="mbasd=1"

# # Hide the Game Centre
# if [ -d /Applications/game\ center.app ]; then
#   chflags hidden /Applications/game\ center.app
# fi

# Sidebar list - these are all defaults, but here if you wish to change them.
defaults write com.apple.sidebarlists systemitems -dict-add ShowEjectables -bool true
defaults write com.apple.sidebarlists systemitems -dict-add ShowRemovable -bool true
defaults write com.apple.sidebarlists systemitems -dict-add ShowServers -bool true
defaults write com.apple.sidebarlists systemitems -dict-add ShowHardDisks -bool true
# # Enable dock magnification and set to 52
# defaults write com.apple.dock magnification -bool true
# defaults write com.apple.dock largesize -float 52

# FIXME: Split into different files!

{{ end -}}
