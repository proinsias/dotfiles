#!/usr/bin/env bash
# shellcheck disable=SC2312

# FIXME: https://nix.dev/tutorials/first-steps/reproducible-scripts.html
# FIXME: Add something below to run devbox upgrade

# FIXME: Update ansible files so I can pick and chose with tags what to run.

# shellcheck disable=SC1090
source ~/.envrc

# Intel homebrew
test -f /usr/local/bin/brew && SHELLENV="$(/usr/local/bin/brew shellenv)" && eval "${SHELLENV}"
# M1 home-brew. Do second in case we are also using Intel via Rosetta.
test -f /opt/homebrew/bin/brew && SHELLENV="$(/opt/homebrew/bin/brew shellenv)" && eval "${SHELLENV}"

host="$(hostname -s)"
export host
dt="$(gdate --iso-8601)"
export dt
HOMEBREW_PREFIX="$(brew --prefix)"
export HOMEBREW_PREFIX
RUBY_HOME="${HOMEBREW_PREFIX}/opt/ruby"
export RUBY_HOME
RUBY_VERSION="3.1.0"
export RUBY_VERSION
GEM_HOME="${RUBY_HOME}/lib/ruby/gems/${RUBY_VERSION}"
export GEM_HOME
GEM_PATH="${RUBY_HOME}/lib/ruby/gems/${RUBY_VERSION}"
export GEM_PATH
PATH="${HOME}/bin:${HOME}/.local/bin:/usr/local/google-cloud-sdk/bin:${RUBY_HOME}/bin${PATH:+:${PATH}}"
export PATH
DEBIAN_FRONTEND="noninteractive"
export DEBIAN_FRONTEND

updateall() {
    if type apt-get >/dev/null 2>&1; then
        echo -e "\napt-get update:"
        apt-get update --yes
        echo -e "\napt-get upgrade:"
        apt-get upgrade --yes
    fi

    if type pre-commit-autoupdate >/dev/null 2>&1; then
        echo -e "\npre-commit-autoupdate:"
        pre-commit-autoupdate | grep -v "already up to date!"
    fi

    if type topgrade >/dev/null 2>&1; then
        echo -e "\ntopgrade:"
        topgrade --cleanup --no-retry --skip-notify --yes \
            --disable certbot gcloud git_repos mas nix system tlmgr uv
    fi

    if type ~/GitHub/dotfiles/install.sh >/dev/null 2>&1; then
        echo -e "\ndotfiles/install.sh:"
        ~/GitHub/dotfiles/install.sh
    fi

    if type uncommitted-francis >/dev/null 2>&1; then
        echo -e "\nuncommitted-francis:"
        uncommitted-francis "${HOME}"
    fi

    if type docker-cleanup >/dev/null 2>&1; then
        docker-cleanup
    fi

    if type apt-get >/dev/null 2>&1; then
        apt list --upgradeable
    fi

    if type brew >/dev/null 2>&1; then
        brew outdated
    fi

    if type gcloud >/dev/null 2>&1; then
        echo -e "\ngcloud components list 2>&1 | grep \"Update Available\":"
        # shellcheck disable=SC2312
        gcloud components list 2>&1 | grep "Update Available"
        # To upgrade, run: `sudo gcloud components update --quiet`.
    fi

    #    if type devbox >/dev/null 2>&1; then
    #        echo -e "\ndevbox updates:"
    #        devbox global update
    #        for dir in "${HOME}"/GitHub/*; do
    #            if [ -d "${dir}" ]; then
    #                cd "${dir}"
    #               if [ -f "${dir}/devbox.json" ]; then
    #                   devbox update
    #                fi
    #            fi
    #        done
    #    fi

    if [[ "${-#*i}" == "$-" ]]; then
        if type topgrade >/dev/null 2>&1; then
            echo -e "\ntopgrade interactive:"
            sudo -v
            topgrade --cleanup --no-retry --skip-notify --yes \
                --only certbot gcloud nix system tlmgr
        fi

        # shellcheck disable=SC2065
        if test -d ~/favs/gh/mac-playbook >/dev/null 2>&1; then
            echo -e "\n~/favs/gh/mac-playbook:"
            cd "${HOME}"/favs/gh/mac-playbook || exit

            ansible-playbook main.yml --inventory inventory

            cd - || exit
        fi

    fi

}

tmpfile="$(mktemp)"

updateall |& tee "${tmpfile}"

# shellcheck disable=SC2154
pop <"${tmpfile}" \
    --to "${POP_TO}" \
    --subject "update_all_${host}_${dt}.txt"
