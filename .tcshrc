### BASIC SETUP

if (`filetest -e ~/.tcshrc.local`) then
        source ~/.tcshrc.local
endif

## path

set path = ( $path /usr/local/bin /usr/sbin /sbin )

# Do not put '.' in the path - for security reasons
# Don't put final / in path

## Check for non-existent variables

if (! $?LD_LIBRARY_PATH ) setenv LD_LIBRARY_PATH ""
if (! $?MANPATH ) setenv MANPATH ""
#if (! $?DISPLAY) setenv DISPLAY :0.0
#if (! ${?hostname} ) setenv hostname 'abc.def.com'

### SETUP FOR VARIOUS PROGRAMS

## For MySQL
set path = ( /usr/local/mysql/bin $path )

## homebrew
set path = (/usr/local/sbin $path )

## pgplot
setenv PGPLOT_DIR /usr/local/pgplot
setenv PGPLOT_FONT /usr/local/pgplot/grfont.dat
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/usr/local/pgplot/

## makee
setenv MAKEE_DIR /usr/local/makee
set path = ( $path ${MAKEE_DIR}/bin )

### EXTRAS

setenv MANPATH /usr/local/man:${MANPATH}

# Set default printer
#setenv PRINTER ps

limit coredumpsize 0
# no core dumps, please

unlimit filesize
# Unlimit the size of a file you generate.

unlimit cputime
# Unlimit the time your processes take to run.

#set this for all shells

set noclobber

# -- changing screen colors --
setenv TERMCOLOR_DIR ${HOME}/bin/colorssh
# ideally we would only do this if we are actually physically
# in front of this specific macintosh... but i don't know how
# to check that
if ( ${TERM} != "dumb") then
  alias decolorterm '${TERMCOLOR_DIR}/termcolor_set.sh light gray'
  alias su  '${TERMCOLOR_DIR}/termcolor_wrap.sh \su \!*'
  alias ssh '${TERMCOLOR_DIR}/termcolor_wrap.sh \ssh \!*'
  alias rlogin '${TERMCOLOR_DIR}/termcolor_wrap.sh \rlogin \!*'
  alias slogin '${TERMCOLOR_DIR}/termcolor_wrap.sh \slogin \!*'
endif

setenv EDITOR emacs
#set edit=$EDITOR

# Completion ignores case, considers separators

#set lcd = ( )  #  add parents of frequently used directories

#stty erase ^H

#         aliases for all shells

set complete='enhance'

if ($?tcsh) then
        set correct=all
# Spell check all                                                           
# set correct=cmd                                                           
# Spell check cmds                                                          
# unset correct                                                             
        set nobeep
# Disables the audio bell                                                    
set autolist = ambiguous
# make completions behave more sensibly                                     
# set autolist=beepnone                                                     
# List possibilites on ambiguous tabs                                       
# unset autolist                                                            
# set autocorrect                                                            
# instead, try to correct spelling

unalias *       
# Clear out any unwanted aliases we've picked up

umask 002
# Default file protection setting
# User r/w, group r/w, everybody r.
# 077 - user r/w, group nothing, everybody nothing.

#
# Completions
#

#complete {cc,gcc} 'p/*/f:*.{c,C,cc,CC,cpp,CPP}/'
#complete {cd,pushd} 'p/1/d/'
#complete finger 'p/*/u/'
#complete gunzip 'p/*/f:*.{z,Z,gz,GZ,tgz,TGZ}/'
#complete gv 'p/*/f:*.{ps,eps,PS,EPS,pdf,PDF,ps.gz,ps.GZ,PS.gz,,PS.GZ,pdf.gz,pdf.GZ,PDF.gz,PDF.GZ,eps.gz,EPS.gz,eps.GZ,EPS.GZ}/'
#complete javac 'p/*/f:*.{java,JAVA}/'
#complete latex 'p/*/f:*.{tex,TEX,dtx,DTX,ins,INS}/'
#complete more 'p/*/f:^{core,*.[oa],*.fasl}/'
#complete perl 'p/*/f:*.{cgi,pl,CGI,PL}/'
#complete printenv 'p/1/e/'
#complete rm 'n/*/f:*/'
#complete rmdir 'p/*/d/'
#complete set 'c/*=/f/' p/1/s/= n/=/f/
#complete set 'p/1/s/'
#complete setenv 'p/1/e/'
#complete tar 'p/*/f:*.{tar,tgz,TAR,TGZ,tar.gz,TAR.GZ}/'
#complete tex 'p/*/f:*.{tex,TEX}/'
#complete unzip 'p/*/f:*.{zip,ZIP,jar,JAR,exe,EXE}/'
#complete vi 'p/*/f:^{core,*.[oa],*.fasl}/'
#complete xv 'p/*/f:*.{jpg,jpeg,gif,bmp,pcx,tif,tiff,png,JPG,JPEG,GIF,BMP,PCX,TIF,TIFF,PNG,pnm,PNM,ppm,PPM,pbm,PBM,pgm,PGM}/'
#complete zcat 'n/*/f:*.{gz,GZ,z,Z,tgz,TGZ}/'

#
# Aliases
#

source ~/.alias.csh

#
# Others
#

mesg y
# allow people to write to your terminal

# Tex
# // means search all the subdirectories

#setenv MYTEX            /Users/ftod/Library/texmf
#setenv TEXMF            /sw/share
#setenv TEXINPUTS	.:${MYTEX}/tex//:${TEXMF}/texmf//
# BibTeX
#setenv  BIBINPUTS       .:${MYTEX}/bibtex/bib//:${TEXMF}/bibtex/bib//
#setenv	BSTINPUTS	.:${MYTEX}/bibtex/bst//:${TEXMF}/bibtex/bst//

#setenv	HOMETEXMF       ~ftod/Library/texmf

#setenv  TEXMFMAIN       /sw/share/texmf
#setenv  TEXMFDIST       /sw/share/texmf-dist
#setenv  TEXMFLOCAL      /sw/share/texmf-local

#setenv	TEXINPUTS	.:$HOMETEXMF///:$TEXMF///
# BibTeX
#setenv  BIBINPUTS       .:$HOMETEXMF/bibtex/bib//:$TEXMF/bibtex/bib//
#setenv  BSTINPUTS       .:$HOMETEXMF/bibtex/bst//:$TEXMF/bibtex/bst//
## Miscellaneous TeX utilities
#setenv	INDEXSTYLE	.:$TEXMF/makeindex/inputs//

# LEAVE THIS TILL LAST
#setenv  TEXMF      '{'"$HOMETEXMF":\!\!"$TEXMFMAIN":\!\!"$TEXMFLOCAL":\!\!"$TEXMFDIST"'}'

# command to recompile ls-R is sudo mktexlsr

# From http://www.entropy.ch/software/macosx/welcome.html
# Don't re-source this file!

setenv SHORTHOST `echo -n $HOST | sed -e 's%\..*%%'`
alias precmd 'printf "\033]0;%s @ $SHORTHOST\007" "${cwd}" | sed -e "s%$HOME%~%"'
sched +0:00 alias postcmd 'printf "\033]0;%s @ $SHORTHOST\007" "\!#"'

# Also from http://www.entropy.ch/software/macosx/welcome.html
cut -f 1 -d ' ' ~/.ssh/known_hosts | perl -p -e 's#,#\n#' | sort -u | perl -e 'chomp(@x = <>); print map {"$x[$_]\n"} grep {$x[$_ + 1] !~ /^$x[$_]\..+$/m} (0 .. $#x);' >! ~/.known_ssh_hostnames
alias list_all_hostnames cat ~/.known_ssh_hostnames
#complete scp 'p/*/`scp_completions`/'

# The cd command will search the
# list of paths defined in the cdpath variable for the directory
# provided as its argument.

if ( $TERM == screen) then
# ---------------- screen setup ----------                                     
  if (!~ $?SHOWED_SCREEN_MESSAGE ) then
    set detached_screens=`screen -list | grep Detached`
    if ( "$detached_screens" != "" ) then
      echo "+-------------------------------------+"
      echo "| Detached screens are available:     |"
      echo "$detached_screens"
      echo "+-------------------------------------+"
    else
      echo "[ screen is activated ]"
    endif
    setenv SHOWED_SCREEN_MESSAGE true
  endif

    set prompt = "%{\033[0;1;32m%}[%{\033[31m%}%d%w%D %T %{\033[34m%}%n@%m:%{\033[35m%}#$WINDOW %!(%?):%{\033[36m%}%c%{\033[32m%}]%{\033[0m%}%# "
else
    set prompt = "%{\033[0;1;32m%}[%{\033[31m%}%d%w%D %T %{\033[34m%}%n@%m:%{\033[35m%}%!(%?):%{\033[36m%}%c%{\033[32m%}]%{\033[0m%}%# "
endif

