# Use this file to configure the Overcommit hooks you wish to use. This will
# extend the default configuration defined in:
# https://github.com/brigade/overcommit/blob/master/config/default.yml
#
# At the topmost level of this YAML file is a key representing type of hook
# being run (e.g. pre-commit, commit-msg, etc.). Within each type you can
# customize each hook, such as whether to only run it on certain files (via
# `include`), whether to only display output if it fails (via `quiet`), etc.
#
# For a complete list of hooks, see:
# https://github.com/brigade/overcommit/tree/master/lib/overcommit/hook
#
# For a complete list of options that you can use to customize hooks, see:
# https://github.com/brigade/overcommit#configuration
#
# required:     If true, this hook cannot be skipped via the SKIP
#               environment variable
# quiet:        If true, this hook does not display any output unless
#               it warns/fails
# description:  Message displayed while hook is running.
#
# Within a hook category, there is a special type of hook
# configuration that applies to all hooks in the category. This
# configuration looks like a normal hook configuration, except it has
# the name ALL:
#
# PreCommit:
#   ALL:
#     problem_on_unmodified_line: warn
#     requires_files: true
#     required: false
#     quiet: false
#
# SKIP=RuboCop git commit
# ONLY=RuboCop git commit
# OVERCOMMIT_DISABLE=1 ./my-custom-script

---
PreCommit:
  ALL:
    # report: report errors/warnings as-is regardless of line location (default)
    # warn: report errors as warnings if they are on lines you didn't modify
    problem_on_unmodified_line: warn
  BashSyntax:
    enabled: true
    quiet: false
    include: '**/*.sh'
    required_executable: 'bash-syntax'
  BrokenSymlinks:
    enabled: true
  BundleAudit:
    enabled: true
  BundleCheck:
    enabled: true
  BundleOutdated:
    enabled: true
  CaseConflicts:
    enabled: true
  CopyrightYear:
    enabled: true
    quiet: false
    required_executable: 'copyright-year'
  CssLint:
    enabled: true
  Eslint:
    enabled: true
  ExecutePermissions:
    enabled: true
    exclude:
      - 'bin/**/*'
      - 'ci/*.sh'
  FixMe:
    enabled: true
    exclude:
      - 'notebooks/*.ipynb'
      - 'notebooks/*/*.ipynb'
  ForbiddenBranches:
    enabled: false
  HardTabs:
    enabled: true
  Hadolint:
    enabled: true
  HtmlHint:
    enabled: true
  ImageOptim:
    enabled: true
  JavaCheckstyle:
    enabled: true
  Jscs:
    enabled: true
  JsHint:
    enabled: true
  JsLint:
    enabled: true
  JsonSyntax:
    enabled: true
  LicenseHeader:
    enabled: false
    license_file: 'LICENSE'
    include: '**/*.py'
  # Requires overcommit have access to git version 2.10 or higher.
  LineEndings:
    enabled: true
  LocalPathsInGemfile:
    enabled: true
  Mdl:
    enabled: true
  Pycodestyle:
    enabled: true
    flags:
      - '--max-line-length=120'
      - '--show-source'
  Pydocstyle:
    enabled: true
    flags:
      - '--explain'
      - '--source'
      - '--verbose'
    exclude:
      - 'jupyter/jupyter_notebook_config.py'
  Pyflakes:
    enabled: false
  Pylint:
    enabled: false
    flags:
      - '--max-line-length=120'
      - '--msg-template="{path}:{line}:{C}: {msg} ({symbol})"'
      - '--reports=n'
      - '--persistent=n'
    exclude:
      - 'jupyter/jupyter_notebook_config.py'
  PythonFlake8:
    enabled: true
    flags:
      - '--doctests'
      - '--max-complexity=10'
      - '--max-line-length=120'
      - '--show-source'
    exclude:
      - 'jupyter/jupyter_notebook_config.py'
  Reek:
    enabled: true
  RstLint:
    enabled: true
  RuboCop:
    enabled: true
  RubyLint:
    enabled: true
    exclude: '**/mdl.rb'
  SemiStandard:
    enabled: true
  Standard:
    enabled: true
  ShellCheck:
    enabled: true
    flags:
      - '--format=gcc'
      - '--external-sources'
      - '--shell=bash'
  Sqlint:
    enabled: false
  ToDos:
    enabled: false
    quiet: false
    required_executable: 'check-todos'
  TrailingWhitespace:
    enabled: true
  TravisLint:
    enabled: true
  W3cCss:
    enabled: true
  W3cHtml:
    enabled: true
  XmlLint:
    enabled: true
  XmlSyntax:
    enabled: true
  YamlLint:
    enabled: true
    flags:
      - '--config-data "{extends: default, rules: {line-length: {max: 120}}}"'
  YamlSyntax:
    enabled: true
    include:
      - '**/*.yaml'
      - '**/*.yml'
      - '**/.*.yml'  # To parse this!

CommitMsg:
  HardTabs:
    enabled: true
  RussianNovel:
    enabled: true
  SpellCheck:
    enabled: true
    install_command: 'brew install hunspell'
  TextWidth:
    enabled: true
    max_subject_width: 50
  MessageFormat:
    enabled: false
    pattern: '\[#(\d+)\](.+)'
    expected_pattern_message: '[#<Issue Id>] <Commit Message Description>'
    sample_message: '[#1234] Refactored Onboarding flow'

PostCheckout:
  BundleInstall:
    enabled: true
  GitLfs:
    enabled: true
  IndexTags:
    enabled: true
  SubmoduleStatus:
    enabled: true
    quiet: false
    recursive: true

PostCommit:
  BundleInstall:
    enabled: true
  GitGuilt:
    enabled: true
    requires_files: false
  GitLfs:
    enabled: true
  SubmoduleStatus:
    enabled: true
    quiet: false
    recursive: true

PostMerge:
  BundleInstall:
    enabled: true
  GitLfs:
    enabled: true
  IndexTags:
    enabled: true
  SubmoduleStatus:
    enabled: true
    quiet: false
    recursive: true

PostRewrite:
  BundleInstall:
    enabled: true
  IndexTags:
    enabled: true
  SubmoduleStatus:
    enabled: true
    quiet: false
    recursive: true

PrePush:
  GitLfs:
    enabled: true
  ProtectedBranches:
    enabled: true

PreRebase:
  MergedCommits:
    enabled: true

PreReceive:
  FreeSpace:
    enabled: true
    quiet: false
    required_executable: 'check-freespace'
