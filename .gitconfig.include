[alias]
    alias = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\t=> \\2/' | sort # show all defined aliases
    br = branch
    cam = commit -am
    ci = commit
    clone = clone --recursive
    co = checkout
    dc = diff --cached
    df = diff
    dump = cat-file -p
    find = !git ls-tree -r --name-only HEAD | grep --color $1 # Finds a filename in the git repository. Gives absolute location (from the git root)
    h = !git --no-pager log origin/master..HEAD --abbrev-commit --pretty=oneline # Fast overview of differences between master and my current branch
    hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short
    hist2 = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
    ign = ls-files -o -i --exclude-standard # Show files ignored by git
    ignore=!([ ! -e .gitignore ] && touch .gitignore) | echo $1 >>.gitignore # Quickly add a file/dir to .gitignore.
    lg = log -p
    lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
    logs = log -- stat # include files changed, insertions, and deletions
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = ls-files
    psuh = push
    pu = pull --recurse-submodules
    pull = pull --recurse-submodules
    r  = !git ls-files -z --deleted | xargs -0 git rm # Remove files which have been deleted
    st = status
    su = !git submodule update --init --recursive && git submodule\
	foreach --recursive git checkout master && git submodule\
	foreach --recursive git pull
    this = !git init && git add . && git commit -m \"initial commit\" # Make this directory a git repo
    type = cat-file -t
    unstage = reset HEAD --
[branch]
    # When branching off a remote branch, automatically let the local branch track the remote branch
    autosetupmerge = true
[color]
    branch = auto
    decorate = auto
    diff = auto
    grep = auto
    interactive = auto
    pager = true
    status = auto
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
	# Blue on black is hard to read in git branch -vv: use cyan instead
	upstream = cyan
[color "diff"]
    frag = magenta bold
    meta = yellow bold
    old = red bold
    new = green bold
    whitespace = red reverse # Highlight whitespace in diffs
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[commit]
  gpgSign = true
[core]
    attributesfile = ~/.gitattributes
    autocrlf = input
    editor = emacs
    excludesfile = ~/.gitignore
    # # Don't paginate output by default, default is less
	# pager = cat
    # Prevent showing files whose names contain non-ASCII symbols as unversioned.
    # http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
    precomposeunicode = false
    # Make `git rebase` safer on OS X
    # More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
    trustctime = false
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol # Highlight whitespace in diffs
[diff]
	# Use (i)ndex, (w)ork tree, (c)ommit, (o)bject prefixes instead of standard a, b.
	mnemonicprefix = true
	# Detect copies as well as renames
	renames = copies
	# Display submodule-related information (commit listings)
	submodule = log
    tool = icdiff
[difftool]
  prompt = false
[difftool "icdiff"]
  cmd = icdiff --head=5000 --highlight --line-numbers -L \"$BASE\" -L \"$REMOTE\" \"$LOCAL\" \"$REMOTE\"
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
[diff "astextplain"]
  textconv = ~/scripts/astextplain.sh
  # textconv = strings
[diff "bin"]
  # Use `hexdump` to diff binary files
  textconv = hexdump -v -C
[diff "exif"]
	textconv = exiftool
[diff "localizablestrings"]
  textconv = "iconv -f utf-16 -t utf-8"
[diff "nbconv"]
	textconv = ~/scripts/nb2py.sh
[fetch]
	prune = true
	# Auto-fetch submodule changes (sadly, won't auto-update)
	recurseSubmodules = on-demand
[filter "hawser"]
  # From GitHub for Mac
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
  # For Git-LFS
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[grep]
  lineNumber = true
[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1
[log]
	# Use abbrev SHAs whenever possible/relevant instead of full 40 chars
	abbrevCommit = true
	# Automatically --follow when given a single path
	follow = true
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true # synonym for 20
	stat = true
[mergetool "emerge"]
	cmd = emacs -Q \"$LOCAL\" \"$REMOTE\" \"$BASE\" \"$MERGED\"
[mergetool "sourcetree"]
	keepBackup = false
	trustExitCode = true
[pager]
  difftool = true
[push]
	default = matching
	# # Default push should only push the current branch to its push target, regardless of its remote name
	# default = upstream
	# When pushing, also push tags whose commit-ishs are now reachable upstream
	followTags = true
	# Not supported by bitbucket or github yet
  gpgSign = if-asked
[status]
	# Shows paths relative to the repository root
  # relativePaths = false
	# Display submodule rev change summaries in status
	submoduleSummary = true
	# Recursively traverse untracked directories to display all contents
	showUntrackedFiles = all
[tag]
	# Sort tags as version numbers whenever applicable, so 1.10.2 is AFTER 1.2.0.
	sort = version:refname
[versionsort]
	prereleaseSuffix = -pre
	prereleaseSuffix = .pre
	prereleaseSuffix = -beta
	prereleaseSuffix = .beta
	prereleaseSuffix = -rc
	prereleaseSuffix = .rc
