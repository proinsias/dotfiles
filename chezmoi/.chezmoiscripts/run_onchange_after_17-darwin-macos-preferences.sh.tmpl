{{- if (eq .chezmoi.os "darwin") -}}
#!/usr/bin/env bash

set -o errexit    # Exit on error. Append || true if you expect an error.
set -o errtrace   # Exit on error inside any functions or subshells.
set -o noclobber  # don't allow overwriting files
set -o nounset    # Don't allow use of undefined vars. Use ${VAR:-} to use an undefined VAR.
set -o pipefail   # Produce a failure return code if any pipeline command errors
shopt -s failglob # Cause globs that don't get expanded to cause errors

# FIXME: GT! Copy from mac-playbook

echo -e "\n\nSetting macOS preferences."

# ~/.macos — https://mths.be/macos

# Close any open System Preferences panes, to prevent them from overriding
# settings we're about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do
    sudo -n true
    sleep 60
    kill -0 "$$" || exit
done 2>/dev/null &

###############################################################################
echo -e "\n\General UI/UX"
###############################################################################

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# # Disable transparency in the menu bar and elsewhere on Yosemite
# defaults write com.apple.universalaccess reduceTransparency -bool true

# # Set highlight color to green
# defaults write NSGlobalDomain AppleHighlightColor -string "0.764700 0.976500 0.568600"

# # Set sidebar icon size to medium
# defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# Always show scrollbars
defaults write NSGlobalDomain AppleShowScrollBars -string "Always"
# Possible values: `WhenScrolling`, `Automatic` and `Always`

# # Disable the over-the-top focus ring animation
# # defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false

# # Adjust toolbar title rollover delay
# defaults write NSGlobalDomain NSToolbarTitleViewRolloverDelay -float 0

# # Disable smooth scrolling
# # (Uncomment if you're on an older Mac that messes up the animation)
# defaults write NSGlobalDomain NSScrollAnimationEnabled -bool false

# # Increase window resize speed for Cocoa applications
# defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

# Expand save panel by default
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

# # Expand print panel by default
# defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
# defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true
#
# # Save to disk (not to iCloud) by default
# defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false
#
# # Automatically quit printer app once the print jobs complete
# defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true
#
# # Disable the "Are you sure you want to open this application?" dialog
# defaults write com.apple.LaunchServices LSQuarantine -bool false
#
# # Remove duplicates in the "Open With" menu (also see `lscleanup` alias)
# # editorconfig-checker-disable-next-line
# /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user
#
# # Display ASCII control characters using caret notation in standard text views
# # Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`
# defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true
#
# # Disable Resume system-wide
# defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false
#
# # Disable automatic termination of inactive apps
# defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true
#
# # Disable the crash reporter
# #defaults write com.apple.CrashReporter DialogType -string "none"
#
# # Set Help Viewer windows to non-floating mode
# defaults write com.apple.helpviewer DevMode -bool true
#
# # Fix for the ancient UTF-8 bug in QuickLook (https://mths.be/bbo)
# # Commented out, as this is known to cause problems in various Adobe apps :(
# # See https://github.com/mathiasbynens/dotfiles/issues/237
# #echo "0x08000100:0" > ~/.CFUserTextEncoding
#
# # Reveal IP address, hostname, OS version, etc. when clicking the clock
# # in the login window
# sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
#
# # Disable Notification Center and remove the menu bar icon
# # launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
#
# # Disable automatic capitalization as it's annoying when typing code
# defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false
#
# # Disable smart dashes as they're annoying when typing code
# defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false
#
# # Disable automatic period substitution as it's annoying when typing code
# defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false
#
# # Disable smart quotes as they're annoying when typing code
# defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
#
# # Disable auto-correct
# defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
#
# # Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
# # all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.
# #rm -rf ~/Library/Application Support/Dock/desktoppicture.db
# #sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# #sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg
#
# ###############################################################################
# # Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
# ###############################################################################
#
# # Trackpad: enable tap to click for this user and for the login screen
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
# defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
# defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
#
# # Trackpad: map bottom right corner to right-click
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
# defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
# defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true
#
# # Disable "natural" (Lion-style) scrolling
# defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false
#
# # Increase sound quality for Bluetooth headphones/headsets
# defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
#
# # Enable full keyboard access for all controls
# # (e.g. enable Tab in modal dialogs)
# defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
#
# # Use scroll gesture with the Ctrl (^) modifier key to zoom
# defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
# defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
# # Follow the keyboard focus while zoomed in
# defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true
#
# # Disable press-and-hold for keys in favor of key repeat
# defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
#
# # Set a blazingly fast keyboard repeat rate
# defaults write NSGlobalDomain KeyRepeat -int 1
# defaults write NSGlobalDomain InitialKeyRepeat -int 20
#
# # Set language and text formats
# # Note: if you're in the US, replace `EUR` with `USD`, `Centimeters` with
# # `Inches`, `en_GB` with `en_US`, and `true` with `false`.
# defaults write NSGlobalDomain AppleLanguages -array "en" "nl"
# defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"
# defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
# defaults write NSGlobalDomain AppleMetricUnits -bool true
#
# # Show language menu in the top right corner of the boot screen
# sudo defaults write /Library/Preferences/com.apple.loginwindow showInputMenu -bool true
#
# # Set the timezone; see `sudo systemsetup -listtimezones` for other values
# sudo systemsetup -settimezone "Asia/Bangkok" >/dev/null
#
# # Stop iTunes from responding to the keyboard media keys
# #launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null
#
# ###############################################################################
# # Energy saving                                                               #
# ###############################################################################
#
# # # Enable lid wakeup
# # sudo pmset -a lidwake 1
#
# # # Restart automatically on power loss
# # sudo pmset -a autorestart 1
#
# # # Restart automatically if the computer freezes
# # sudo systemsetup -setrestartfreeze on
#
# # # Sleep the display after 15 minutes
# # sudo pmset -a displaysleep 15
#
# # # Disable machine sleep while charging
# # sudo pmset -c sleep 0
#
# # # Set machine sleep to 5 minutes on battery
# # sudo pmset -b sleep 5
#
# # # Set standby delay to 24 hours (default is 1 hour)
# # sudo pmset -a standbydelay 86400
#
# # # Never go into computer sleep mode
# # sudo systemsetup -setcomputersleep Off > /dev/null
#
# # # Hibernation mode
# # # 0: Disable hibernation (speeds up entering sleep mode)
# # # 3: Copy RAM to disk so the system state can still be restored in case of a
# # #    power failure.
# # sudo pmset -a hibernatemode 0
#
# # # Remove the sleep image file to save disk space
# # sudo rm /private/var/vm/sleepimage
# # # Create a zero-byte file instead…
# # sudo touch /private/var/vm/sleepimage
# # # …and make sure it can't be rewritten
# # sudo chflags uchg /private/var/vm/sleepimage
#
# ###############################################################################
# # Screen                                                                      #
# ###############################################################################
#
# # Require password immediately after sleep or screen saver begins
# # defaults write com.apple.screensaver askForPassword -int 1
# # defaults write com.apple.screensaver askForPasswordDelay -int 0
#
# # Save screenshots to the desktop
# defaults write com.apple.screencapture location -string "${HOME}/Desktop"
#
# # Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
# defaults write com.apple.screencapture type -string "png"
#
# # Disable shadow in screenshots
# defaults write com.apple.screencapture disable-shadow -bool true
#
# # Enable subpixel font rendering on non-Apple LCDs
# # Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501
# defaults write NSGlobalDomain AppleFontSmoothing -int 1
#
# # Enable HiDPI display modes (requires restart)
# sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
#
# ###############################################################################
# # Finder                                                                      #
# ###############################################################################
#
# # Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons
# defaults write com.apple.finder QuitMenuItem -bool true
#
# # Finder: disable window animations and Get Info animations
# defaults write com.apple.finder DisableAllAnimations -bool true
#
# # Set Desktop as the default location for new Finder windows
# # For other paths, use `PfLo` and `file:///full/path/here/`
# defaults write com.apple.finder NewWindowTarget -string "PfDe"
# defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"
#
# # Show icons for hard drives, servers, and removable media on the desktop
# defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
# defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
# defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
# defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
#
# # Finder: show hidden files by default
# #defaults write com.apple.finder AppleShowAllFiles -bool true
#
# # Finder: show all filename extensions
# defaults write NSGlobalDomain AppleShowAllExtensions -bool true
#
# # Finder: show status bar
# defaults write com.apple.finder ShowStatusBar -bool true
#
# # Finder: show path bar
# defaults write com.apple.finder ShowPathbar -bool true
#
# # Display full POSIX path as Finder window title
# defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
#
# # Keep folders on top when sorting by name
# defaults write com.apple.finder _FXSortFoldersFirst -bool true
#
# # When performing a search, search the current folder by default
# defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
#
# # Disable the warning when changing a file extension
# defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
#
# # Enable spring loading for directories
# defaults write NSGlobalDomain com.apple.springing.enabled -bool true
#
# # Remove the spring loading delay for directories
# defaults write NSGlobalDomain com.apple.springing.delay -float 0
#
# # Avoid creating .DS_Store files on network or USB volumes
# defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
# defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
#
# # Disable disk image verification
# defaults write com.apple.frameworks.diskimages skip-verify -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
#
# # Automatically open a new Finder window when a volume is mounted
# defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
# defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
# defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
#
# # Show item info near icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
#
# # Show item info to the right of the icons on the desktop
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist
#
# # Enable snap-to-grid for icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
#
# # Increase grid spacing for icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
#
# # Increase the size of icons on the desktop and in other icon views
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
# # editorconfig-checker-disable-next-line
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
#
# # Use list view in all Finder windows by default
# # Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`
# defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
#
# # Enable the warning before emptying the Trash
# defaults write com.apple.finder WarnOnEmptyTrash -bool true
#
# # Enable AirDrop over Ethernet and on unsupported Macs running Lion
# defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true
#
# # Show the ~/Library folder
# chflags nohidden ~/Library && xattr -d com.apple.FinderInfo ~/Library
#
# # Show the /Volumes folder
# sudo chflags nohidden /Volumes
#
# # Remove Dropbox's green checkmark icons in Finder
# # file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
# # [ -e "${file}" ] && mv -f "${file}" "${file}.bak"
#
# # Expand the following File Info panes:
# # "General", "Open with", and "Sharing & Permissions"
# defaults write com.apple.finder FXInfoPanesExpanded -dict \
#     General -bool true \
#     OpenWith -bool true \
#     Privileges -bool true
#
# ###############################################################################
# # Dock, Dashboard, and hot corners                                            #
# ###############################################################################
#
# # Enable highlight hover effect for the grid view of a stack (Dock)
# defaults write com.apple.dock mouse-over-hilite-stack -bool true
#
# # Set the icon size of Dock items to 36 pixels
# defaults write com.apple.dock tilesize -int 36
#
# # Change minimize/maximize window effect
# defaults write com.apple.dock mineffect -string "scale"
#
# # Minimize windows into their application's icon
# defaults write com.apple.dock minimize-to-application -bool true
#
# # Enable spring loading for all Dock items
# defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true
#
# # Show indicator lights for open applications in the Dock
# defaults write com.apple.dock show-process-indicators -bool true
#
# # Wipe all (default) app icons from the Dock
# # This is only really useful when setting up a new Mac, or if you don't use
# # the Dock to launch apps.
# defaults write com.apple.dock persistent-apps -array
#
# # Show only open applications in the Dock
# defaults write com.apple.dock static-only -bool true
#
# # Don't animate opening applications from the Dock
# defaults write com.apple.dock launchanim -bool false
#
# # Speed up Mission Control animations
# defaults write com.apple.dock expose-animation-duration -float 0.1
#
# # Don't group windows by application in Mission Control
# # (i.e. use the old Exposé behavior instead)
# defaults write com.apple.dock expose-group-by-app -bool false
#
# # Disable Dashboard
# defaults write com.apple.dashboard mcx-disabled -bool true
#
# # Don't show Dashboard as a Space
# defaults write com.apple.dock dashboard-in-overlay -bool true
#
# # Don't automatically rearrange Spaces based on most recent use
# defaults write com.apple.dock mru-spaces -bool false
#
# # Remove the auto-hiding Dock delay
# defaults write com.apple.dock autohide-delay -float 0
# # Remove the animation when hiding/showing the Dock
# defaults write com.apple.dock autohide-time-modifier -float 0
#
# # Automatically hide and show the Dock
# defaults write com.apple.dock autohide -bool true
#
# # Make Dock icons of hidden applications translucent
# defaults write com.apple.dock showhidden -bool true
#
# # Don't show recent applications in Dock
# defaults write com.apple.dock show-recents -bool false
#
# # Disable the Launchpad gesture (pinch with thumb and three fingers)
# #defaults write com.apple.dock showLaunchpadGestureEnabled -int 0
#
# # Reset Launchpad, but keep the desktop wallpaper intact
# find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete
#
# # Add iOS & Watch Simulator to Launchpad
# # sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator.app" "/Applications/Simulator.app"
# # editorconfig-checker-disable-next-line
# # sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/Simulator (Watch).app" "/Applications/Simulator (Watch).app"
#
# # Add a spacer to the left side of the Dock (where the applications are)
# defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
# # Add a spacer to the right side of the Dock (where the Trash is)
# defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'
#
# # Hot corners
# # Possible values:
# #  0: no-op
# #  2: Mission Control
# #  3: Show application windows
# #  4: Desktop
# #  5: Start screen saver
# #  6: Disable screen saver
# #  7: Dashboard
# # 10: Put display to sleep
# # 11: Launchpad
# # 12: Notification Center
# # 13: Lock Screen
# # Top left screen corner → Mission Control
# defaults write com.apple.dock wvous-tl-corner -int 2
# defaults write com.apple.dock wvous-tl-modifier -int 0
# # Top right screen corner → Desktop
# defaults write com.apple.dock wvous-tr-corner -int 4
# defaults write com.apple.dock wvous-tr-modifier -int 0
# # Bottom left screen corner → Start screen saver
# defaults write com.apple.dock wvous-bl-corner -int 5
# defaults write com.apple.dock wvous-bl-modifier -int 0
#
# ###############################################################################
# # Safari & WebKit                                                             #
# ###############################################################################
#
# # Privacy: don't send search queries to Apple
# defaults write com.apple.Safari UniversalSearchEnabled -bool false
# defaults write com.apple.Safari SuppressSearchSuggestions -bool true
#
# # Press Tab to highlight each item on a web page
# defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true
#
# # Show the full URL in the address bar (note: this still hides the scheme)
# defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
#
# # Set Safari's home page to `about:blank` for faster loading
# defaults write com.apple.Safari HomePage -string "about:blank"
#
# # Prevent Safari from opening 'safe' files automatically after downloading
# defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
#
# # Allow hitting the Backspace key to go to the previous page in history
# # editorconfig-checker-disable-next-line
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true
#
# # Hide Safari's bookmarks bar by default
# defaults write com.apple.Safari ShowFavoritesBar -bool false
#
# # Hide Safari's sidebar in Top Sites
# defaults write com.apple.Safari ShowSidebarInTopSites -bool false
#
# # Disable Safari's thumbnail cache for History and Top Sites
# defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2
#
# # Enable Safari's debug menu
# defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
#
# # Make Safari's search banners default to Contains instead of Starts With
# defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
#
# # Remove useless icons from Safari's bookmarks bar
# defaults write com.apple.Safari ProxiesInBookmarksBar "()"
#
# # Enable the Develop menu and the Web Inspector in Safari
# defaults write com.apple.Safari IncludeDevelopMenu -bool true
# defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
#
# # Add a context menu item for showing the Web Inspector in web views
# defaults write NSGlobalDomain WebKitDeveloperExtras -bool true
#
# # Enable continuous spellchecking
# defaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true
# # Disable auto-correct
# defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool false
#
# # Disable AutoFill
# defaults write com.apple.Safari AutoFillFromAddressBook -bool false
# defaults write com.apple.Safari AutoFillPasswords -bool false
# defaults write com.apple.Safari AutoFillCreditCardData -bool false
# defaults write com.apple.Safari AutoFillMiscellaneousForms -bool false
#
# # Warn about fraudulent websites
# defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true
#
# # Disable plug-ins
# defaults write com.apple.Safari WebKitPluginsEnabled -bool false
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool false
#
# # Disable Java
# defaults write com.apple.Safari WebKitJavaEnabled -bool false
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false
# defaults write com.apple.Safari \
#    com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles -bool false
#
# # Block pop-up windows
# defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
# # editorconfig-checker-disable-next-line
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false
#
# # Disable auto-playing video
# #defaults write com.apple.Safari WebKitMediaPlaybackAllowsInline -bool false
# #defaults write com.apple.SafariTechnologyPreview WebKitMediaPlaybackAllowsInline -bool false
# # editorconfig-checker-disable-next-line
# #defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false
# # editorconfig-checker-disable-next-line
# #defaults write com.apple.SafariTechnologyPreview com.apple.Safari.ContentPageGroupIdentifier.WebKit2AllowsInlineMediaPlayback -bool false
#
# # Enable "Do Not Track"
# defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true
#
# # Update extensions automatically
# defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true
#
# ###############################################################################
# # Mail                                                                        #
# ###############################################################################
#
# # Disable send and reply animations in Mail.app
# defaults write com.apple.mail DisableReplyAnimations -bool true
# defaults write com.apple.mail DisableSendAnimations -bool true
#
# # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
# defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false
#
# # Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
# defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" "@\U21a9"
#
# # Display emails in threaded mode, sorted by date (oldest at the top)
# defaults write com.apple.mail DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes"
# defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortedDescending" -string "yes"
# defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortOrder" -string "received-date"
#
# # Disable inline attachments (just show the icons)
# defaults write com.apple.mail DisableInlineAttachmentViewing -bool true
#
# # Disable automatic spell checking
# defaults write com.apple.mail SpellCheckingBehavior -string "NoSpellCheckingEnabled"
#
# ###############################################################################
# # Spotlight                                                                   #
# ###############################################################################
#
# # Hide Spotlight tray-icon (and subsequent helper)
# #sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search
# # Disable Spotlight indexing for any volume that gets mounted and has not yet
# # been indexed before.
# # Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
# sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"
# # Change indexing order and disable some search results
# # Yosemite-specific search results (remove them if you are using macOS 10.9 or older):
# # 	MENU_DEFINITION
# # 	MENU_CONVERSION
# # 	MENU_EXPRESSION
# # 	MENU_SPOTLIGHT_SUGGESTIONS (send search queries to Apple)
# # 	MENU_WEBSEARCH             (send search queries to Apple)
# # 	MENU_OTHER
# defaults write com.apple.spotlight orderedItems -array \
#     '{"enabled" = 1;"name" = "APPLICATIONS";}' \
#     '{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
#     '{"enabled" = 1;"name" = "DIRECTORIES";}' \
#     '{"enabled" = 1;"name" = "PDF";}' \
#     '{"enabled" = 1;"name" = "FONTS";}' \
#     '{"enabled" = 0;"name" = "DOCUMENTS";}' \
#     '{"enabled" = 0;"name" = "MESSAGES";}' \
#     '{"enabled" = 0;"name" = "CONTACT";}' \
#     '{"enabled" = 0;"name" = "EVENT_TODO";}' \
#     '{"enabled" = 0;"name" = "IMAGES";}' \
#     '{"enabled" = 0;"name" = "BOOKMARKS";}' \
#     '{"enabled" = 0;"name" = "MUSIC";}' \
#     '{"enabled" = 0;"name" = "MOVIES";}' \
#     '{"enabled" = 0;"name" = "PRESENTATIONS";}' \
#     '{"enabled" = 0;"name" = "SPREADSHEETS";}' \
#     '{"enabled" = 0;"name" = "SOURCE";}' \
#     '{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
#     '{"enabled" = 0;"name" = "MENU_OTHER";}' \
#     '{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
#     '{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
#     '{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
#     '{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'
# # Load new settings before rebuilding the index
# killall mds >/dev/null 2>&1
# # Make sure indexing is enabled for the main volume
# sudo mdutil -i on / >/dev/null
# # Rebuild the index from scratch
# sudo mdutil -E / >/dev/null
#
# ###############################################################################
# # Terminal & iTerm 2                                                          #
# ###############################################################################
#
# # Only use UTF-8 in Terminal.app
# defaults write com.apple.terminal StringEncodings -array 4
#
# # # Use a modified version of the Solarized Dark theme by default in Terminal.app
# # osascript <<EOD
#
# # tell application "Terminal"
#
# # 	local allOpenedWindows
# # 	local initialOpenedWindows
# # 	local windowID
# # 	set themeName to "Solarized Dark xterm-256color"
#
# # 	(* Store the IDs of all the open terminal windows. *)
# # 	set initialOpenedWindows to id of every window
#
# # 	(* Open the custom theme so that it gets added to the list
# # 	   of available terminal themes (note: this will open two
# # 	   additional terminal windows). *)
# # 	do shell script "open '$HOME/init/" & themeName & ".terminal'"
#
# # 	(* Wait a little bit to ensure that the custom theme is added. *)
# # 	delay 1
#
# # 	(* Set the custom theme as the default terminal theme. *)
# # 	set default settings to settings set themeName
#
# # 	(* Get the IDs of all the currently opened terminal windows. *)
# # 	set allOpenedWindows to id of every window
#
# # 	repeat with windowID in allOpenedWindows
#
# # 		(* Close the additional windows that were opened in order
# # 		   to add the custom theme to the list of terminal themes. *)
# # 		if initialOpenedWindows does not contain windowID then
# # 			close (every window whose id is windowID)
#
# # 		(* Change the theme for the initial opened terminal windows
# # 		   to remove the need to close them in order for the custom
# # 		   theme to be applied. *)
# # 		else
# # 			set current settings of tabs of (every window whose id is windowID) to settings set themeName
# # 		end if
#
# # 	end repeat
#
# # end tell
#
# # EOD
#
# # Enable "focus follows mouse" for Terminal.app and all X11 apps
# # i.e. hover over a window and start typing in it without clicking first
# #defaults write com.apple.terminal FocusFollowsMouse -bool true
# #defaults write org.x.X11 wm_ffm -bool true
#
# # Enable Secure Keyboard Entry in Terminal.app
# # See: https://security.stackexchange.com/a/47786/8918
# defaults write com.apple.terminal SecureKeyboardEntry -bool true
#
# # Disable the annoying line marks
# defaults write com.apple.Terminal ShowLineMarks -int 0
#
# # Install the Solarized Dark theme for iTerm
# # open "${HOME}/init/Solarized Dark.itermcolors"
#
# # Don't display the annoying prompt when quitting iTerm
# defaults write com.googlecode.iterm2 PromptOnQuit -bool false
#
# ###############################################################################
# # Time Machine                                                                #
# ###############################################################################
#
# # Prevent Time Machine from prompting to use new hard drives as backup volume
# defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
#
# # Disable local Time Machine backups
# hash tmutil &>/dev/null && sudo tmutil disablelocal
#
# ###############################################################################
# # Activity Monitor                                                            #
# ###############################################################################
#
# # Show the main window when launching Activity Monitor
# defaults write com.apple.ActivityMonitor OpenMainWindow -bool true
#
# # Visualize CPU usage in the Activity Monitor Dock icon
# defaults write com.apple.ActivityMonitor IconType -int 5
#
# # Show all processes in Activity Monitor
# defaults write com.apple.ActivityMonitor ShowCategory -int 0
#
# # Sort Activity Monitor results by CPU usage
# defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
# defaults write com.apple.ActivityMonitor SortDirection -int 0
#
# ###############################################################################
# # Address Book, Dashboard, iCal, TextEdit, and Disk Utility                   #
# ###############################################################################
#
# # Enable the debug menu in Address Book
# defaults write com.apple.addressbook ABShowDebugMenu -bool true
#
# # Enable Dashboard dev mode (allows keeping widgets on the desktop)
# defaults write com.apple.dashboard devmode -bool true
#
# # Enable the debug menu in iCal (pre-10.8)
# defaults write com.apple.iCal IncludeDebugMenu -bool true
#
# # Use plain text mode for new TextEdit documents
# defaults write com.apple.TextEdit RichText -int 0
# # Open and save files as UTF-8 in TextEdit
# defaults write com.apple.TextEdit PlainTextEncoding -int 4
# defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
#
# # Enable the debug menu in Disk Utility
# defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
# defaults write com.apple.DiskUtility advanced-image-options -bool true
#
# # Auto-play videos when opened with QuickTime Player
# defaults write com.apple.QuickTimePlayerX MGPlayMovieOnOpen -bool true
#
# ###############################################################################
# # Mac App Store                                                               #
# ###############################################################################
#
# # Enable the WebKit Developer Tools in the Mac App Store
# defaults write com.apple.appstore WebKitDeveloperExtras -bool true
#
# # Enable Debug Menu in the Mac App Store
# defaults write com.apple.appstore ShowDebugMenu -bool true
#
# # Enable the automatic update check
# defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true
#
# # Check for software updates daily, not just once per week
# defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
#
# # Download newly available updates in background
# defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1
#
# # Install System data files & security updates
# defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1
#
# # Automatically download apps purchased on other Macs
# defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1
#
# # Turn on app auto-update
# defaults write com.apple.commerce AutoUpdate -bool true
#
# # Allow the App Store to reboot machine on macOS updates
# defaults write com.apple.commerce AutoUpdateRestartRequired -bool true
#
# ###############################################################################
# # Photos                                                                      #
# ###############################################################################
#
# # Prevent Photos from opening automatically when devices are plugged in
# defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true
#
# ###############################################################################
# # Messages                                                                    #
# ###############################################################################
#
# # Disable automatic emoji substitution (i.e. use plain text smileys)
# # editorconfig-checker-disable-next-line
# # defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false
#
# # Disable smart quotes as it's annoying for messages that contain code
# # editorconfig-checker-disable-next-line
# defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false
#
# # Disable continuous spell checking
# # editorconfig-checker-disable-next-line
# defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false
#
# ###############################################################################
# # Google Chrome & Google Chrome Canary                                        #
# ###############################################################################
#
# # Disable the all too sensitive backswipe on trackpads
# defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
# defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false
#
# # Disable the all too sensitive backswipe on Magic Mouse
# defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
# defaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false
#
# # Use the system-native print preview dialog
# defaults write com.google.Chrome DisablePrintPreview -bool true
# defaults write com.google.Chrome.canary DisablePrintPreview -bool true
#
# # Expand the print dialog by default
# defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true
# defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true
#
# ###############################################################################
# # GPGMail 2                                                                   #
# ###############################################################################
#
# # Disable signing emails by default
# # tdefaults write ~/Library/Preferences/org.gpgtools.gpgmail SignNewEmailsByDefault -bool false
#
# ###############################################################################
# # Opera & Opera Developer                                                     #
# ###############################################################################
#
# # Expand the print dialog by default
# # defaults write com.operasoftware.Opera PMPrintingExpandedStateForPrint2 -boolean true
# # defaults write com.operasoftware.OperaDeveloper PMPrintingExpandedStateForPrint2 -boolean true
#
# ###############################################################################
# # SizeUp.app                                                                  #
# ###############################################################################
#
# # Start SizeUp at login
# # defaults write com.irradiatedsoftware.SizeUp StartAtLogin -bool true
#
# # Don't show the preferences window on next start
# # defaults write com.irradiatedsoftware.SizeUp ShowPrefsOnNextStart -bool false
#
# ###############################################################################
# # Sublime Text                                                                #
# ###############################################################################
#
# # Install Sublime Text settings
# # editorconfig-checker-disable-next-line
# # cp -r init/Preferences.sublime-settings ~/Library/Application\ Support/Sublime\ Text*/Packages/User/Preferences.sublime-settings 2> /dev/null
#
# ###############################################################################
# # Spectacle.app                                                               #
# ###############################################################################
#
# # Set up my preferred keyboard shortcuts
# # cp -r init/spectacle.json ~/Library/Application\ Support/Spectacle/Shortcuts.json 2> /dev/null
#
# ###############################################################################
# # Transmission.app                                                            #
# ###############################################################################
#
# # Use `~/Documents/Torrents` to store incomplete downloads
# defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
# defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Documents/Torrents"
#
# # Use `~/Downloads` to store completed downloads
# defaults write org.m0k.transmission DownloadLocationConstant -bool true
#
# # Don't prompt for confirmation before downloading
# defaults write org.m0k.transmission DownloadAsk -bool false
# defaults write org.m0k.transmission MagnetOpenAsk -bool false
#
# # Don't prompt for confirmation before removing non-downloading active transfers
# defaults write org.m0k.transmission CheckRemoveDownloading -bool true
#
# # Trash original torrent files
# defaults write org.m0k.transmission DeleteOriginalTorrent -bool true
#
# # Hide the donate message
# defaults write org.m0k.transmission WarningDonate -bool false
# # Hide the legal disclaimer
# defaults write org.m0k.transmission WarningLegal -bool false
#
# # IP block list.
# # Source: https://giuliomac.wordpress.com/2014/02/19/best-blocklist-for-transmission/
# defaults write org.m0k.transmission BlocklistNew -bool true
# defaults write org.m0k.transmission BlocklistURL -string "http://john.bitsurge.net/public/biglist.p2p.gz"
# defaults write org.m0k.transmission BlocklistAutoUpdate -bool true
#
# # Randomize port on launch
# defaults write org.m0k.transmission RandomPort -bool true
#
# ###############################################################################
# # Twitter.app                                                                 #
# ###############################################################################
#
# # Disable smart quotes as it's annoying for code tweets
# defaults write com.twitter.twitter-mac AutomaticQuoteSubstitutionEnabled -bool false
#
# # Show the app window when clicking the menu bar icon
# defaults write com.twitter.twitter-mac MenuItemBehavior -int 1
#
# # Enable the hidden 'Develop' menu
# defaults write com.twitter.twitter-mac ShowDevelopMenu -bool true
#
# # Open links in the background
# defaults write com.twitter.twitter-mac openLinksInBackground -bool true
#
# # Allow closing the 'new tweet' window by pressing `Esc`
# defaults write com.twitter.twitter-mac ESCClosesComposeWindow -bool true
#
# # Show full names rather than Twitter handles
# defaults write com.twitter.twitter-mac ShowFullNames -bool true
#
# # Hide the app in the background if it's not the front-most window
# defaults write com.twitter.twitter-mac HideInBackground -bool true
#

# defaults write com.apple.Terminal "Default Window Settings" -string "Solarized Dark"
# defaults write com.apple.Terminal "Startup Window Settings" -string "Solarized Dark"

# # Flash the screen when a beep is played
# defaults write -g "com.apple.sound.beep.flash" -int 1
#
# # Don't play sounds while adjusting the volume
# defaults write -g "com.apple.sound.beep.feedback" -int 0
#
# # Show ~/Library
# chflags nohidden ~/Library
#
# # Disable holding a key for the special character menu
# defaults write -g ApplePressAndHoldEnabled -bool false
#
# # Make keys repeat really fast
# defaults write -g KeyRepeat -int 1
#
# # Show external volumes on the desktop
# defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
# defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true
#
# # Set up bottom-left corner to sleep display
# defaults write com.apple.dock wvous-bl-corner -int 10
# defaults write com.apple.dock wvous-bl-modifier -int 0
#
# # enable ssh logins
# systemsetup -setremotelogin on &>/dev/null
#
# # enable ntp
# systemsetup -setusingnetworktime on &>/dev/null
#
# # restart on power failure
# systemsetup -setrestartpowerfailure on &>/dev/null
#
# # restart on freeze
# systemsetup -setrestartfreeze on &>/dev/null
#
# # Show status bar
# defaults write com.apple.Safari ShowStatusBar -bool true
# defaults write com.apple.Safari ShowOverlayStatusBar -bool true
# # Show the full URL in the address bar (note: this still hides the scheme)
# defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
# # Safari opens with: last session
# defaults write com.apple.Safari AlwaysRestoreSessionAtLaunch -bool true
# # Enable the Develop menu and the Web Inspector in Safari
# defaults write com.apple.Safari IncludeDevelopMenu -bool true
# # Enable Safari's debug menu
# defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
# # Update extensions automatically
# defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true
# # Make Safari's search banners default to Contains instead of Starts With
# defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
# # Website use of location services
# # 0 = Deny without prompting
# # 1 = Prompt for each website once each day
# # 2 = Prompt for each website one time only
# defaults write com.apple.Safari SafariGeolocationPermissionPolicy -int 2
#
# # disable Xcode Cloud upsell
# defaults write com.apple.dt.Xcode XcodeCloudUpsellPromptEnabled -bool false
#
# # Disable "removing from iCloud Drive" warnings
# defaults write com.apple.finder FXEnableRemoveFromICloudDriveWarning -bool false
#
# # Set Mail.app fonts
# defaults write com.apple.mail NSFont -string "AvenirNext-Regular"
# defaults write com.apple.mail NSFontSize -int 14
# defaults write com.apple.mail NSFixedPitchFont -string "Menlo-Regular"
# defaults write com.apple.mail NSFixedPitchFontSize -int 13
#

# ###############################################################################
# # Tweetbot.app                                                                #
# ###############################################################################
#
# # Bypass the annoyingly slow t.co URL shortener
# defaults write com.tapbots.TweetbotMac OpenURLsDirectly -bool true
#

# # Taken from ~/.osx — https://mths.be/osx and customised to suit my needs.
# # Ask for the administrator password upfront
#sudo -v

# # Keep-alive: update existing `sudo` time stamp until this script has finished
# while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
#
# ###############################################################################
# # General UI/UX                                                               #
# ###############################################################################
# info "General UI/UX"
#
#
# # Set standby delay to 12 hours (default is 1 hour)
# sudo pmset -a standbydelay 43200
#
# # Enable the sound effects on boot - MBP 2015 and later - set to %01 to disable again
# sudo nvram StartupMute=%00
#
# # Disable the Screenshot and Empty Trash sound effects
# defaults write com.apple.systemsound "com.apple.sound.uiaudio.enabled" -int 0
#
# # Menu bar: hide the Time Machine, Volume, and User icons
# # CNS: Only hide the User icon.
# #"/System/Library/CoreServices/Menu Extras/TimeMachine.menu" \
# #"/System/Library/CoreServices/Menu Extras/Volume.menu" \
# for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
#   defaults write "${domain}" dontAutoLoad -array \
#     "/System/Library/CoreServices/Menu Extras/User.menu"
# done
# defaults write com.apple.systemuiserver menuExtras -array \
#   "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" \
#   "/System/Library/CoreServices/Menu Extras/AirPort.menu" \
#   "/System/Library/CoreServices/Menu Extras/Battery.menu" \
#   "/System/Library/CoreServices/Menu Extras/Clock.menu"
#
#
# # Send crash reporter notifications to the notification center
# #defaults write com.apple.CrashReporter UseUNC 1
#
#
# # CNS: I do however want this:
# sudo defaults write /Library/Preferences/com.apple.loginwindow LoginwindowText "@lildude :: Found this computer? Please call +1-415-448-6673 :: GitHub, Inc."
#
# # Restart automatically if the computer freezes
# sudo systemsetup -setrestartfreeze on
#
# # Never go into computer sleep mode
# # CNS: Set to 1 minute
# #sudo systemsetup -setcomputersleep Off > /dev/null
# sudo systemsetup -setcomputersleep 1 > /dev/null
#
# # Check for software updates daily, not just once per week
# defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1
#
# # Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
# # all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.
# #rm -rf ~/Library/Application Support/Dock/desktoppicture.db
# #sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# #sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg
#
# # CNS: Set powerchime when connecting power cord ala iOS
# defaults write com.apple.PowerChime ChimeOnAllHardware -bool true; open /System/Library/CoreServices/PowerChime.app &
#
# # CNS: Enable dark mode
# defaults write NSGlobalDomain AppleInterfaceStyle -string "Dark"
#
# # CNS: Enable dark menu bar in mojave
# #defaults write -g NSRequiresAquaSystemAppearance -bool Yes
#
# # CNS: Show battery percent in menu bar
# defaults write com.apple.menuextra.battery ShowPercent -string "YES"
#
# # CNS: Disable captive portal - use browser instead
# defaults write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -bool false
#
# # CNS: Enable sub-pixel aliasing on mojave and later - https://www.howtogeek.com/358596/how-to-fix-blurry-fonts-on-macos-mojave-with-subpixel-antialiasing/
# defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO
#
# ###############################################################################
# # SSD-specific tweaks                                                         #
# ###############################################################################
# info "SSD-specific tweaks"
# # Disable local Time Machine snapshots
# #sudo tmutil disablelocal
#
# # Disable hibernation (speeds up entering sleep mode)
# #sudo pmset -a hibernatemode 0
#
# # Remove the sleep image file to save disk space
# #sudo rm /private/var/vm/sleepimage
# # Create a zero-byte file instead…
# #sudo touch /private/var/vm/sleepimage
# # …and make sure it can't be rewritten
# #sudo chflags uchg /private/var/vm/sleepimage
#
# # Disable the sudden motion sensor as it's not useful for SSDs
# sudo pmset -a sms 0
#
# # CNS: Secure FileVault on sleep
# sudo pmset -a destroyfvkeyonstandby 1
# sudo pmset -a hibernatemode 25
# sudo pmset -a powernap 0
# sudo pmset -a standby 0
# sudo pmset -a standbydelay 0
# sudo pmset -a autopoweroff 0
#
# ###############################################################################
# # Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
# ###############################################################################
# info "Trackpad, mouse, keyboard, Bluetooth accessories, and input"
# # Trackpad: enable tap to click for this user and for the login screen
# #defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
# #defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
# #defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
#
# # Trackpad: map bottom right corner to right-click
# #defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
# #defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
# #defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
# #defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true
#
# # Enable "natural" (Lion-style) scrolling
# defaults write NSGlobalDomain com.apple.swipescrolldirection -bool false
#
# # Increase sound quality for Bluetooth headphones/headsets
# defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40
#
# # Enable full keyboard access for all controls
# # (e.g. enable Tab in modal dialogs)
# # CNS: My MBP had 1, leaving at 3 as I'm intrigued to see what it does.
# defaults write NSGlobalDomain AppleKeyboardUIMode -int 3
#
# # Use scroll gesture with the Ctrl (^) modifier key to zoom
# defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true
# defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
# # Follow the keyboard focus while zoomed in
# defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true
#
# # Disable press-and-hold for keys in favor of key repeat
# #defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
#
# # Set a blazingly fast keyboard repeat rate
# #defaults write NSGlobalDomain KeyRepeat -int 0
#
# # Set language and text formats
# # Note: if you're in the US, replace `EUR` with `USD`, `Centimeters` with
# # `Inches`, `en_GB` with `en_US`, and `true` with `false`.
# # CNS: Set to GB values I like.
# defaults write NSGlobalDomain AppleLanguages -array "en"
# defaults write NSGlobalDomain AppleLocale -string "en_GB"
# defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
# defaults write NSGlobalDomain AppleMetricUnits -bool true
# # Sets a space thousands separator
# defaults write NSGlobalDomain AppleICUNumberSymbols -dict 1 ' ' 17 ' '
#
# # Set the timezone; see `sudo systemsetup -listtimezones` for other values
# sudo systemsetup -settimezone "Europe/London" > /dev/null
#
# # Disable auto-correct
# #defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false
#
# # Stop iTunes from responding to the keyboard media keys
# #launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null
#
# # CNS: Set keyboard to British
# defaults write com.apple.HIToolbox AppleCurrentKeyboardLayoutInputSourceID -string "com.apple.keylayout.British"
#
# # Automatically illuminate built-in MacBook keyboard in low light
# defaults write com.apple.BezelServices kDim -bool true
#
# # Turn off keyboard illumination when computer is not used for 5 minutes\n"
# defaults write com.apple.BezelServices kDimTime -int 300
#
# ###############################################################################
# # Screen                                                                      #
# ###############################################################################
# info "Screen"
# # Require password immediately after sleep or screen saver begins
# defaults write com.apple.screensaver askForPassword -int 1
# defaults write com.apple.screensaver askForPasswordDelay -int 0
#
# # Save screenshots
# defaults write com.apple.screencapture location -string "${HOME}/Downloads"
#
# # Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
# defaults write com.apple.screencapture type -string "png"
#
# # Disable shadow in screenshots
# defaults write com.apple.screencapture disable-shadow -bool true
#
# # Enable subpixel font rendering on non-Apple LCDs
# defaults write NSGlobalDomain AppleFontSmoothing -int 2
#
# # Enable HiDPI display modes (requires restart)
# sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true
#
# ###############################################################################
# # Finder                                                                      #
# ###############################################################################
# info "Finder"
#
# # Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons
# #defaults write com.apple.finder QuitMenuItem -bool true
#
# # Finder: disable window animations and Get Info animations
# defaults write com.apple.finder DisableAllAnimations -bool true
#
# # Set Desktop as the default location for new Finder windows
# # For other paths, use `PfLo` and `file:///full/path/here/`
# # CNS: Set to ~/Downloads
# defaults write com.apple.finder NewWindowTarget -string "PfLo"
# defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Downloads/"
#
# # Show icons for hard drives, servers, and removable media on the desktop
# defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool false
# defaults write com.apple.finder ShowHardDrivesOnDesktop -bool false
# defaults write com.apple.finder ShowMountedServersOnDesktop -bool false
# defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool false
#
# # Finder: show hidden files by default
# #defaults write com.apple.finder AppleShowAllFiles -bool true
#
# # Finder: show all filename extensions
# defaults write NSGlobalDomain AppleShowAllExtensions -bool true
#
# # Finder: show status bar
# defaults write com.apple.finder ShowStatusBar -bool true
#
# # Finder: show path bar
# # CNS: Disable as it takes up real estate I need
# defaults write com.apple.finder ShowPathbar -bool false
#
# # Display full POSIX path as Finder window title
# defaults write com.apple.finder _FXShowPosixPathInTitle -bool true
#
# # When performing a search, search the current folder by default
# defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
#
# # Disable the warning when changing a file extension
# defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
#
# # Enable spring loading for directories
# defaults write NSGlobalDomain com.apple.springing.enabled -bool true
#
# # Remove the spring loading delay for directories
# defaults write NSGlobalDomain com.apple.springing.delay -float 0
#
# # Avoid creating .DS_Store files on network volumes
# defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
#
# # Disable disk image verification
# defaults write com.apple.frameworks.diskimages skip-verify -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true
#
# # Automatically open a new Finder window when a volume is mounted
# #defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
# #defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
# #defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
#
# # CNS: Hide tags in sidebar - not sure this works.
# defaults write com.apple.finder SidebarTagsSctionDisclosedState -bool false
#
# # Open TextEdit.app briefly so the file diaglog is opened at least once. This
# # allows us to set the FK_StandardViewSettings without any errors.
# open /Applications/TextEdit.app && sleep 2 && killall TextEdit
#
# # Show item info near icons on the desktop and in other icon views
# # The FK_StandardViewSettings may report an "Does Not Exist" error until a file
# # dialog has been opened at least once in some application
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo false" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo false" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo false" ~/Library/Preferences/com.apple.finder.plist
#
# # Show item info to the bottom of the icons on the desktop
# /usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom true" ~/Library/Preferences/com.apple.finder.plist
#
# # Enable snap-to-grid for icons on the desktop and in other icon views
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy name" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy kind" ~/Library/Preferences/com.apple.finder.plist
#
# # Set grid spacing for icons on the desktop and in other icon views
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 54" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 54" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 29" ~/Library/Preferences/com.apple.finder.plist
#
# # Set the size of icons on the desktop and in other icon views
# /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 52" ~/Library/Preferences/com.apple.finder.plist
# /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 52" ~/Library/Preferences/com.apple.finder.plist
#
# # CNS:
# # Use list view in all Finder windows by default
# # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
# defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
#
# # Disable the warning before emptying the Trash
# defaults write com.apple.finder WarnOnEmptyTrash -bool false
#
# # Enable AirDrop over Ethernet and on unsupported Macs running Lion
# defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true
#
# # Enable the MacBook Air SuperDrive on any Mac
# #sudo nvram boot-args="mbasd=1"
#
# # Show the ~/Library folder
# chflags nohidden ~/Library
#
# # Hide the Game Centre
# if [ -d /Applications/game\ center.app ]; then
#   chflags hidden /Applications/game\ center.app
# fi
#
# # Remove Dropbox's green checkmark icons in Finder
# #file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
# #[ -e "${file}" ] && mv -f "${file}" "${file}.bak"
#
# # Expand the following File Info panes:
# # "General", "Open with", and "Sharing & Permissions"
# defaults write com.apple.finder FXInfoPanesExpanded -dict \
#   General -bool true \
#   OpenWith -bool true \
#   Privileges -bool true
#
# # CNS: Sidebar list - these are all defaults, but here if you wish to change them.
# #defaults write com.apple.sidebarlists systemitems -dict-add ShowEjectables -bool true
# #defaults write com.apple.sidebarlists systemitems -dict-add ShowRemovable -bool true
# #defaults write com.apple.sidebarlists systemitems -dict-add ShowServers -bool true
# #defaults write com.apple.sidebarlists systemitems -dict-add ShowHardDisks -bool true
#
# # CNS Hide tags in Finder sidebar
# defaults write com.apple.finder SidebarTagsSctionDisclosedState -int 0
#
# # CNS: Enable Text Selection in Quick Look Windows
# defaults write com.apple.finder QLEnableTextSelection -bool true
#
# ###############################################################################
# # Dock, Dashboard, and hot corners                                            #
# ###############################################################################
# info "Dock, Dashboard, and hot corners"
# # Enable highlight hover effect for the grid view of a stack (Dock)
# defaults write com.apple.dock mouse-over-hilite-stack -bool true
#
# # Set the icon size of Dock items to 36 pixels
# # CNS: I like 32 pixels.
# defaults write com.apple.dock tilesize -int 32
#
# # Change minimize/maximize window effect
# #defaults write com.apple.dock mineffect -string "scale"
#
# # Minimize windows into their application's icon
# defaults write com.apple.dock minimize-to-application -bool false
#
# # Enable spring loading for all Dock items
# #defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true
#
# # Show indicator lights for open applications in the Dock
# defaults write com.apple.dock show-process-indicators -bool true
#
# # Wipe all (default) app icons from the Dock
# # This is only really useful when setting up a new Mac, or if you don't use
# # the Dock to launch apps.
# #defaults write com.apple.dock persistent-apps -array
#
# # CNS: Only show running apps in dock
# #defaults write com.apple.dock static-only -bool TRUE; killall Dock
#
# # Don't animate opening applications from the Dock
# defaults write com.apple.dock launchanim -bool false
#
# # Speed up Mission Control animations
# defaults write com.apple.dock expose-animation-duration -float 0.1
#
# # Don't group windows by application in Mission Control
# # (i.e. use the old Exposé behavior instead)
# defaults write com.apple.dock expose-group-by-app -bool false
#
# # Disable Dashboard
# defaults write com.apple.dashboard mcx-disabled -bool true
#
# # Don't show Dashboard as a Space
# defaults write com.apple.dock dashboard-in-overlay -bool true
#
# # Don't automatically rearrange Spaces based on most recent use
# defaults write com.apple.dock mru-spaces -bool false
#
# # Remove the auto-hiding Dock delay
# defaults write com.apple.dock autohide-delay -float 0
# # Remove the animation when hiding/showing the Dock
# defaults write com.apple.dock autohide-time-modifier -float 0
#
# # Automatically hide and show the Dock
# defaults write com.apple.dock autohide -bool true
#
# # Make Dock icons of hidden applications translucent
# defaults write com.apple.dock showhidden -bool true
#
# # Disable the Launchpad gesture (pinch with thumb and three fingers)
# #defaults write com.apple.dock showLaunchpadGestureEnabled -int 0
#
# # CNS: Enable dock magnification and set to 52
# defaults write com.apple.dock magnification -bool true
# defaults write com.apple.dock largesize -float 52
#
# # Reset Launchpad, but keep the desktop wallpaper intact
# # CNS: Not sure what this does so commenting out
# #find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete
#
# # Add iOS Simulator to Launchpad
# # CNS: Not interested in this.
# #sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/iOS Simulator.app" "/Applications/iOS Simulator.app"
#
# # Add a spacer to the left side of the Dock (where the applications are)
# #defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
# # Add a spacer to the right side of the Dock (where the Trash is)
# #defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'
#
# # Hot corners
# # Possible values:
# #  0: no-op
# #  2: Mission Control
# #  3: Show application windows
# #  4: Desktop
# #  5: Start screen saver
# #  6: Disable screen saver
# #  7: Dashboard
# # 10: Put display to sleep
# # 11: Launchpad
# # 12: Notification Center
# # Top left screen corner → Mission Control
# # CNS: I only use the top-right for screensaver.  Comment out everything else.
# #defaults write com.apple.dock wvous-tl-corner -int 2
# #defaults write com.apple.dock wvous-tl-modifier -int 0
# # Top right screen corner → Desktop
# # CNS: Screensaver
# defaults write com.apple.dock wvous-tr-corner -int 5
# defaults write com.apple.dock wvous-tr-modifier -int 0
# # Bottom left screen corner → Start screen saver
# #defaults write com.apple.dock wvous-bl-corner -int 5
# #defaults write com.apple.dock wvous-bl-modifier -int 0
#
# ###############################################################################
# # Safari & WebKit                                                             #
# ###############################################################################
# info "Safari & WebKit"
# # Privacy: don't send search queries to Apple
# defaults write com.apple.Safari UniversalSearchEnabled -bool false
# defaults write com.apple.Safari SuppressSearchSuggestions -bool true
#
# # Press Tab to highlight each item on a web page
# defaults write com.apple.Safari WebKitTabToLinksPreferenceKey -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks -bool true
#
# # Show the full URL in the address bar (note: this still hides the scheme)
# defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true
#
# # Set Safari's home page to `about:blank` for faster loading
# #defaults write com.apple.Safari HomePage -string "about:blank"
#
# # Prevent Safari from opening 'safe' files automatically after downloading
# defaults write com.apple.Safari AutoOpenSafeDownloads -bool false
#
# # Allow hitting the Backspace key to go to the previous page in history
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true
#
# # Hide Safari's bookmarks bar by default
# defaults write com.apple.Safari ShowFavoritesBar -bool false
#
# # Hide Safari's sidebar in Top Sites
# defaults write com.apple.Safari ShowSidebarInTopSites -bool false
#
# # Disable Safari's thumbnail cache for History and Top Sites
# defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2
#
# # Enable Safari's debug menu
# defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
#
# # Make Safari's search banners default to Contains instead of Starts With
# defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
#
# # Remove useless icons from Safari's bookmarks bar
# defaults write com.apple.Safari ProxiesInBookmarksBar "()"
#
# # Enable the Develop menu and the Web Inspector in Safari
# defaults write com.apple.Safari IncludeDevelopMenu -bool true
# defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
#
# # Add a context menu item for showing the Web Inspector in web views
# defaults write NSGlobalDomain WebKitDeveloperExtras -bool true
#
# # CNS: Disable Java
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabled -bool false
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaEnabledForLocalFiles -bool false
#
# ###############################################################################
# # Mail                                                                        #
# ###############################################################################
# info "Mail"
# # CNS: I don't use Mail so leaving these in place as "sensible defaults"
# # Disable send and reply animations in Mail.app
# defaults write com.apple.mail DisableReplyAnimations -bool true
# defaults write com.apple.mail DisableSendAnimations -bool true
#
# # Copy email addresses as `foo@example.com` instead of `Foo Bar <foo@example.com>` in Mail.app
# defaults write com.apple.mail AddressesIncludeNameOnPasteboard -bool false
#
# # Add the keyboard shortcut ⌘ + Enter to send an email in Mail.app
# defaults write com.apple.mail NSUserKeyEquivalents -dict-add "Send" -string "@\\U21a9"
#
# # Display emails in threaded mode, sorted by date (oldest at the top)
# defaults write com.apple.mail DraftsViewerAttributes -dict-add "DisplayInThreadedMode" -string "yes"
# defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortedDescending" -string "yes"
# defaults write com.apple.mail DraftsViewerAttributes -dict-add "SortOrder" -string "received-date"
#
# # Disable inline attachments (just show the icons)
# defaults write com.apple.mail DisableInlineAttachmentViewing -bool true
#
# # Disable automatic spell checking
# defaults write com.apple.mail SpellCheckingBehavior -string "NoSpellCheckingEnabled"
#
#
# ###############################################################################
# # Spotlight                                                                   #
# ###############################################################################
# info "Spotlight"
# # Hide Spotlight tray-icon (and subsequent helper)
# #sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search
# # Disable Spotlight indexing for any volume that gets mounted and has not yet
# # been indexed before.
# # Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
# # CNS: Don't index ~/github or ~/src
# sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes" "${HOME}/github" "${HOME}/src"
# # Change indexing order and disable some search results
# # Yosemite-specific search results (remove them if you are using OS X 10.9 or older):
# # 	MENU_DEFINITION
# # 	MENU_CONVERSION
# # 	MENU_EXPRESSION
# # 	MENU_SPOTLIGHT_SUGGESTIONS (send search queries to Apple)
# # 	MENU_WEBSEARCH             (send search queries to Apple)
# # 	MENU_OTHER
# defaults write com.apple.spotlight orderedItems -array \
# 	'{"enabled" = 1;"name" = "APPLICATIONS";}' \
# 	'{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
# 	'{"enabled" = 1;"name" = "DIRECTORIES";}' \
# 	'{"enabled" = 1;"name" = "PDF";}' \
# 	'{"enabled" = 1;"name" = "FONTS";}' \
# 	'{"enabled" = 0;"name" = "DOCUMENTS";}' \
# 	'{"enabled" = 0;"name" = "MESSAGES";}' \
# 	'{"enabled" = 0;"name" = "CONTACT";}' \
# 	'{"enabled" = 0;"name" = "EVENT_TODO";}' \
# 	'{"enabled" = 0;"name" = "IMAGES";}' \
# 	'{"enabled" = 0;"name" = "BOOKMARKS";}' \
# 	'{"enabled" = 0;"name" = "MUSIC";}' \
# 	'{"enabled" = 0;"name" = "MOVIES";}' \
# 	'{"enabled" = 0;"name" = "PRESENTATIONS";}' \
# 	'{"enabled" = 0;"name" = "SPREADSHEETS";}' \
# 	'{"enabled" = 0;"name" = "SOURCE";}' \
# 	'{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
# 	'{"enabled" = 0;"name" = "MENU_OTHER";}' \
# 	'{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
# 	'{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
# 	'{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
# 	'{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'
# # Load new settings before rebuilding the index
# killall mds > /dev/null 2>&1
# # Make sure indexing is enabled for the main volume
# sudo mdutil -i on / > /dev/null
# # Rebuild the index from scratch
# sudo mdutil -E / > /dev/null
#
# ###############################################################################
# # Terminal (iTerm2 has it's own config opt to sync with Dropbox)              #
# ###############################################################################
# info "Terminal & iTerm2"
# # Only use UTF-8 in Terminal.app
# defaults write com.apple.terminal StringEncodings -array 4
#
# # Use a modified version of the Solarized Dark theme by default in Terminal.app
# # CNS: I don't use Terminal.app and prefer to keep it looking different.
# #osascript <<EOD
# #
# #tell application "Terminal"
# #
# #	local allOpenedWindows
# #	local initialOpenedWindows
# #	local windowID
# #	set themeName to "Solarized Dark xterm-256color"
# #
# #	(* Store the IDs of all the open terminal windows. *)
# #	set initialOpenedWindows to id of every window
# #
# #	(* Open the custom theme so that it gets added to the list
# #	   of available terminal themes (note: this will open two
# #	   additional terminal windows). *)
# #	do shell script "open '$HOME/init/" & themeName & ".terminal'"
# #
# #	(* Wait a little bit to ensure that the custom theme is added. *)
# #	delay 1
# #
# #	(* Set the custom theme as the default terminal theme. *)
# #	set default settings to settings set themeName
# #
# #	(* Get the IDs of all the currently opened terminal windows. *)
# #	set allOpenedWindows to id of every window
# #
# #	repeat with windowID in allOpenedWindows
# #
# #		(* Close the additional windows that were opened in order
# #		   to add the custom theme to the list of terminal themes. *)
# #		if initialOpenedWindows does not contain windowID then
# #			close (every window whose id is windowID)
# #
# #		(* Change the theme for the initial opened terminal windows
# #		   to remove the need to close them in order for the custom
# #		   theme to be applied. *)
# #		else
# #			set current settings of tabs of (every window whose id is windowID) to settings set themeName
# #		end if
# #
# #	end repeat
# #
# #end tell
# #
# #EOD
#
# # Enable "focus follows mouse" for Terminal.app and all X11 apps
# # i.e. hover over a window and start typing in it without clicking first
# #defaults write com.apple.terminal FocusFollowsMouse -bool true
# #defaults write org.x.X11 wm_ffm -bool true
#
# # Load/save settings from/to dotfiles
# defaults write com.googlecode.iterm2 PrefsCustomFolder -string "/Users/lildude/.config/iterm2"
# defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder -bool true
#
# ###############################################################################
# # Time Machine                                                                #
# ###############################################################################
# info "Time Machine"
# # Prevent Time Machine from prompting to use new hard drives as backup volume
# defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true
#
# # Disable local Time Machine backups
# # CNS: Keeping this as it's useful and I have 1TB of disk space the play with
# #hash tmutil &> /dev/null && sudo tmutil disablelocal
#
# ###############################################################################
# # Activity Monitor                                                            #
# ###############################################################################
# info "Activity Monitor"
# # Show the main window when launching Activity Monitor
# defaults write com.apple.ActivityMonitor OpenMainWindow -bool true
#
# # Visualize CPU usage in the Activity Monitor Dock icon
# #defaults write com.apple.ActivityMonitor IconType -int 5
#
# # Show all processes in Activity Monitor
# defaults write com.apple.ActivityMonitor ShowCategory -int 0
#
# # Sort Activity Monitor results by CPU usage
# defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
# defaults write com.apple.ActivityMonitor SortDirection -int 0
#
# ###############################################################################
# # Address Book, Dashboard, iCal, TextEdit, and Disk Utility                   #
# ###############################################################################
# info "Address Book, Dashboard, iCal, TextEdit, and Disk Utility"
# # Enable the debug menu in Address Book
# defaults write com.apple.addressbook ABShowDebugMenu -bool true
#
# # Enable Dashboard dev mode (allows keeping widgets on the desktop)
# defaults write com.apple.dashboard devmode -bool true
#
# # Enable the debug menu in iCal (pre-10.8)
# defaults write com.apple.iCal IncludeDebugMenu -bool true
#
# # Use plain text mode for new TextEdit documents
# defaults write com.apple.TextEdit RichText -int 0
# # Open and save files as UTF-8 in TextEdit
# defaults write com.apple.TextEdit PlainTextEncoding -int 4
# defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
#
# # Enable the debug menu in Disk Utility
# defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true
# defaults write com.apple.DiskUtility advanced-image-options -bool true
#
# ###############################################################################
# # Mac App Store                                                               #
# ###############################################################################
# info "Mac App Store"
# # Enable the WebKit Developer Tools in the Mac App Store
# defaults write com.apple.appstore WebKitDeveloperExtras -bool true
#
# # Enable Debug Menu in the Mac App Store
# defaults write com.apple.appstore ShowDebugMenu -bool true
#
# ###############################################################################
# # Messages                                                                    #
# ###############################################################################
# info "Messages"
# # Disable automatic emoji substitution (i.e. use plain text smileys)
# #defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -bool false
#
# # Disable smart quotes as it's annoying for messages that contain code
# defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false
#
# # Disable continuous spell checking
# #defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled" -bool false
#
# ###############################################################################
# # Google Chrome & Google Chrome Canary                                        #
# ###############################################################################
# info "Google Chrome & Google Chrome Canary"
# # Allow installing user scripts via GitHub Gist or Userscripts.org
# #defaults write com.google.Chrome ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"
# #defaults write com.google.Chrome.canary ExtensionInstallSources -array "https://gist.githubusercontent.com/" "http://userscripts.org/*"
#
# # Disable the all too sensitive backswipe on trackpads
# defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
# defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false
#
# # Disable the all too sensitive backswipe on Magic Mouse
# defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
# defaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false
#
# # Use the system-native print preview dialog
# defaults write com.google.Chrome DisablePrintPreview -bool true
# defaults write com.google.Chrome.canary DisablePrintPreview -bool true
#
# # Expand the print dialog by default
# defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true
# defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true
#
# ###############################################################################
# # Transmission.app                                                            #
# ###############################################################################
# info "Transmission.app"
# # Use `~/Documents/Torrents` to store incomplete downloads
# # CNS: I prefer ~/Downloads/trash
# defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
# defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Downloads/trash"
#
# # Don't prompt for confirmation before downloading
# defaults write org.m0k.transmission DownloadAsk -bool false
#
# # Trash original torrent files
# defaults write org.m0k.transmission DeleteOriginalTorrent -bool true
#
# # Hide the donate message
# defaults write org.m0k.transmission WarningDonate -bool false
# # Hide the legal disclaimer
# defaults write org.m0k.transmission WarningLegal -bool false
#
# ###############################################################################
# # Photos.app                                                                  #
# ###############################################################################
# info "Photos.app"
# # Prevent Photos.app opening when connecting device
# defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true
#
# ###############################################################################
# # Archive utility                                                             #
# ###############################################################################
# info "Archive utility"
# # Move archive files to trash after expansion
# # Delete directly: "/dev/null"
# # Leave alone (default) "."
# defaults write com.apple.archiveutility dearchive-move-after -string "$HOME/.Trash"
#
# ###############################################################################
# # Alfred                                                                      #
# ###############################################################################
# # Set Alfred settings here as this needs to run after Alfred has been installed
# # with Homebrew.
# info "Alfred.app"
# defaults write com.runningwithcrayons.Alfred-Preferences syncfolder -string "$HOME/Dropbox/Alfred"
#
# ###############################################################################
# # Kill affected applications                                                  #
# ###############################################################################
#
# for app in "Activity Monitor" "Address Book" "Calendar" "Contacts" "cfprefsd" \
# 	"Dock" "Finder" "Google Chrome" "Google Chrome Canary" "Mail" "Messages" \
# 	"Safari" "SystemUIServer" "Transmission" "iCal" "Alfred 2"; do
# 	killall "${app}" &> /dev/null
# done
# success "Done. Note that some of these changes require a logout/restart to take effect."

# ###############################################################################
# # Kill affected applications                                                  #
# ###############################################################################
#
# # for app in "Activity Monitor" \
# #   "Address Book" \
# #   "Calendar" \
# #   "cfprefsd" \
# #   "Contacts" \
# #   "Dock" \
# #   "Finder" \
# #   "Google Chrome Canary" \
# #   "Google Chrome" \
# #   "Mail" \
# #   "Messages" \
# #   "Opera" \
# #   "Photos" \
# #   "Safari" \
# #   "SizeUp" \
# #   "Spectacle" \
# #   "SystemUIServer" \
# #   "Terminal" \
# #   "Transmission" \
# #   "Tweetbot" \
# #   "Twitter" \
# #   "iCal"; do
# #   killall "${app}" &>/dev/null
# # done
#
# echo "Done. Note that some of these changes require a logout/restart to take effect."

# sudo --validate # Authenticate the user and extends the sudo timeout for another 5 minutes
#
# # Enable /usr/lib/pam/pam_tid.so.2 for Touch ID authentication in `sudo`
# # https://github.com/apple-oss-distributions/pam_modules/blob/main/modules/pam_tid/pam_tid.c
# sudo tee /etc/pam.d/sudo_local << EOF > /dev/null
# # sudo_local: local config file which survives system update and is included for sudo
#
# # enable Touch ID authentication for sudo
# auth       sufficient     pam_tid.so
# EOF
#
# #######################################
# # MARK: System Settings
# # Updates System Settings ("/System/Applications/System Settings.app")
# #######################################
#
# # region
#
# ## Network (x-apple.systempreferences:com.apple.Network-Settings)
# /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate on    # Enable "Firewall"
# /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsigned on    # Enable "Automatically allow built-in software to receive incoming connections"
# /usr/libexec/ApplicationFirewall/socketfilterfw --setallowsignedapp on # Enable "Automatically allow downloaded signed software to receive incoming connections"
# /usr/libexec/ApplicationFirewall/socketfilterfw --setstealthmode on    # "Enable stealth mode"
#
# ## General
#
# ### Storage (x-apple.systempreferences:com.apple.settings.Storage)
# defaults write MobileMeAccounts iCloudHomeShouldEnable -bool false # Disable "iCloud Drive"
#
# ### Airdrop & Handoff (x-apple.systempreferences:com.apple.AirDrop-Handoff-Settings)
# defaults write com.apple.sharingd DiscoverableMode -string "Contacts Only"
#
# ### Language & Region (x-apple.systempreferences:com.apple.Localization-Settings)
# defaults write -g AppleLanguages -array "en-US" "en" # Preferred languages
# defaults write -g AppleLocale -string "en_US@currency=usd"
# defaults write -g AppleTemperatureUnit -string "Fahrenheit"
# defaults write -g AppleMeasurementUnits -string "Inches" # Measurement system: US
# defaults write -g AppleMetricUnits -bool false
# defaults write -g AppleLiveTextEnabled -bool true # Enable Live Text (Select text in images to copy or take action)
#
# ### Time Machine (x-apple.systempreferences:com.apple.Time-Machine-Settings)
#
# # Exclude ~/Github and `$XDG_CACHE_HOME` from Time Machine backups
# sudo defaults write /Library/Preferences/com.apple.TimeMachine SkipPaths -array \
#   "${HOME}/Github" \
#   "${HOME}/.cache"
#
# ## Appearance (x-apple.systempreferences:com.apple.Appearance-Settings)
# defaults write -g AppleInterfaceStyle -string "Dark"       # Dark mode
# defaults write -g AppleReduceDesktopTinting -bool true     # Disable "Allow wallpaper tinting in windows"
# defaults write -g AppleScrollerPagingBehavior -bool true   # Click in the scroll bar to "Jump to the spot that's clicked"
#
# ## Apple Intelligence & Siri (x-apple.systempreferences:com.apple.Siri-Settings)
# defaults write com.apple.CloudSubscriptionFeatures.optIn auto_opt_in -bool false # Disable "Apple Intelligence"
# defaults write com.apple.assistant.support "Assistant Enabled" -bool false       # Disable "Siri"
#
# ## Control Center (x-apple.systempreferences:com.apple.ControlCenter-Settings)
# defaults write com.apple.controlcenter "NSStatusItem Visible WiFi" -bool true
# defaults write com.apple.controlcenter "NSStatusItem Visible Bluetooth" -bool true
# defaults write com.apple.controlcenter "NSStatusItem Visible AirDrop" -bool true
# defaults write com.apple.controlcenter "NSStatusItem Visible FocusModes" -bool false
# defaults write com.apple.controlcenter "NSStatusItem Visible StageManager" -bool false
# defaults write com.apple.controlcenter "NSStatusItem Visible ScreenMirroring" -bool false
# defaults write com.apple.controlcenter "NSStatusItem Visible Display" -bool false
# defaults write com.apple.controlcenter "NSStatusItem Visible Sound" -bool false
# defaults write com.apple.controlcenter "NSStatusItem Visible NowPlaying" -bool false
#
# defaults write com.apple.controlcenter "NSStatusItem Visible Battery" -bool true # Show "Battery" in Menu Bar
# defaults write com.apple.weather.menu "NSStatusItem Visible Item-0" -bool true   # Show "Weather" in Menu Bar
#
# ### Menu Bar Only
# defaults write -g AppleMenuBarVisibleInFullscreen -bool false # Set "Automatically hide and show the menu bar" to "In Full Screen Only"
# defaults write -g "_HIHideMenuBar" -bool false                # See above
#
# ## Accessibility (x-apple.systempreferences:com.apple.Accessibility)
#
# ### Display
#
# defaults write com.apple.access showWindowTitlebarIcons -bool true # Enable "Show window title icons"
#
# ### Live Captions
#
# defaults write com.apple.Accessibility FaceTimeCaptions -bool false # Disable "Live Captions in FaceTime"
#
# ### Pointer Control
#
# # defaults write -g com.apple.mouse.doubleClickThreshold -float 1.7 -- Set in "Mouse"
# defaults write -g com.apple.springing.enabled -bool true # Enable "Spring-loading"
# defaults write -g com.apple.springing.delay -float 0     # Set "Spring-loading speed" to fastest (7/7)
#
# ## Desktop & Dock (x-apple.systempreferences:com.apple.Desktop-Settings)
#
# ### Dock
#
# defaults write com.apple.dock tilesize -int 64
# defaults write com.apple.dock largesize -int 16 # Set "Magnification" to Off
#
# defaults write com.apple.dock mineffect -string "scale"          # Set "Minimize windows using" to "Scale Effect"
# defaults write -g AppleActionOnDoubleClick -string "Maximize"    # Set "Double-click a window's title bar" to "Zoom"
# defaults write com.apple.dock minimize-to-application -bool true # Enables "Minimize windows into application icon"
#
# defaults write com.apple.dock autohide -bool false               # Disable "Automatically hide and show the Dock"
# defaults write com.apple.dock launchanim -bool true              # Enable "Animate opening applications"
# defaults write com.apple.dock show-process-indicators -bool true # Enable "Show indicators for open applications"
# defaults write com.apple.dock show-recents -bool false           # Disable "Show suggested and recent apps in Dock"
#
# ### Desktop & Stage Manager
#
# defaults write com.apple.WindowManager StandardHideDesktopIcons -bool false        # Enable "Show Items" for "Desktop"
# defaults write com.apple.WindowManager EnableStandardClickToShowDesktop -bool true # Set "Click wallpaper to reveal desktop" to "Always"
# defaults write com.apple.WindowManager GloballyEnabled -bool false                 # Disable "Stage Manager"
#
# ### Widgets
#
# ### Windows
#
# defaults write com.apple.dock windowtabbing -string "always" # Prefer tabs when opening documents
# defaults write -g NSCloseAlwaysConfirmsChanges -bool true    # Enable "Ask to keep changes when closing documents"
# defaults write -g NSQuitAlwaysKeepsWindows -bool false       # Enable "Close windows when quitting an application"
#
# defaults write com.apple.WindowManager EnableTilingByEdgeDrag -bool true        # Enable "Drag windows to screen edges to tile"
# defaults write com.apple.WindowManager EnableTopTilingByEdgeDrag -bool true     # Enable "Drag windows to menu bar to fill screen"
# defaults write com.apple.WindowManager EnableTilingOptionAccelerator -bool true # Enable "Hold ⌥ key while dragging windows to tile"
# defaults write com.apple.WindowManager EnableTiledWindowMargins -bool false     # Disable "Tiled windows have margins"
#
# ### Stage Manager
#
# defaults write com.apple.dock mru-spaces -bool true                          # Enable "Automatically rearrange Spaces based on most recent use"
# defaults write -g AppleSpacesSwitchOnActivate -bool true                     # Enable "When switching to an application, switch to a Space with open windows for the application"
# defaults write com.apple.dock expose-group-apps -bool true                   # Enable "Group windows by application"
# defaults write com.apple.spaces spans-displays -bool false                   # Enable "Displays have separate Spaces"
# defaults write com.apple.dock enterMissionControlByTopWindowDrag -bool false # Disable "Drag windows to top of screen to enter Mission Control"
#
# ## Spotlight (x-apple.systempreferences:com.apple.Spotlight-Settings)
# defaults write com.apple.assistant.support "Search Queries Data Sharing Status" -int 2 # Disable "Help Apple Improve Search"
#
# ## Notifications (x-apple.systempreferences:com.apple.preference.notifications)
# defaults write com.apple.ncprefs content_visibility -int 2 # Set "Show previews" to "When Unlocked"
#
# ## Sound (x-apple.systempreferences:com.apple.preference.sound)
# sudo nvram StartupMute=%01 # Disable "Play sound on startup"
#
# ## Lock Screen (x-apple.systempreferences:com.apple.Lock-Screen-Settings)
# sudo pmset -a proximitywake 1 autorestart 1 lidwake 1 # All
# sudo pmset -b displaysleep 5 disksleep 5 sleep 10     # Battery
# sudo pmset -c displaysleep 30 disksleep 30 sleep 60   # Charger (wall power)
#
# ## Privacy & Security (x-apple.systempreferences:com.apple.preference.security)
#
# ### Sensitive Content Warning
# defaults write com.apple.communicationSafetySettings "analyticsEnabled" -bool false # Disable "Improve Sensitive Content Warning"
#
# ### Analytics & Improvements
# defaults write /Library/Application\ Support/CrashReporter/DiagnosticMessagesHistory AutoSubmit -bool false # Disable "Share Mac Analytics"
# defaults write com.apple.assistant.support "Siri Data Sharing Opt-In Status" -int 2                         # Disable "Improve Siri & Dictation"
# defaults write com.apple.Accessibility AXSAudioDonationSiriImprovementEnabled -bool false                   # Disable "Improve Assistive Voice Features"
#
# ### Apple Advertising
# defaults write com.apple.AdLib allowApplePersonalizedAdvertising -bool false # Disable "Personalized Ads"
#
# ### Apple Intelligence Report
# defaults write com.apple.AppleIntelligenceReport reportDuration -int 0 # Disable "Apple Intelligence Report"
#
# ### Security
# sudo spctl --global-enable # Set "Allow applications from" to "App Store" if it is "Anywhere"
#
# if [[ "$(spctl --test-devid-status)" == "devid disabled" ]]; then
#   url='\e]8;;x-apple.systempreferences:com.apple.settings.PrivacySecurity\aSystem Settings > Privacy & Security\e]8;;\a'
#   echo -e "The option 'Allow applications from' is currently set to 'App Store'. Please go to ${url} and update it to 'App Store and Known Developers'"
# fi
#
# ## Users & Groups (x-apple.systempreferences:com.apple.Users-Groups-Settings)
# sudo sysadminctl -guestAccount off # Disable "Allow guests to log in to this computer"
#
# ## Keyboard (x-apple.systempreferences:com.apple.Keyboard-Settings)
#
# defaults write -g KeyRepeat -int 2                    # Set "Key repeat rate" to fastest
# defaults write -g InitialKeyRepeat_Level_Saved -int 6 # Set "Delay until repeat" to shortest
# defaults write com.apple.HIToolbox -int 1             # Set "Press 🌐︎ key to" to "Change Input Source"
# defaults write -g AppleKeyboardUIMode -int 2          # Enable "Keyboard navigation"
#
# ### Text Input
# defaults write -g NSAutomaticSpellingCorrectionEnabled -bool true                     # Enable "Correct spelling automatically"
# defaults write -g WebAutomaticSpellingCorrectionEnabled -bool true                    # See above
# defaults write -g NSAutomaticInlinePredictionEnabled -bool true                       # Enable "Show inline predictions"
# defaults write -g NSAutomaticPeriodSubstitutionEnabled -bool false                    # Disable "Add period with double-space"
# defaults write -g KB_SpellingLanguage -dict KB_SpellingLanguageIsAutomatic -bool true # Set "Spelling" to "Automatic by Language"
# defaults write -g NSAutomaticDashSubstitutionEnabled -bool true                       # Enable "Use smart quotes and dashes"
# defaults write -g NSAutomaticQuoteSubstitutionEnabled -bool true                      # See above
#
# ### Dictation
# defaults write com.apple.assistant.support "Dictation Enabled" -bool false # Disable "Dictation"
#
# ## Mouse (x-apple.systempreferences:com.apple.Mouse-Settings)
# defaults write -g com.apple.mouse.scaling -float 0.5              # Set "Tracking speed" to 3/10 slowest
# defaults write -g com.apple.swipescrolldirection -int 1           # Enable "Natural scrolling"
# defaults write -g com.apple.mouse.doubleClickThreshold -float 1.7 # Set "Double-click speed" to 5/11 slowest
# defaults write -g com.apple.scrollwheel.scaling -float 0.3125     # Set "Scrolling speed" to 4/8 slowest
# defaults write -g com.apple.mouse.linear -bool false              # Enable "Pointer acceleration"
#
# ## Trackpad (x-apple.systempreferences:com.apple.Trackpad-Settings)
#
# ### Point & Click
#
# defaults write -g com.apple.trackpad.scaling -float 0.6875                                 # Set "Tracking speed" to 4/10 slowest
# defaults write com.apple.AppleMultitouchTrackpad FirstClickThreshold -int 1                # Set "Click" to "Medium"
# defaults write com.apple.AppleMultitouchTrackpad SecondClickThreshold -int 1               # See above
# defaults write com.apple.AppleMultitouchTrackpad ActuationStrength -int 1                  # Disable "Quiet Click"
# defaults write -g com.apple.trackpad.forceClick -bool true                                 # Enable "Force Click and haptic feedback"
# defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerTapGesture -bool false # Set "Look up & data detectors" to "Force Click with One Finger"
# defaults write com.apple.AppleMultitouchTrackpad TrackpadCornerSecondaryClick -bool false  # Set "Secondary click" to "Click with Two Fingers"
# defaults write com.apple.AppleMultitouchTrackpad TrackpadRightClick -bool true             # See above
# defaults write com.apple.AppleMultitouchTrackpad Clicking -bool false                      # Disable "Tap to click"
#
# ### Scroll & Zoom
#
# # Natural scrolling may be enabled in global domain `com.apple.swipescrolldirection`, but this maps to the same setting set in Mouse
# # default write -g com.apple.swipescrolldirection -int 1                                                      # Enable "Natural scrolling" (for trackpad)
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadPinch -bool true                     # Enable "Zoom in or out"
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadTwoFingerDoubleTapGesture -bool true # Enable "Smart zoom"
# defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRotate -bool true                    # Enable "Rotate"
#
# ### More Gestures
#
# defaults write com.apple.AppleMultitouchTrackpad TrackpadTwoFingerFromRightEdgeSwipeGesture -int 3 # Enable "Notification Center"
# defaults write com.apple.dock showMissionControlGestureEnabled -bool true                          # Set "Mission Control" to "Swipe Up with Three Fingers"
# defaults write com.apple.AppleMultitouchTrackpad TrackpadThreeFingerVertSwipeGesture -int 2
# defaults write com.apple.AppleMultitouchTrackpad TrackpadFourFingerVertSwipeGesture -bool false
# defaults write com.apple.dock enterMissionControlByTopWindowDrag -bool false # There is no point in this setting since it just enables tiling
# defaults write com.apple.dock showAppExposeGestureEnabled -bool false        # Set "App Exposé" to "Off"
# defaults write com.apple.dock showLaunchpadGestureEnabled -bool true         # Enable "Launchpad"
# defaults write com.apple.dock showDesktopGestureEnabled -bool true           # Enable "Show Desktop"
#
# ## Printer & Scanners (x-apple.systempreferences:com.apple.Print-Scan-Settings)
# defaults write org.cups.PrintingPrefs UseLastPrinter -bool true          # Set "Default printer" to "Last Printer Used"
# defaults write org.cups.PrintingPrefs DefaultPaperID -string "na-letter" # Set "Default paper size" to "US Letter"
#
# # endregion
#
# #######################################
# # MARK: Global
# # Updates Global domain (NSGlobalDomain)
# #######################################
#
# # Enable spelling and text replacement in all applications
# defaults write -g WebContinuousSpellCheckingEnabled -boolean true
# defaults write -g WebAutomaticTextReplacementEnabled -bool true
#
# ## Expand print panel by default
# defaults write -g PMPrintingExpandedStateForPrint -bool true
# defaults write -g PMPrintingExpandedStateForPrint2 -bool true
#
# # Update tiling Keyboard Shortcuts for all applications to match Rectangle shortcuts
# defaults write -g NSUserKeyEquivalents -dict-add \
#   '\033Window\033Fill' '~^\U21A9' \
#   '\033Window\033Center' '~^c' \
#   '\033Window\033Move & Resize\033Left' '~^\UF702' \
#   '\033Window\033Move & Resize\033Right' '~^\UF703' \
#   '\033Window\033Move & Resize\033Top' '~^\UF700' \
#   '\033Window\033Move & Resize\033Bottom' '~^\UF701' \
#   '\033Window\033Move & Resize\033Bottom Left' '~^j' \
#   '\033Window\033Move & Resize\033Bottom Right' '~^k' \
#   '\033Window\033Move & Resize\033Top Left' '~^u' \
#   '\033Window\033Move & Resize\033Top Right' '~^i' \
#   '\033Window\033Move & Resize\033Return to Previous Size' '~^\U008'
#
# defaults write -g AppleFontSmoothing -int 1                     # Enable light subpixel font rendering on non-Apple LCDs
# defaults write -g ApplePressAndHoldEnabled -bool false          # Disable press-and-hold for character accents menu and enable key repeat
# defaults write -g NSDisableAutomaticTermination -bool true      # Disable automatic termination of inactive apps
# defaults write -g NSDocumentSaveNewDocumentsToCloud -bool false # Save to disk and not iCloud by default
# defaults write -g NSTextShowsControlCharacters -bool true       # Display ASCII control characters using caret notation in standard text views
#
# #######################################
# # MARK: Finder
# # Device Management / Finder (https://developer.apple.com/documentation/devicemanagement/finder)
# #######################################
#
# # General
# defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
# defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
# defaults write com.apple.finder NewWindowTarget -string "PfDe" # Set "New Finder windows show" to "Desktop"
# defaults write com.apple.finder FinderSpawnTab -bool true      # Enable "Open folders in tabs instead of new windows"
#
# # Advanced
# defaults write -g AppleShowAllExtensions -bool true                        # Enable "Show all filename extensions"
# defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false # Disable "Show warning before changing an extension"
# defaults write com.apple.finder WarnOnEmptyTrash -bool false               # Disable "Show warning before emptying the Trash"
# defaults write com.apple.finder FXRemoveOldTrashItems -bool false          # Disable "Remove items from the Trash after 30 days"
# defaults write com.apple.finder _FXSortFoldersFirst -bool true             # Enable "Keep folders on top in windows when sorting by name"
# defaults write com.apple.finder _FXSortFoldersFirstOnDesktop -bool true    # Enable "Keep folders on top on Desktop"
# defaults write com.apple.finder FXDefaultSearchScope -string "SCev"        # Set "When performing a search" to "Search This Mac"
#
# # View
# defaults write com.apple.finder FXPreferredViewStyle -string "clmv" # View > as Columns
# defaults write com.apple.finder FXArrangeGroupViewBy -string "name" # View > Sort By > Name
# defaults write com.apple.finder ShowPathbar -bool true              # View > Show Path Bar
# defaults write com.apple.finder ShowStatusBar -bool true            # View > Show Status Bar
#
# chflags nohidden ~/Library                                   # Show the ~/Library folder
# defaults write com.apple.finder AppleShowAllFiles -bool true # Show hidden files by default
#
# # Avoid creating `.DS_Store` files on network or USB volumes
# # https://support.apple.com/en-us/102064
# defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
# defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
#
# # Expand File Info panes: "General", "Open with", "Sharing & Permissions"
# defaults write com.apple.finder FXInfoPanesExpanded -dict \
#   General -bool true \
#   Metadata -bool false \
#   Name -bool false \
#   Comments -bool false \
#   OpenWith -bool true \
#   Preview -bool false \
#   Privileges -bool true
#
# #######################################
# # MARK: TextEdit
# #######################################
#
# # TextEdit > Settings... > New Document
#
# defaults write -app TextEdit RichText -bool false # Set "Format" to "Plain text"
#
# defaults write -app TextEdit WidthInChars -int 80
# defaults write -app TextEdit HeightInChars -int 40
#
# defaults write -app TextEdit NSFixedPitchFont -string "SFPro-Regular" # Plain text font
# defaults write -app TextEdit NSFixedPitchFontSize -int 12
# defaults write -app TextEdit NSFont -string "SFPro-Regular" # Rich text font
# defaults write -app TextEdit NSFontSize -int 12
#
# defaults write -app TextEdit CheckGrammarWithSpelling -bool true # Enable "Check grammar with spelling"
# defaults write -app TextEdit DataDetectors -bool true            # Enable "Data detectors"
# defaults write -app TextEdit SmartQuotes -bool false             # Disable "Smart quotes"
# defaults write -app TextEdit SmartLinks -bool true
# defaults write -app TextEdit SmartSubstitutionsEnabledInRichTextOnly -bool false # Disable "Smart quotes and dashes in rich text documents only"
#
# #######################################
# # MARK: iTerm2
# #######################################
#
# # While most iTerm settings are stored in the JSON file for Dynamic Profiles,
# # {@link file://./../../home/Library/Application%20Support/iTerm2/DynamicProfiles/profiles.json}
# # some settings must be set in the iTerm2 `.plist` file. Furthermore, the
# # `.plist` contains keys that would be impossible to sync such as `NoSync_*` or
# # keys storing terminal history. After this command is run, the `.plist` file
# # will be merged with the default settings when iTerm2 is launched.
#
# # This is represented as an OpenStep p-list dictionary since XML is very verbose
# defaults write -app iTerm '{
#   /* General */
#   PromptOnQuit = 0; // Confirm "Quit iTerm2 (⌘Q)"
#   OnlyWhenMoreTabs = 0; // Confirm closing multiple sessions
#   SavePasteHistory = 1; // Save copy/paste and command history to disk
#   EnableAPIServer = 1; // Enable Python API
#   NotifyOnlyForCriticalShellIntegrationUpdates = 0;
#   SUEnableAutomaticChecks = 0; // Check for updates automatically
#   DoubleClickPerformsSmartSelection = 1;
#   ClickToSelectCommand = 0; // Clicking on a command selects it to restrict Find and Filter
#
#   /* Appearance */
#   TabStyleWithAutomaticOption = 5; // Minimal Theme
#   WindowNumber = 0; // Show window number in title bar
#   HideTab = 0; // Show tab bar even when there is only one tab
#
#   /* Keys */
#   ForceKeyboard = 1; // This will force iTerm2 to use the specified keyboard locale instead of the system keyboard
#   KeyboardLocale = "com.apple.keylayout.US";
#
#   /* Pointer */
#   ThreeFingerEmulates = 1; // Three-finger tap emulates middle click
#
#   /* Advanced */
#   AlternateMouseScroll = 1; // Scroll wheel sends arrow keys when in alternate screen mode.
#   SetCookie = 1; // Set ITERM2_COOKIE environment variable, allowing Python scripts to be launched without confirmation?
#   PreventEscapeSequenceFromClearingHistory = 0; // Prevent CSI 3 J from clearing scrollback history?
#   NoSyncDoNotWarnBeforeMultilinePaste = 1; // Suppress warning about multi-line pastes (or a single line ending in a newline).
# }'
#
# #######################################
# # Bartender 5
# #######################################
#
# # Bartender 5 stores the profile icon as a Base64 encoded TIFF image
# UUID=$(uuidgen)
# ICON=$(base64 --input "{{ .chezmoi.workingTree }}/assets/icon.tif")
# PROFILE=$(
#   plutil -insert icon -data "${ICON}" -o - -- "{{ .chezmoi.workingTree }}/assets/bartender.xml"
# )
# defaults write -app Bartender\ 5 ProfileSettings -dict "${UUID}" "${PROFILE}"
# defaults write -app Bartender\ 5 LastKnownProfile -string "${UUID}"
# defaults write -app Bartender\ 5 PersistLastKnownProfile -bool true
#
# #######################################
# # CleanShot X
# #######################################
#
# # General
# defaults write -app CleanShot\ X captureWithoutDesktopIcons -bool true
# defaults write -app CleanShot\ X playSounds -bool true
# defaults write -app CleanShot\ X showMenubarIcon -bool true
#
# # Wallpaper
# defaults write -app CleanShot\ X overlayType -int 0
# defaults write -app CleanShot\ X transparentWindowBackground -bool true
# defaults write -app CleanShot\ X windowBackgroundPadding -int 0
# defaults write -app CleanShot\ X captureWindowShadow -bool false
#
# # Shortcuts
# defaults write -app CleanShot\ X LAVAtakeOCR -data {{ dict "carbonModifiers" 768 "carbonKey" 31 | toJson | b64enc }} # Command (⌘) + Shift (⇧) + O
#
# # Quick Access
# defaults write -app CleanShot\ X autoClosePopup -bool true
#
# # Recording
# ## General
# defaults write -app CleanShot\ X showKeystrokes -bool true
#
# # Screenshots
# defaults write -app CleanShot\ X screenshotFormat -string "png"
# defaults write -app CleanShot\ X freezeScreen -bool true
# defaults write -app CleanShot\ X crosshairMode -int 0
#
# # Advanced
# defaults write -app CleanShot\ X add2xRetinaSuffix -bool true
# defaults write -app CleanShot\ X mediaNameTemplate -array "screenshot_" "%y" "-" "%m" "-" "%d" "%H" "-" "%M" "_" "%i"
#
# # About
# defaults write -app CleanShot\ X analyticsAllowed -bool false

# #!/bin/bash
#
# echo "###############################################################################"
# echo "Printers"
# echo "###############################################################################"
#
# echo ""
# echo "Enable CUPS web interface"
#
# cupsctl WebInterface=yes
# #!/bin/bash
#
# echo "###############################################################################"
# echo "Finder"
# echo "###############################################################################"
#
# echo ""
# echo "Remove duplicates in the 'Open With' menu (also see 'lscleanup' alias)"
# /System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister \
#     -kill -r -domain local -domain system -domain user
#
# echo ""
# echo "Set Desktop as the default location for new Finder windows"
# # For other paths, use `PfLo` and `file:///full/path/here/`
# defaults write com.apple.finder NewWindowTarget -string "PfDe"
# defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop/"
#
# echo ""
# echo "Showing all filename extensions in Finder by default"
# defaults write NSGlobalDomain AppleShowAllExtensions -bool true
#
# echo ""
# echo "Allowing text selection in Quick Look/Preview in Finder by
# default"
# defaults write com.apple.finder QLEnableTextSelection -bool true
#
# echo ""
# echo "Disable Quick Look animations"
# defaults write -g QLPanelAnimationDuration -float 0
#
# echo ""
# #echo "When performing a search, search the current folder by default"
# # "SCcf"
# echo "When performing a search, search This Mac by default"
# defaults write com.apple.finder FXDefaultSearchScope -string "SCev"
#
# echo ""
# echo "Automatically open a new Finder window when a volume is mounted"
# defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
# defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
# defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true
#
# echo ""
# echo "Show item info to the right of the icons on the desktop"
# /usr/libexec/PlistBuddy -c \
#     "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" \
#     ~/Library/Preferences/com.apple.finder.plist
# #!/bin/bash
#
# echo "###############################################################################"
# echo "Google Chrome & Google Chrome Canary"
# echo "###############################################################################"
#
# echo ""
# echo "Disable the all too sensitive backswipe on trackpads"
# defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls \
#     -bool false
# defaults write com.google.Chrome.canary \
#     AppleEnableSwipeNavigateWithScrolls -bool false
#
# echo ""
# echo "Use the system-native print preview dialog"
# defaults write com.google.Chrome DisablePrintPreview -bool true
# defaults write com.google.Chrome.canary DisablePrintPreview -bool true
#
# echo ""
# echo "Expand the print dialog by default"
# defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 \
#     -bool true
# defaults write com.google.Chrome.canary \
#     PMPrintingExpandedStateForPrint2 -bool true
# #!/bin/bash
#
# echo "###############################################################################"
# echo "iTunes"
# echo "###############################################################################"
#
# #echo ""
# #echo "Stop iTunes from responding to the keyboard media keys:"
# #launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null
# #!/bin/bash
#
# echo "###############################################################################"
# echo "SSH"
# echo "###############################################################################"
#
# echo ""
# echo "Enable remote login"
# launchctl load -w /System/Library/LaunchDaemons/ssh.plist
# #!/bin/bash
#
# echo "###############################################################################"
# echo "launchctl"
# echo "###############################################################################"
#
# echo ""
# echo "Turn on locate db"
# launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist
#
# #echo ""
# #echo "Disable Notification Center and remove the menu bar icon"
# #launchctl unload -w /System/Library/LaunchAgents/com.apple.notificationcenterui.plist 2> /dev/null
#
# echo ""
# echo "Using the latest SSH from Homebrew on OSX..."
# echo ""
# # http://apple.stackexchange.com/a/223855
# echo "This changes need to be done manually."
# echo "First disable System Integrity Protection (SIP):"
# echo "* Reboot your Mac into Recovery Mode by restarting your " \
#     "computer and holding down cmd+R until the Apple logo appears " \
#     "onyour screen."
# echo "* In the menubar click Utilities > Terminal."
# echo "* In the Terminal window, type in csrutil disable."
# echo "* Restart your Mac."
# echo "Next update the ssh-agent preferences:"
# echo "* launchctl stop org.openbsd.ssh-agent"
# echo "* launchctl unload -w /System/Library/LaunchAgents/org.openbsd.ssh-agent.plist"
# echo "* emacs -nw /System/Library/LaunchAgents/org.openbsd.ssh-agent.plist"
# echo "* launchctl load -w -S Aqua /System/Library/LaunchAgents/org.openbsd.ssh-agent.plist"
# echo "Finally, re-enable SIP in Recovery Mode with csrutil enable."
# #!/bin/bash
#
# echo "###############################################################################"
# echo "Messages"
# echo "###############################################################################"
#
# echo ""
# echo "Disable smart quotes as it's annoying for messages that contain code"
# defaults write com.apple.messageshelper.MessageController \
#     SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled" -bool false
# #!/bin/bash
#
# echo "###############################################################################"
# echo "OmniFocus"
# echo "###############################################################################"
#
# echo ""
# echo "Add service shortcut"
# /usr/libexec/PlistBuddy -c \
#     "Add :NSServicesStatus:'com.omnigroup.OmniFocus2 - OmniFocus 2\: Send to Inbox - _jot':key_equivalent string '@\$x'" \
#     pbs.plist >/dev/null 2>&1
# /System/Library/CoreServices/pbs -flush
# #!/bin/bash
#
# echo "###############################################################################"
# echo "Airplay"
# echo "###############################################################################"
#
# echo ""
# echo "Show mirroring options"
# /usr/libexec/PlistBuddy -c "Set showInMenuBarIfPresent true" \
#     com.apple.airplay.plist
# #!/bin/bash
#
# echo "###############################################################################"
# echo "pmset"
# echo "###############################################################################"
#
# ## Show All Power Management Settings
# #sudo pmset -g
#
# # The -a, -b, -c, -u flags determine whether the settings apply to
# # battery ( -b ), charger (wall power) ( -c ), UPS ( -u ) or all ( -a ).
#
# echo ""
# echo "Speeding up wake from sleep to 24 hours from an hour"
# # http://www.cultofmac.com/221392/quick-hack-speeds-up-retina-macbooks-wake-from-sleep-os-x-tips/
# pmset -a standbydelay 86400
#
# echo ""
# echo "For charger, disable computer sleep"
# pmset -c sleep 0
# echo "For battery, put computer to sleep after 15 minutes of inactivity"
# pmset -c sleep 0
#
# echo ""
# #echo "Disable putting the monitor to sleep"
# #pmset -a displaysleep 0
# echo "Put display to sleep after 15 minutes of inactivity"
# pmset -a displaysleep 15
#
# echo "###############################################################################"
# echo "SSD"
# echo "###############################################################################"
#
# #echo ""
# #echo "Remove the sleep image file to save disk space"
# #rm /Private/var/vm/sleepimage
#
# #echo ""
# #echo "Create a zero-byte file instead..."
# #touch /Private/var/vm/sleepimage
# #echo "...and make sure it can't be rewritten"
# #chflags uchg /Private/var/vm/sleepimage
# #!/bin/bash
#
# echo "###############################################################################"
# echo "Printing"
# echo "###############################################################################"
#
# echo ""
# echo "Turn off printer sharing"
# cupsctl --no-share-printers
# #!/bin/bash
#
# echo "###############################################################################"
# echo "PyCharm"
# echo "###############################################################################"
#
# echo ""
# echo "Killing application in order to change theme"
# killall "PyCharm" >/dev/null 2>&1
#
# echo ""
# echo "Downloading solarized theme"
# source_dir="${HOME}/Library/Preferences/PyCharm2016.2/colors"
# mkdir -p "${source_dir}"
# curl -B \
#     "https://raw.githubusercontent.com/altercation/solarized/master/intellij-colors-solarized/Solarized%20Dark.xml" \
#     -o "${source_dir}/Solarized Dark.xml"
# #!/bin/bash
#
# echo "###############################################################################"
# echo "Safari"
# echo "###############################################################################"
#
# echo ""
# echo "Set Safari's home page to 'about:blank' for faster loading"
# defaults write com.apple.Safari HomePage -string "about:blank"
#
# echo ""
# echo "Reduce up safari render delay"
# defaults write com.apple.Safari WebKitInitialTimedLayoutDelay 0.25
#
# echo ""
# echo "Allow hitting the Backspace key to go to the previous page in history"
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled \
#     -bool true
#
# echo ""
# echo "Hide Safari's sidebar in Top Sites"
# defaults write com.apple.Safari ShowSidebarInTopSites -bool false
#
# echo ""
# echo "Enable Safari's debug menu"
# defaults write com.apple.Safari IncludeInternalDebugMenu -bool true
#
# #echo ""
# #echo "Force Safari to open target links in new tabs"
# defaults write com.apple.Safari TargetedClicksCreateTabs -bool true
#
# echo ""
# echo "Make Safari's search banners default to Contains instead of Starts With"
# defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false
#
# echo ""
# echo "Remove useless icons from Safari's bookmarks bar?"
# select yn in "Yes" "No"; do
#     case "${yn}" in
#     Yes)
#         defaults write com.apple.Safari ProxiesInBookmarksBar "()"
#         break
#         ;;
#     No) exit ;;
#     *) ;;
#     esac
# done
#
# echo ""
# echo "Enable the Develop menu and the Web Inspector in Safari"
# defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
#
# echo ""
# echo "Open pages in tabs instead of windows: automatically"
# defaults write com.apple.Safari TabCreationPolicy -int 1
#
# echo ""
# echo "Don't make new tabs active"
# defaults write com.apple.Safari OpenNewTabsInFront -bool false
#
# echo ""
# echo "Command-clicking a link creates tabs"
# defaults write com.apple.Safari CommandClickMakesTabs -bool true
#
# echo ""
# echo "Disable AutoFill from Address Book"
# defaults write com.apple.Safari AutoFillFromAddressBook -bool false
# defaults -currentHost write ~/Library/Preferences/com.apple.Safari AutoFillFromAddressBook -bool false
#
# echo ""
# echo "Disable AutoFill from Credit Card"
# defaults write com.apple.Safari AutoFillCreditCardData -bool false
# defaults -currentHost write ~/Library/Preferences/com.apple.Safari AutoFillCreditCardData -bool false
#
# echo ""
# echo "Warn About Fraudulent Websites"
# defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true
# defaults -currentHost write ~/Library/Preferences/com.apple.Safari WarnAboutFraudulentWebsites -bool true
#
# echo ""
# echo "Enable plug-ins"
# defaults write com.apple.Safari WebKitPluginsEnabled -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2PluginsEnabled -bool true
#
# echo ""
# echo "Enable JavaScript"
# defaults write com.apple.Safari WebKitJavaScriptEnabled -bool true
# defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptEnabled -bool true
#
# echo ""
# echo "Block pop-up windows"
# defaults write com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically -bool false
# defaults -currentHost write ~/Library/Preferences/com.apple.Safari WebKitJavaScriptCanOpenWindowsAutomatically \
#     -bool false
# defaults write com.apple.Safari \
#     com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false
# defaults -currentHost write ~/Library/Preferences/com.apple.Safari \
#     com.apple.Safari.ContentPageGroupIdentifier.WebKit2JavaScriptCanOpenWindowsAutomatically -bool false
#
# echo ""
# echo "Treat SHA1 certificates as insecure"
# defaults -currentHost write ~/Library/Preferences/com.apple.Safari TreatSHA1CertificatesAsInsecure -bool true
#
# echo ""
# echo "Disable Reading List"
# defaults write com.apple.Safari com.apple.Safari.ReadingListFetcher.WebKit2PluginsEnabled -bool false
# defaults write com.apple.Safari com.apple.Safari.ReadingListFetcher.WebKit2LoadsImagesAutomatically -bool false
# defaults write com.apple.Safari \
#     com.apple.Safari.ReadingListFetcher.WebKit2LoadsSiteIconsIgnoringImageLoadingPreference -bool true
# defaults write com.apple.Safari com.apple.Safari.ReadingListFetcher.WebKit2JavaScriptEnabled -bool false
#
# echo ""
# echo "Update extensions automatically"
# defaults write com.apple.Safari InstallExtensionUpdatesAutomatically -bool true
#
# echo ""
# echo "Enable continuous spellchecking"
# defaults write com.apple.Safari WebContinuousSpellCheckingEnabled -bool true
#
# echo ""
# echo "Enable auto-correct"
# defaults write com.apple.Safari WebAutomaticSpellingCorrectionEnabled -bool true
# #!/bin/bash
#
# echo "###############################################################################"
# echo "ScreenSharing.app"
# echo "###############################################################################"
#
# echo ""
# echo "Show the full toolbar"
# defaults write com.apple.ScreenSharing \
#     'NSToolbar Configuration ControlToolbar' -dict-add \
#     'TB Item Identifiers' \
#     '(Scale,Control,Share,Curtain,Capture,FullScreen,GetClipboard,SendClipboard,Quality)'
# #!/bin/bash
#
# echo "###############################################################################"
# echo "System Preferences/Bluetooth"
# echo "###############################################################################"
#
# echo ""
# echo "Show Bluetooth in menu bar"
# /usr/libexec/PlistBuddy -c \
#     "Add :menuExtras string '/System/Library/CoreServices/Menu Extras/Bluetooth.menu'" \
#     com.apple.systemuiserver.plist >/dev/null 2>&1
# #!/bin/bash
#
# echo "###############################################################################"
# echo "System Preferences/General"
# echo "###############################################################################"
#
# plist="com.apple.LaunchServices/com.apple.launchservices.secure.plist"
#
# echo ""
# echo "Set my default apps for web"
# plb=/usr/libexec/PlistBuddy
# lsh=":LSHandlers:"
# add="Add ${lsh}"
# remove="Remove ${lsh}"
# set="Set ${lsh}"
# add_lsh() {
#     menuitem="${1}"
#     "${plb}" -c "${remove}${menuitem}" "${plist}"
#     "${plb}" -c "${add}${menuitem} dict" "${plist}"
#     "${plb}" -c "${add}${menuitem}:showForUpdates bool" "${plist}"
#     "${plb}" -c "${set}${menuitem}:showForUpdates true" "${plist}"
#     "${plb}" -c "${add}${menuitem}:popupFix bool" "${plist}"
#     "${plb}" -c "${set}${menuitem}:popupFix false" "${plist}"
#     "${plb}" -c "${add}${menuitem}:updateDisplayTime integer" "${plist}"
#     "${plb}" -c "${set}${menuitem}:updateDisplayTime 60" "${plist}"
#     "${plb}" -c "${add}${menuitem}:controlled integer" "${plist}"
#     "${plb}" -c "${set}${menuitem}:controlled 1" "${plist}"
# }
#
# add_app_settings "com.apple.menuextra.bluetooth"
# add_app_settings "com.box.sync"
# add_app_settings "com.corecode.SMARTReporter"
# add_app_settings "com.getdropbox.dropbox"
# add_app_settings "com.google.GoogleDrive"
# add_app_settings "com.softorino.iBetterCharge"
# add_app_settings "net.tunnelblick.tunnelblick"
# add_app_settings "org.herf.Flux"
#
# menuitem="com.apple.menuextra.volume"
# "${plb}" -c "${add}${menuitem} dict" "${plist}"
# "${plb}" -c "${add}${menuitem}:showForUpdates bool" "${plist}"
# "${plb}" -c "${set}${menuitem}:showForUpdates false" "${plist}"
# "${plb}" -c "${add}${menuitem}:popupFix bool" "${plist}"
# "${plb}" -c "${set}${menuitem}:popupFix false" "${plist}"
# "${plb}" -c "${add}${menuitem}:updateDisplayTime integer" "${plist}"
# "${plb}" -c "${set}${menuitem}:updateDisplayTime 5" "${plist}"
# "${plb}" -c "${add}${menuitem}:controlled integer" "${plist}"
# "${plb}" -c "${set}${menuitem}:controlled 2" "${plist}"
# #!/bin/bash
#
# echo "###############################################################################"
# echo "System Preferences/Security & Privacy"
# echo "###############################################################################"
#
# echo "Want to enable FileVault?"
# select yn in "Yes" "No"; do
#     case "${yn}" in
#     Yes)
#         fdesetup enable
#         break
#         ;;
#     No) exit ;;
#     *) ;;
#     esac
# done
# #!/bin/bash
#
# echo "###############################################################################"
# echo "System Preferences/Spotlight"
# echo "###############################################################################"
#
# #echo "Change indexing order and disable some search results"
# #defaults write com.apple.spotlight orderedItems -array \
# # '{"enabled" = 1;"name" = "APPLICATIONS";}' \
# # '{"enabled" = 1;"name" = "SYSTEM_PREFS";}' \
# # '{"enabled" = 1;"name" = "DIRECTORIES";}' \
# # '{"enabled" = 1;"name" = "PDF";}' \
# # '{"enabled" = 1;"name" = "FONTS";}' \
# # '{"enabled" = 0;"name" = "DOCUMENTS";}' \
# # '{"enabled" = 0;"name" = "MESSAGES";}' \
# # '{"enabled" = 0;"name" = "CONTACT";}' \
# # '{"enabled" = 0;"name" = "EVENT_TODO";}' \
# # '{"enabled" = 0;"name" = "IMAGES";}' \
# # '{"enabled" = 0;"name" = "BOOKMARKS";}' \
# # '{"enabled" = 0;"name" = "MUSIC";}' \
# # '{"enabled" = 0;"name" = "MOVIES";}' \
# # '{"enabled" = 0;"name" = "PRESENTATIONS";}' \
# # '{"enabled" = 0;"name" = "SPREADSHEETS";}' \
# # '{"enabled" = 0;"name" = "SOURCE";}' \
# # '{"enabled" = 0;"name" = "MENU_DEFINITION";}' \
# # '{"enabled" = 0;"name" = "MENU_OTHER";}' \
# # '{"enabled" = 0;"name" = "MENU_CONVERSION";}' \
# # '{"enabled" = 0;"name" = "MENU_EXPRESSION";}' \
# # '{"enabled" = 0;"name" = "MENU_WEBSEARCH";}' \
# # '{"enabled" = 0;"name" = "MENU_SPOTLIGHT_SUGGESTIONS";}'
#
# echo ""
# echo "Make sure indexing is enabled for the main volume"
# mdutil -i on / >/dev/null
#
# echo ""
# echo "Want to rebuild the Spotlight index?"
# select yn in "Yes" "No"; do
#     case "${yn}" in
#     Yes)
#         echo "Load new settings before rebuilding the index"
#         killall mds >/dev/null 2>&1
#         echo "Rebuild the index from scratch"
#         mdutil -E / >/dev/null
#         break
#         ;;
#     No) exit ;;
#     *) ;;
#     esac
# done
# #!/bin/bash
#
# echo "###############################################################################"
# echo "System Preferences"
# echo "###############################################################################"
#
# core_apps="/System/Library/CoreServices/Applications"
# archives_pref="${core_apps}/Archive Utility.app/Contents/Resources/Archives.prefPane"
#
# echo ""
# echo "Install hidden Archive settings preference pane"
# cp -r "${archives_pref}" /Library/PreferencePanes/.
#
# echo ""
# echo "Symlink Network Utility.app"
# ln -s "${core_apps}/Network Utility.app" /Applications/.
#
# echo ""
# echo "Symlink Feedback Assistant.app"
# ln -s "${core_apps}/Feedback Assistant.app" /Applications/.
#
# echo ""
# echo "Symlink Directory Utility.app"
# ln -s "${core_apps}/Directory Utility.app" /Applications/.
# #!/bin/bash
#
# echo "###############################################################################"
# echo "systemsetup"
# echo "###############################################################################"
#
# ## Check System Sleep Idle Time
# #systemsetup -getcomputersleep
#
# ## Never go into computer sleep mode
# # systemsetup -setcomputersleep Off > /dev/null
# ## or
# # systemsetup -setcomputersleep Never
#
# #echo ""
# #echo "Set system sleep idle time to 60 minutes"
# #systemsetup -setcomputersleep 60
#
# echo ""
# echo "Turn off wake on network access"
# systemsetup -setwakeonnetworkaccess off
#
# echo ""
# echo "Automatic restart on system freeze"
# systemsetup -setrestartfreeze on
#
# echo ""
# echo "Set the timezone"
# #See `sudo systemsetup -listtimezones` for other values
# systemsetup -settimezone "America/New_York" >/dev/null
#
#
# ---
# - name: Show the main window when launching Activity Monitor
#   community.general.osx_defaults:
#     domain: com.apple.ActivityMonitor
#     key: OpenMainWindow
#     type: bool
#     value: true
#     state: present
#
# - name: Visualize CPU usage in the Activity Monitor Dock icon
#   community.general.osx_defaults:
#     domain: com.apple.ActivityMonitor
#     key: IconType
#     type: int
#     value: 5
#     state: present
#
# - name: Show all processes in Activity Monitor
#   community.general.osx_defaults:
#     domain: com.apple.ActivityMonitor
#     key: ShowCategory
#     type: int
#     value: 0
#     state: present
#
# - name: Sort Activity Monitor results by CPU usage
#   community.general.osx_defaults:
#     domain: com.apple.ActivityMonitor
#     key: SortColumn
#     type: string
#     value: CPUUsage
#     state: present
#
# - name: Sort Activity Monitor results by CPU usage
#   community.general.osx_defaults:
#     domain: com.apple.ActivityMonitor
#     key: SortDirection
#     type: int
#     value: 0
#     state: present
# ---
# - name: Enable the debug menu in Address Book
#   community.general.osx_defaults:
#     domain: com.apple.addressbook
#     key: ABShowDebugMenu
#     type: bool
#     value: true
#     state: present
#
# - name: Show first name before last name
#   community.general.osx_defaults:
#     domain: com.apple.addressbook
#     key: ABNameDisplay
#     type: int
#     value: 0
#     state: present
#
# - name: Sort by last name
#   community.general.osx_defaults:
#     domain: com.apple.addressbook
#     key: ABNameSortingFormat
#     type: string
#     value: sortingFirstName sortingLastName
#     state: present
# ---
# - name: Turn on Firewall
#   community.general.osx_defaults:
#     domain: com.apple.alf
#     key: globalstate
#     type: bool
#     value: true
#     state: present
#
# - name: Enable stealth mode
#   community.general.osx_defaults:
#     domain: com.apple.alf
#     key: stealthenabled
#     type: bool
#     value: true
#     state: present
#
# - name: Allow signed applications to receive incoming connections
#   community.general.osx_defaults:
#     domain: com.apple.alf
#     key: allowsignedenabled
#     type: bool
#     value: true
#     state: present
# ---
# - name: Enable the WebKit Developer Tools in the Mac App Store
#   community.general.osx_defaults:
#     domain: com.apple.appstore
#     key: WebKitDeveloperExtras
#     type: bool
#     value: true
#     state: present
#
# - name: Enable Debug Menu in the Mac App Store
#   community.general.osx_defaults:
#     domain: com.apple.appstore
#     key: ShowDebugMenu
#     type: bool
#     value: true
#     state: present
# ---
# - name: Bartender – Show menu bar icon
#   community.general.osx_defaults:
#     domain: com.surteesstudios.Bartender
#     key: showMenuBarIcon
#     type: bool
#     value: true
#     state: present
#
# - name: Bartender - Show menu bar at startup
#   community.general.osx_defaults:
#     domain: com.surteesstudios.Bartender
#     key: showBarAtStartup
#     type: bool
#     value: true
#     state: present
# ---
# - name: BezelServices - Automatically illuminate built-in MacBook keyboard in low light
#   community.general.osx_defaults:
#     domain: com.apple.BezelServices
#     key: kDim
#     type: bool
#     value: true
#     state: present
#
# - name: BezelServices - Turn off keyboard illumination when computer is not used for 5 minutes
#   community.general.osx_defaults:
#     domain: com.apple.BezelServices
#     key: kDimTime
#     type: int
#     value: 300
#     state: present
# ---
# - name: Caffeine - Activate on launch
#   community.general.osx_defaults:
#     domain: com.lightheadsw.caffeine
#     key: ActivateOnLaunch
#     type: bool
#     value: false
#     state: present
#   notify: Restart Caffeine
#
# - name: Caffeine - Suppress launch message
#   community.general.osx_defaults:
#     domain: com.lightheadsw.caffeine
#     key: SuppressLaunchMessage
#     type: bool
#     value: true
#     state: present
#   notify: Restart Caffeine
#
# - name: Caffeine - Set duration to infinity
#   community.general.osx_defaults:
#     domain: com.lightheadsw.caffeine
#     key: DefaultDuration
#     type: string
#     value: "0"
#     state: present
#   notify: Restart Caffeine
# ---
# - name: Dayone - Enable auto backup
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: AutoBackupEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable correct spelling in editor
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: EditorCorrectSpellingEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable grammar check in editor
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: EditorGrammarCheckEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable spell check in editor
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: EditorSpellCheckEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable embedded media
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: EmbedMediaEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Set font size
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: FontSize
#     type: string
#     value: "16"
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable inspirational messages
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: InspirationalMessagesEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Link twitter handles
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: LinkTwitterHandles
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable markdown support
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: MarkdownEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Lock if idle
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: SecurityIdleLockEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Set lock time
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: SecurityIdleLockTime
#     type: string
#     value: "20"
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable password protection
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: SecurityPasswordProtectionEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
#
# - name: Dayone - Enable lock on sleep
#   community.general.osx_defaults:
#     domain: com.dayoneapp.dayone
#     key: SecuritySleepLockEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Day One
# ---
# system_defaults:
#   misc:
#     enable_ssh: false
#
#     enable_sudden_motion_sensor: true
#
#     enable_hibernation: true
#
#   # Default filetype <-> app associations
#   # Values:
#   #   extension: file extension
#   #   handler: application bundle identifier
#   # Example:
#   #   default_applications:
#   #     - { extension: avi, handler: com.colliderli.iina }
#   default_applications: []
#
# system:
#   ui:
#     # Overall system interface color
#     # This influences Menubar, Dock, Spotlight and a few others.
#     # VALUES: "Light", "Dark"
#     interface_style: Dark
#
#     # By default the macOS save/print dialog opens in a simplified version.
#     # Enable to show the full dialog by default.
#     expand_save_panel: true
#     expand_print_panel: true
#
#     # Window action when double clicking on the titlebar of a window.
#     # VALUES: "Maximize", "Minimize"
#     # titlebar_doubleclick_action: "Maximize"
#
#     # Font smoothing on non apple displays
#     enable_subpixel_font_rendering: true
#
#     # Focus ring is drawn around focused dialog
#     # elements like buttons and textfields
#     # enable_focus_ring: true
#
#     # macOS ommits common file extensions by default.
#     show_all_file_extensions: true
#
#     # Antique osx dashboard, this was more or less replaced by the sidebar.
#     disable_dashboard: true
#
#     # Open directory if you drag a file/folder onto it.
#     enable_springloading_directories: true
#     springloading_directories_delay: 0
#
#     window_resize_speed: 0.001
#     enable_opening_closing_window_animations: false
#
#     # Show scrollbars
#     # Values: "WhenScrolling", "Always"
#     show_scrollbars: Always
#
#     enable_menubar_transparency: false
#
# screensaver:
#   # Screensaver activation delay in seconds
#   # 0 disables the screensaver
#   activation_delay: 300
#
#   # Ask for user password when screensaver is active
#   ask_password: true
#
#   # Delay in seconds after which password is asked
#   ask_password_delay: 0
#
#   screensaver:
#     name: Aerial
#     path: ~/Library/Screen Savers/Aerial.saver
#
# input:
#   # Various spell correction settings
#   enable_auto_correct: true
#   enable_smart_quotes: false
#   enable_smart_dashes: false
#   # enable_automatic_capitalization: true
#   # enable_automatic_periods: true
#   enable_continuous_spell_checking: true
#
#   # If enabled, you get a special char menu on certain letters instead of key repeat
#   # enable_press_and_hold: true
#
#   # Key repeat speed
#   # Min value is 1
#   # key_repeat_rate: 2
#
#   # Delay time until key repeat kicks in
#   # initial_key_repeat_delay: 22
#
#   # Enables selections of dialog buttons with tab key
#   enable_full_keyboard_access: true
#
#   # Space switching hotkeys (ctrl + 1-9)
#   # enable_space_hotkeys: false
##
# security:
#   # Gatekeeper won't allow you to easily install
#   # unsigned apps not downloaded from the Mac App Store
#   enable_gatekeeper: true
#
#   # Quarantine asks you if you really want
#   # to open a downloaded executable
#   enable_quarantine: true
#
# misc:
#   save_application_state_on_quit: true
#
#   disable_dsstore_on_network_shares: true
#
#   disable_dsstore_on_usb_drives: true
#
#   disable_disk_image_verification: true
#
#   disable_spotlight_network_indexing: true
#
#   save_new_docs_to_icloud: false
#
#   enable_ssh: false # true causes failure on latest macos versions.
#
#   enable_crash_reporter: true
#
#   enable_startup_sound: false
#
#   enable_sudden_motion_sensor: false # Not useful for SSDs
#
#   enable_hibernation: false
#
#   # Default filetype <-> app associations
#   # Values:
#   #   extension: file extension
#   #   handler: application bundle identifier
#   # Example:
#   #   default_applications:
#   #     - { extension: avi, handler: com.colliderli.iina }
#   # default_applications: []
#
# ######################################
# #               Finder               #
# ######################################
#
# finder:
#   # Should dotfiles be shown?
#   # "cmd + shift - ." toggles this
#   show_all_files: true
#
#   # Keep folders on top when you sort by name?
#   keep_folders_on_top: false
#
#   # Show posix path in finder titlebar?
#   show_full_path_in_titlebar: true
#
#   # Show interactive pathbar at the bottom?
#   show_pathbar: true
#
#   # Show statusbar with selection and filesize info at the bottom?
#   show_statusbar: true
#
#   # Should finder be quitable? (It instantly restarts anyway)
#   enable_quit_menu_item: true
#
#   # VALUES: "icnv" for icon view, "clmv" for column view, "Flwv" for cover flow view
#   # 'Nlsv' for ?.
#   default_view_style: clmv
#
#   # Which items should be shown on desktop?
#   show_external_harddrives_on_desktop: true
#   show_harddrives_on_desktop: true
#   show_mounted_servers_on_desktop: true
#   show_removable_media_on_desktop: true
#
#   # Hide ~/Library ?
#   hide_user_library: false
#
#   # Hide /Volumes ?
#   hide_system_volumes: false
#
#   # Which panes of the Getinfo window should be expanded by default?
#   expand_infopane:
#     - { name: General, value: true }
#     # - {name: MetaData, value: false}
#     - { name: OpenWith, value: false }
#     # - {name: Name, value: false}
#     # - {name: Comments, value: false}
#     # - {name: Preview, value: true}
#     - { name: Privileges, value: false }
#
#   # Automatic arrangement of icons
#   # Values: "none", "grid", "name", "kind", "dateModified",
#   #         "dateCreated", "dateLastOpened", "dateAdded", "size", "label"
#   iconview_arrange_by: grid
#
#   # controls the gap between icons
#   # when using arrange by grid
#   # iconview_grid_spacing: 54
#
#   # Size of the icons
#   # iconview_icon_size: 64
#
#   # Show item info below item name?
#   iconview_show_item_info: true
#
#   # Font size
#   # iconview_text_size: 12
#
#   # Show item preview as icon? (mostly useful for images)
#   # iconview_show_icon_preview: true
#
#   # When disabled label is shown to the right of icons
#   # iconview_show_label_on_bottom: true
#
#   # Doesn't work on newer macOS versions
#   # enable_quicklook_text_selection: false
#
#   disable_all_animations: true
#
# ######################################
# #               Safari               #
# ######################################
#
# safari:
#   show_full_url_in_address_bar: true
#
#   open_safe_files_automatically: false
#
#   enable_status_bar: true
#
#   enable_developer_menu: true
#
#   autofill_passwords: false
#
#   show_favorites_bar: true
#
#   disable_thumbnail_cache: false
#
#   # search_with_word_start_only: true
#
# ######################################
# #              TextEdit              #
# ######################################
#
# textedit2:
#   default_doc_plaintext: true
#
# ######################################
# #              Terminal              #
# ######################################
#
# terminal2:
#   enable_secure_keyboard_entry: true
#
# ######################################
# #                macOS               #
# ######################################
#
# system_defaults2:
#   ui:
#     # Overall system interface color
#     # This influences Menubar, Dock, Spotlight
#     # and a few others.
#     # VALUES: "Light", "Dark"
#     interface_style: Light
#
#     # By default the macOS save/print dialog opens in a
#     # simplified version, enable to show the full dialog
#     # by default.
#     expand_save_panel: false
#     expand_print_panel: false
#
#     # Window action when double clicking on
#     # the titlebar of a window.
#     # VALUES: "Maximize", "Minimize"
#     titlebar_doubleclick_action: Maximize
#
#     # Font smoothing on non apple displays
#     enable_subpixel_font_rendering: false
#
#     # Focus ring is drawn around focused dialog
#     # elements like buttons and textfields
#     enable_focus_ring: true
#
#     # macOS ommits common file extensions
#     # by default
#     show_all_file_extensions: false
#
#     # Antique osx dashboard, this was
#     # more or less replaced by the sidebar
#     disable_dashboard: true
#
#     # Open directory if you drag
#     # a file/folder onto it
#     enable_springloading_directories: true
#     springloading_directories_delay: 2
#
#     #
#     window_resize_speed: 0.2
#     enable_opening_closing_window_animations: true
#
#     # Show scrollbars
#     # Values: "WhenScrolling", "Always"
#     show_scrollbars: WhenScrolling
#
#     enable_menubar_transparency: true
#
#   screensaver:
#     # Screensaver activation delay in seconds
#     # 0 disables the screensaver
#     activation_delay: 0
#
#     # Ask for user password when screensaver is active
#     ask_password: false
#
#     # Delay in seconds after which password is asked
#     ask_password_delay: 0
#
#     screensaver:
#       name: Flurry
#       path: /System/Library/Screen Savers/Flurry.saver
#
#   input:
#     # Various spell correction settings
#     enable_auto_correct: true
#     enable_smart_quotes: true
#     enable_smart_dashes: true
#     enable_automatic_capitalization: true
#     enable_automatic_periods: true
#     enable_continuous_spell_checking: true
#
#     # If enabled, you get a special char menu on
#     # certain letters instead of key repeat
#     enable_press_and_hold: true
#
#     # Key repeat speed
#     # Min value is 1
#     key_repeat_rate: 2
#
#     # Delay time until key repeat kicks in
#     initial_key_repeat_delay: 22
#
#     # Enables selections of dialog buttons with tab key
#     enable_full_keyboard_access: false
#
#     # Space switching hotkeys (ctrl + 1-9)
#     enable_space_hotkeys: false
##
#   security:
#     # Gatekeeper won't allow you to easily install
#     # unsigned apps not downloaded from the Mac App Store
#     enable_gatekeeper: true
#
#     # Quarantine asks you if you really want
#     # to open a downloaded executable
#     enable_quarantine: true
#
#   misc:
#     save_application_state_on_quit: true
#
#     disable_dsstore_on_network_shares: false
#
#     disable_dsstore_on_usb_drives: false
#
#     disable_disk_image_verification: false
#
#     disable_spotlight_network_indexing: false
#
#     save_new_docs_to_icloud: true
#
#     enable_ssh: false
#
#     enable_crash_reporter: true
#
#     enable_sudden_motion_sensor: true
#
#     enable_hibernation: true
#
#   # Default filetype <-> app associations
#   # Values:
#   #   extension: file extension
#   #   handler: application bundle identifier
#   # Example:
#   #   default_applications:
#   #     - { extension: avi, handler: com.colliderli.iina }
#   default_applications: []
#
# ######################################
# #               Finder               #
# ######################################
#
# finder_defaults:
#   # Keep folders on top when you sort by name?
#   keep_folders_on_top: false
#
#   # Show posix path in finder titlebar?
#   show_full_path_in_titlebar: false
#
#   # Show interactive pathbar at the bottom?
#   show_pathbar: false
#
#   # Show statusbar with selection and filesize info at the bottom?
#   show_statusbar: false
#
#   # Should finder be quitable? (It instantly restarts anyway)
#   enable_quit_menu_item: false
#
#   # VALUES: "icnv" for icon view, "clmv" for column view, "Flwv" for cover flow view
#   default_view_style: icnv
#
#   # Which items should be shown on desktop?
#   show_external_harddrives_on_desktop: true
#   show_harddrives_on_desktop: true
#   show_mounted_servers_on_desktop: true
#   show_removable_media_on_desktop: true
#
#   # Hide ~/Library ?
#   hide_user_library: true
#
#   # Hide /Volumes ?
#   hide_system_volumes: true
#
#   # Which panes of the Getinfo window should be expanded by default?
#   expand_infopane:
#     - { name: General, value: true }
#     - { name: MetaData, value: false }
#     - { name: OpenWith, value: false }
#     - { name: Name, value: false }
#     - { name: Comments, value: false }
#     - { name: Preview, value: true }
#     - { name: Privileges, value: false }
#
#   # Automatic arrangement of icons
#   # Values: "none", "grid", "name", "kind", "dateModified",
#   #         "dateCreated", "dateLastOpened", "dateAdded", "size", "label"
#   iconview_arrange_by: falsene
#
#   # controls the gap between icons
#   # when using arrange by grid
#   iconview_grid_spacing: 54
#
#   # Size of the icons
#   iconview_icon_size: 64
#
#   # Show item info below item name?
#   iconview_show_item_info: false
#
#   # Font size
#   iconview_text_size: 12
#
#   # Show item preview as icon? (mostly useful for images)
#   iconview_show_icon_preview: true
#
#   # When disabled label is shown to the right of icons
#   iconview_show_label_on_bottom: true
#
#   # Doesn't work on newer macOS versions
#   enable_quicklook_text_selection: false
#
#   #
#   disable_all_animations: false
#
# ######################################
# #               Safari               #
# ######################################
#
# safari_defaults:
#   show_full_url_in_address_bar: false
#
#   open_safe_files_automatically: false
#
#   enable_status_bar: false
#
#   enable_developer_menu: false
#
#   autofill_passwords: true
#
#   show_favorites_bar: false
#
#   disable_thumbnail_cache: false
#
#   search_with_word_start_only: true
#
# ######################################
# #              TextEdit              #
# ######################################
#
# textedit: {}
# textedit_defaults:
#   default_doc_plaintext: false
#
# ######################################
# #              Terminal              #
# ######################################
#
# terminal_defaults:
#   enable_secure_keyboard_entry: true
#
# system2:
#   ui:
#     interface_style: Dark
#     expand_save_panel: true
#     expand_print_panel: true
#     titlebar_doubleclick_action: Minimize
#     enable_subpixel_font_rendering: true
#     enable_focus_ring: false
#     show_all_file_extensions: true
#     disable_dashboard: true
#     enable_springloading_directories: true
#     springloading_directories_delay: 2
#     window_resize_speed: 0.001
#     enable_opening_closing_window_animations: false
#   screensaver:
#     activation_delay: 300
#     ask_password: true
#     ask_password_delay: 0
#     screensaver:
#       name: Fliqlo
#       path: /Users/{{ ansible_user }}/Library/Screen Savers/Fliqlo.saver
#   input:
#     enable_auto_correct: false
#     enable_smart_quotes: false
#     enable_smart_dashes: false
#     enable_automatic_capitalization: false
#     enable_automatic_periods: false
#     enable_continuous_spell_checking: false
#     key_repeat_rate: 2
#     initial_key_repeat_delay: 22
#     enable_full_keyboard_access: true
#     enable_press_and_hold: false
#     enable_space_hotkeys: true
#   security:
#     enable_gatekeeper: false
#     enable_quarantine: false
#   misc:
#     save_application_state_on_quit: true
#     disable_dsstore_on_network_shares: true
#     disable_dsstore_on_usb_drives: true
#     disable_disk_image_verification: true
#     disable_spotlight_network_indexing: true
#     save_new_docs_to_icloud: false
#     enable_ssh: true
#     enable_crash_reporter: false
#     enable_startup_sound: false
#     enable_sudden_motion_sensor: true
#     enable_hibernation: false
#   default_applications:
#     # Iina
#     - { extension: avi, handler: com.colliderli.iina }
#     - { extension: flv, handler: com.colliderli.iina }
#     - { extension: mkv, handler: com.colliderli.iina }
#     - { extension: mov, handler: com.colliderli.iina }
#     - { extension: mp4, handler: com.colliderli.iina }
#     - { extension: mpg, handler: com.colliderli.iina }
#     # MacDown
#     - { extension: md, handler: com.uranusjr.macdown }
#     # Sublime Text
#     - { extension: cfg, handler: com.microsoft.VSCode }
#     - { extension: css, handler: com.microsoft.VSCode }
#     - { extension: inc, handler: com.microsoft.VSCode }
#     - { extension: js, handler: com.microsoft.VSCode }
#     - { extension: json, handler: com.microsoft.VSCode }
#     - { extension: php, handler: com.microsoft.VSCode }
#     - { extension: scss, handler: com.microsoft.VSCode }
#     - { extension: txt, handler: com.microsoft.VSCode }
#     - { extension: yml, handler: com.microsoft.VSCode }
#
# finder2:
#   keep_folders_on_top: true
#   show_full_path_in_titlebar: true
#   show_pathbar: true
#   show_statusbar: true
#   enable_quit_menu_item: true
#   default_view_style: clmv
#   show_external_harddrives_on_desktop: true
#   show_harddrives_on_desktop: true
#   show_mounted_servers_on_desktop: true
#   show_removable_media_on_desktop: true
#   hide_user_library: false
#   hide_system_volumes: false
#   expand_infopane:
#     - { name: General, value: true }
#     - { name: MetaData, value: true }
#     - { name: OpenWith, value: true }
#     - { name: Name, value: true }
#     - { name: Comments, value: true }
#     - { name: Preview, value: true }
#     - { name: Privileges, value: true }
#   iconview_arrange_by: grid
#   iconview_grid_spacing: 60
#   iconview_icon_size: 50
#   iconview_show_item_info: true
#   iconview_show_label_on_bottom: false
#   iconview_text_size: 12
#   iconview_show_icon_preview: true
#   enable_quicklook_text_selection: true
#   disable_all_animations: true
#
# safari2:
#   show_full_url_in_address_bar: true
#   open_safe_files_automatically: false
#   enable_status_bar: true
#   enable_developer_menu: true
#   autofill_passwords: false
#   show_favorites_bar: true
#   disable_thumbnail_cache: true
#   search_with_word_start_only: false
#
# textedit3:
#   default_doc_plaintext: true
#
# terminal:
#   enable_secure_keyboard_entry: false
# ---
# - name: Dictionary - Reuse definition window
#   community.general.osx_defaults:
#     domain: com.apple.Dictionary
#     key: ProhibitNewWindowForRequest
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dictionary
# ---
# - name: DiskUtility - Enable the debug menu
#   community.general.osx_defaults:
#     domain: com.apple.DiskUtility
#     key: DUDebugMenuEnabled
#     type: bool
#     value: true
#     state: present
#   notify: Restart Disk Utility
#
# - name: DiskUtility - Enable advanced image options
#   community.general.osx_defaults:
#     domain: com.apple.DiskUtility
#     key: advanced-image-options
#     type: bool
#     value: true
#     state: present
#   notify: Restart Disk Utility
#
# - name: DiskUtility - Hide hidden partitions
#   community.general.osx_defaults:
#     domain: com.apple.DiskUtility
#     key: DUShowEveryPartition
#     type: bool
#     value: false
#     state: present
#   notify: Restart Disk Utility
# ---
# - name: Dock - Turn off bouncing icons
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: no-bouncing
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Change minimize/maximize window effect
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: mineffect
#     type: string
#     value: scale
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Move to bottom middle of the screen
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: pinning
#     type: string
#     value: middle # Other options: "start", "end".
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Move to bottom middle of the screen
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: orientation
#     type: string
#     value: bottom # Other options: "left", "right".
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Enable spring loading for all items
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: enable-spring-load-actions-on-all-items
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Speeding up Mission Control animations and grouping windows by application
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: expose-animation-duration
#     type: float
#     value: 0.1
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Misson Control group by application
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: expose-group-by-app
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Enabling iTunes track notifications
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: itunes-notifications
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Don't animate opening applications
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: launchanim
#     type: bool
#     value: false
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Don't show Dashboard as a Space
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: dashboard-in-overlay
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Set springboard rows
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: springboard-rows
#     type: int
#     value: 8
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Set springboard columns
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: springboard-columns
#     type: int
#     value: 8
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Making launchpad better
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: ResetLaunchPad
#     type: bool
#     value: true
#     state: present
#   notify: Restart Dock
#
# # Hot corners
# # Possible values:
# #  0: no-op
# #  2: Mission Control
# #  3: Show application windows
# #  4: Desktop
# #  5: Start screen saver
# #  6: Disable screen saver
# #  7: Dashboard
# # 10: Put display to sleep
# # 11: Launchpad
# # 12: Notification Center
#
# - name: Dock - Top left screen corner → Disable screen saver
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: wvous-tl-corner
#     type: int
#     value: 6
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Top left screen corner → Disable screen saver
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: wvous-tl-modifier
#     type: int
#     value: 0
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Bottom right screen corner → Start screen saver
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: wvous-br-corner
#     type: int
#     value: 5
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Bottom right screen corner → Start screen saver
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: wvous-br-modifier
#     type: int
#     value: 0
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Make animation snappier
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: workspaces-edge-delay
#     type: float
#     value: 0.1
#     state: present
#   notify: Restart Dock
#
# - name: Dock - Set dock tilesize
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: tilesize
#     type: float
#     value: 50
#   notify: Restart Dock
#
# - name: Dock - Show indicator lights for open applications in the dock
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: show-process-indicators
#     type: bool
#     value: true
#   notify: Restart Dock
#
# - name: Dock - Make dock icons of hidden applications translucent
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: showhidden
#     type: bool
#     value: true
#   notify: Restart Dock
#
# - name: Dock - Rearrange spaces by last use
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: mru-spaces
#     type: bool
#     value: true
#   notify: Restart Dock
#
# - name: Dock - Set dock fade-in time
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: autohide-delay
#     type: float
#     value: 0
#   notify: Restart Dock
#
# - name: Dock - Automatically hide
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: autohide
#     type: bool
#     value: true
#   notify: Restart Dock
#
# - name: Dock - Removing the auto-hiding time modifier
#   community.general.osx_defaults:
#     domain: com.apple.dock
#     key: autohide-time-modifier
#     type: float
#     value: 0
#     state: present
#   notify: Restart Dock
# ---
# - name: Mail – Disable reply animations
#   community.general.osx_defaults:
#     domain: com.apple.mail
#     key: DisableReplyAnimations
#     type: bool
#     value: true
#     state: present
#   notify: Restart Mail
#
# - name: Mail – Disable send animations
#   community.general.osx_defaults:
#     domain: com.apple.mail
#     key: DisableSendAnimations
#     type: bool
#     value: true
#     state: present
#   notify: Restart Mail
#
# - name: Mail - Addresses include name on pasteboard
#   community.general.osx_defaults:
#     domain: com.apple.mail
#     key: AddressesIncludeNameOnPasteboard
#     type: bool
#     value: true
#   notify: Restart Mail
#
# - name: Mail - Order mails by thread
#   community.general.osx_defaults:
#     domain: com.apple.mail
#     key: ThreadingDefault
#     type: bool
#     value: true
#   notify: Restart Mail
# ---
# - name: Menu Extra - Use 24-hour format
#   community.general.osx_defaults:
#     domain: com.apple.menuextra.clock
#     key: DateFormat
#     type: string
#     value: EEE HH:mm # Other values, e.g., "EEE MMM d  h:mm a".
#     state: present
#
# - name: Menu Extra - Show battery percentage
#   community.general.osx_defaults:
#     domain: com.apple.menuextra.battery
#     key: ShowPercent
#     type: string
#     value: YES # yamllint disable-line rule:truthy
#     state: present
# ---
# - name: MenuMeters - Update disk information only every 1s
#   community.general.osx_defaults:
#     domain: com.ragingmenace.MenuMeters
#     key: DiskInterval
#     type: float
#     value: 1.0
#     state: present
#   notify: Restart MenuMeters
# ---
# - name: Trackpad –Set speed to a reasonable number
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: com.apple.trackpad.scaling
#     type: int
#     value: 2
#     state: present
#
# - name: Mouse - Setting speed to a reasonable number
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: com.apple.mouse.scaling
#     type: float
#     value: 2.5
#     state: present
#
# - name: Trackpad - enable tap to click for this user and for the login screen
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: com.apple.mouse.tapBehavior
#     type: bool
#     value: true
#     state: present
#
# - name: Sound - Disable beeps on level change
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: com.apple.sound.beep.feedback
#     type: int
#     value: 0
#     state: present
#
# - name: Set language and text formats
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleLanguages
#     type: array
#     value:
#       - en
#     state: present
#
# - name: Set currency formats
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleLocale
#     type: string
#     value: en_US@currency=USD
#     state: present
#
# - name: Set measurement formats
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleMeasurementUnits
#     type: string
#     value: Inches
#     state: present
#
# - name: Set unit formats
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleMetricUnits
#     type: bool
#     value: false
#     state: present
#
# - name: Use 24-hour format
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleICUForce24HourTime
#     type: bool
#     value: true
#     state: present
#
# #- name: Use Monday as the first day of the week
# #  community.general.osx_defaults:
# #    domain: NSGlobalDomain
# #    key: AppleFirstWeekday
# #    type: string
# #    value: '{gregorian = 2;}'
# #    state: present
# #
# - name: Show fast user switching menu as [Icon]
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: userMenuExtraStyle
#     type: int
#     value: 2
#     state: present
#
# - name: Displaying ASCII control characters using caret notation in standard text views
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSTextShowsControlCharacters
#     type: bool
#     value: true
#     state: present
#
# - name: Add a context menu item for showing the Web Inspector in web views
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: WebKitDeveloperExtras
#     type: bool
#     value: true
#     state: present
#
# - name: UI - Expand print panel by default
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: PMPrintingExpandedStateForPrint
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Springing - Enable spring loading for directories
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: com.apple.springing.enabled
#     type: bool
#     value: true
#
# - name: Springing - Set delay for spring loading directories
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: com.apple.springing.delay
#     type: float
#     value: 2
#
# - name: UI - Set action for double click on titlebar
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleActionOnDoubleClick
#     type: string
#     value: Maximize # "Maximize", "Minimize".
#
# - name: UI - Set interface style
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleInterfaceStyle
#     type: string
#     value: Dark # "Light", "Dark".
#
# - name: UI - Enable subpixel font rendering on non-Apple LCDs
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     state: present
#     key: AppleFontSmoothing
#     type: int
#     value: 1
#
# - name: UI - Show all file extensions
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleShowAllExtensions
#     type: bool
#     value: true
#
# - name: UI - Enable menubar transparency
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleEnableMenuBarTransparency
#     type: bool
#     value: true
#
# - name: UI - Enable opening and closing window animations
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAutomaticWindowAnimationsEnabled
#     type: bool
#     value: true
#
# - name: Input - Enable auto correct
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAutomaticSpellingCorrectionEnabled
#     type: bool
#     value: true
#
# - name: Input - Disable smart quotes
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAutomaticQuoteSubstitutionEnabled
#     type: bool
#     value: false
#
# - name: Input - Disable smart dashes
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAutomaticDashSubstitutionEnabled
#     type: bool
#     value: false
#
# - name: Input - Enable automatic capitalization
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAutomaticCapitalizationEnabled
#     type: bool
#     value: true
#
# - name: Input - Enable automatic period substitution
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAutomaticPeriodSubstitutionEnabled
#     type: bool
#     value: true
#
# - name: Input - Enable continuous spell checking
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSAllowContinuousSpellChecking
#     type: bool
#     value: true
#
# # 1 : Text boxes and lists only
# # 3 : All controls
# - name: Input - Enable full keyboard access for all controls
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: AppleKeyboardUIMode
#     type: int
#     value: 3
#
# - name: Input - Set key repeat rate
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: KeyRepeat
#     type: int
#     value: 2
#
# - name: Input - Set initial key repeat delay
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: InitialKeyRepeat
#     type: int
#     value: 22
#
# - name: Input - Enable press-and-hold for special characters
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: ApplePressAndHoldEnabled
#     type: bool
#     value: true
#
# - name: Misc - Save application state on quit
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSQuitAlwaysKeepsWindows
#     type: bool
#     value: true
#
# - name: Misc - Save new docs to icloud by default
#   community.general.osx_defaults:
#     domain: NSGlobalDomain
#     key: NSDocumentSaveNewDocumentsToCloud
#     type: bool
#     value: true
# ---
# - name: Photo Booth - Enable the debug menu
#   community.general.osx_defaults:
#     domain: com.apple.PhotoBooth
#     key: EnableDebugMenu
#     type: bool
#     value: true
#     state: present
#   notify: Restart Photo Booth
# ---
# - name: Preview - Scale images by default when printing
#   community.general.osx_defaults:
#     domain: com.apple.Preview
#     key: PVImagePrintingScaleMode
#     type: bool
#     value: true
#     state: present
#   notify: Restart Preview
#
# - name: Preview - Auto-rotate by default when printing
#   community.general.osx_defaults:
#     domain: com.apple.Preview
#     key: PVImagePrintingAutoRotate
#     type: bool
#     value: true
#     state: present
#   notify: Restart Preview
#
# - name: Preview - Quit Always Keeps Windows
#   community.general.osx_defaults:
#     domain: com.apple.Preview
#     key: NSQuitAlwaysKeepsWindows
#     type: bool
#     value: true
#     state: present
#   notify: Restart Preview
# ---
# - name: Printing Preferences - Automatically quit printer app once the print jobs complete
#   community.general.osx_defaults:
#     domain: com.apple.print.PrintingPrefs
#     key: Quit When Finished
#     type: bool
#     value: true
#     state: present
# ---
# - name: QuickTime Player - Don't auto-play videos when opened
#   community.general.osx_defaults:
#     domain: com.apple.QuickTimePlayerX
#     key: MGPlayMovieOnOpen
#     type: bool
#     value: false
#     state: present
#   notify: Restart QuickTime Player
# ---
# - name: Reminders - Show debug menu
#   community.general.osx_defaults:
#     domain: com.apple.reminders
#     key: RemindersDebugMenu
#     type: bool
#     value: true
#     state: present
#   notify: Restart Reminders
# ---
# - name: Finder - Show hidden files
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: AppleShowAllFiles
#     type: bool
#     value: true
#     state: present
#   notify: Restart Finder
#
# - name: Finder - Set new window target
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: NewWindowTarget
#     type: string
#     value: PfDe # "PfHm" for Home directory, "PfDe" for Desktop.
#   notify: Restart Finder
#
# - name: Finder - Show extension warning
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: FXEnableExtensionChangeWarning
#     type: bool
#     value: false
#   notify: Restart Finder
#
# - name: Finder - Warn before emptying the trash
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: WarnOnEmptyTrash
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Keep folders on top when sorting by name
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: _FXSortFoldersFirst
#     type: bool
#     value: false
#   notify: Restart Finder
#
# - name: Finder - Show full path in finder titlebar
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: _FXShowPosixPathInTitle
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Show pathbar in bottom of finder
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: ShowPathbar
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Show statusbar
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: ShowStatusBar
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - When performing a search, search the current folder by default
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: FXDefaultSearchScope
#     type: string
#     value: SCcf
#   notify: Restart Finder
#
# - name: Finder - Enable quit menu item
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: QuitMenuItem
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Default view style
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: FXPreferredViewStyle
#     type: string
#     value: clmv # "icnv" for icon view, "clmv" for column view, "Flwv" for cover flow view.
#   notify: Restart Finder
#
# - name: Finder - Show external harddrives on desktop
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: ShowExternalHardDrivesOnDesktop
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Show harddrives on desktop
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: ShowHardDrivesOnDesktop
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Show mounted servers on desktop
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: ShowMountedServersOnDesktop
#     type: bool
#     value: true
#   notify: Restart Finder
#
# - name: Finder - Show removable media on desktop
#   community.general.osx_defaults:
#     domain: com.apple.finder
#     key: ShowRemovableMediaOnDesktop
#     type: bool
#     value: true
#   notify: Restart Finder
# ---
# - name: Flux - Set flag that app has launched before
#   community.general.osx_defaults:
#     domain: org.herf.Flux.plist
#     key: SUHasLaunchedBefore
#     type: bool
#     value: true
#     state: present
#   notify: Restart Flux
#
# - name: Flux - Enable automatic update checks
#   community.general.osx_defaults:
#     domain: org.herf.Flux.plist
#     key: SUEnableAutomaticChecks
#     type: bool
#     value: true
#     state: present
#   notify: Restart Flux
#
# - name: Flux - Set location
#   community.general.osx_defaults:
#     domain: org.herf.Flux.plist
#     key: location
#     type: string
#     value: "42.5,-71.2"
#     state: present
#   notify: Restart Flux
#
# - name: Flux - Set locationTextField
#   community.general.osx_defaults:
#     domain: org.herf.Flux.plist
#     key: locationTextField
#     type: string
#     value: "02474"
#     state: present
#   notify: Restart Flux
#
# - name: Flux - Set late night colour temperature
#   community.general.osx_defaults:
#     domain: org.herf.Flux.plist
#     key: lateColorTemp
#     type: int
#     value: 3400
#     state: present
#   notify: Restart Flux
#
# - name: Flux - Set night colour temperature
#   community.general.osx_defaults:
#     domain: org.herf.Flux.plist
#     key: nightColorTemp
#     type: int
#     value: 1900
#     state: present
#   notify: Restart Flux
# ---
# - name: GPGMail – Disable signing emails by default
#   community.general.osx_defaults:
#     domain: org.gpgtools.gpgmail
#     key: SignNewEmailsByDefault
#     type: bool
#     value: false
#     state: present
# ---
# - name: Set Help Viewer windows to non-floating mode
#   community.general.osx_defaults:
#     domain: com.apple.helpviewer
#     key: DevMode
#     type: bool
#     value: true
#     state: present
# ---
# - name: Enable the debug menu in iCal (pre-10.8)
#   community.general.osx_defaults:
#     domain: com.apple.iCal
#     key: IncludeDebugMenu
#     type: bool
#     value: true
#     state: present
#
# - name: Default duration for new event
#   community.general.osx_defaults:
#     domain: com.apple.iCal
#     key: Default duration in minutes for new event
#     type: int
#     value: 60
#     state: present
# ---
# - name: ImageCapture – Disable Photos.app from starting everytime a device is plugged in
#   community.general.osx_defaults:
#     domain: com.apple.ImageCapture
#     key: disableHotPlug
#     type: bool
#     value: true
#     state: present
#   notify: Restart Image Capture
# ---
# - name: Update iTerm2 - Enable automatic updates
#   community.general.osx_defaults:
#     domain: com.googlecode.iterm2
#     key: SUEnableAutomaticChecks
#     type: bool
#     value: true
#   notify: Restart iTerm2
#
# - name: Update iTerm2 - Set custom preferences folder
#   community.general.osx_defaults:
#     domain: com.googlecode.iterm2
#     key: PrefsCustomFolder
#     type: string
#     value: $HOME/.config/iterm2
#   when: iterm2_preference_folder is defined
#   notify: Restart iTerm2
#
# - name: Update iTerm2 - Enable custom preferences folder
#   community.general.osx_defaults:
#     domain: com.googlecode.iterm2
#     key: LoadPrefsFromCustomFolder
#     type: bool
#     value: true
#   when: iterm2_preference_folder is defined
#   notify: Restart iTerm2
#
# # See: https://security.stackexchange.com/a/47786/8918
# - name: Update iTerm2 - Disable Secure Keyboard Entry
#   community.general.osx_defaults:
#     domain: com.googlecode.iterm2
#     key: Secure Input
#     type: bool
#     value: false
#   notify: Restart iTerm2
# ---
# - name: LaunchServices - Enable application quarantine
#   community.general.osx_defaults:
#     domain: com.apple.LaunchServices
#     key: NSDocumentSaveNewDocumentsToCloud
#     type: bool
#     value: true
# ---
# # FIXME: Update domain?
# #- name: Safari - Show full URL in the address bar
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: ShowFullURLInSmartSearchField
# #    type: bool
# #    value: true
# #  notify: Restart Safari
# ##
# #- name: Safari - Don't open 'safe' files automatically
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: AutoOpenSafeDownloads
# #    type: bool
# #    value: false
# #  notify: Restart Safari
# ##
# #- name: Safari - Enable status bar
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: ShowOverlayStatusBar
# #    type: bool
# #    value: true
# #  notify: Restart Safari
# ##
# #- name: Safari - Enable developer menu
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: IncludeDevelopMenu
# #    type: bool
# #    value: true
# #  notify: Restart Safari
# ##
# #- name: Safari - Don't autofill passwords
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: AutoFillPasswords
# #    type: bool
# #    value: false
# #  notify: Restart Safari
# ##
# #- name: Safari - Show favorites bar
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: '{{ item }}'
# #    type: bool
# #    value: true
# #  with_items:
# #    - ShowFavoritesBar
# #    - ShowFavoritesBar-v2
# #  notify: Restart Safari
# ##
# #- name: Safari - Enable thumbnail cache for history and top sites
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    state: absent
# #    key: DebugSnapshotsUpdatePolicy
# #    type: int
# #    value: 2
# #  notify: Restart Safari
# ##
# #- name: Safari - Disable search only with word start
# #  community.general.osx_defaults:
# #    domain: com.apple.Safari
# #    key: FindOnPageMatchesWordStartsOnly
# #    type: bool
# #    value: false
# #  notify: Restart Safari
# #
# ---
# - name: Screen Capture - Save screenshots to the desktop
#   community.general.osx_defaults:
#     domain: com.apple.screencapture
#     key: location
#     type: string
#     value: /Users/ftod/Desktop
#     state: present
#
# - name: Screen Capture - Save screenshots in PNG formats
#   community.general.osx_defaults:
#     domain: com.apple.screencapture
#     key: type
#     type: string
#     value: png # other options: BMP, GIF, JPG, PDF, TIFF.
#     state: present
# ---
# - name: Screensaver - Show with clock
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: showClock
#     type: bool
#     value: true
#     state: present
#
# - name: Screensaver - Set activation delay for screensaver
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     host: currentHost
#     key: idleTime
#     type: int
#     value: 0
#
# - name: Screensaver - Ask for a password when leaving the screensaver
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: askForPassword
#     type: int
#     value: 1
#
# - name: Screensaver - Set ask password delay
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: askForPasswordDelay
#     type: float
#     value: 0
#
# - name: Screensaver - Set module name
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: moduleName
#     type: string
#     value: Aerial
#
# - name: Screensaver - Set display name
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: displayName
#     type: string
#     value: Aerial
#
# - name: Screensaver - Set path
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: path
#     type: string
#     value: "/Users/ftod/Library/Screen Savers/Aerial.saver"
#
# - name: Screensaver - Set type
#   community.general.osx_defaults:
#     domain: com.apple.screensaver
#     key: type
#     type: int
#     value: 0
# ---
# - name: Screen Sharing – Turn on Bonjour browser
#   community.general.osx_defaults:
#     domain: com.apple.ScreenSharing
#     key: ShowBonjourBrowser_Debug
#     type: bool
#     value: true
#     state: present
#   notify: Restart Screen Sharing
# ---
# - name: Skype - Include debug menu
#   community.general.osx_defaults:
#     domain: com.skype.skype
#     key: IncludeDebugMenu
#     type: bool
#     value: true
#     state: present
#   notify: Restart Skype
#
# - name: Skype - Don't show welcome tour
#   community.general.osx_defaults:
#     domain: com.skype.skype
#     key: SKShowWelcomeTour
#     type: bool
#     value: true
#     state: present
#   notify: Restart Skype
#
# - name: Skype - Disable welcome tour
#   community.general.osx_defaults:
#     domain: com.skype.skype
#     key: SKDisableWelcomeTour
#     type: bool
#     value: true
#     state: present
#   notify: Restart Skype
#
# - name: Skype - Enable developer extras
#   community.general.osx_defaults:
#     domain: com.skype.skype
#     key: WebKitDeveloperExtras
#     type: bool
#     value: true
#     state: present
#   notify: Restart Skype
#
# - name: Skype - Don't disable developer extras
#   community.general.osx_defaults:
#     domain: com.skype.skype
#     key: DisableWebKitDeveloperExtras
#     type: bool
#     value: true
#     state: present
#   notify: Restart Skype
# ---
# - name: Default applications - Ensure required tools
#   community.general.homebrew:
#     name: duti
#     state: latest
#
# - name: Default applications - Get default applications for file types.
#   ansible.builtin.command: >
#     duti -x {{ item.extension }}
#   register: duti_result
#   with_items: '{{ system.default_applications }}'
#   changed_when: false
#   failed_when: false
#
# - name: Default applications - Set default applications for file types.
#   ansible.builtin.command: >
#     duti -s {{ item.1.handler }} {{ item.1.extension }} {{ item.1.roles|default('all') }}
#   with_indexed_items: '{{ system.default_applications }}'
#   changed_when: item.1.handler not in duti_result.results[item.0].stdout
# ---
# - name: Terminal – Enable UTF-8 only
#   community.general.osx_defaults:
#     domain: com.apple.Terminal
#     key: StringEncodings
#     type: array
#     value:
#       - "4"
#     state: present
#   notify: Restart Terminal
#
# - name: Terminal – Set Pro theme as default
#   community.general.osx_defaults:
#     domain: com.apple.Terminal
#     key: Default Window Settings
#     type: string
#     value: Pro
#     state: present
#   notify: Restart Terminal
#
# - name: Terminal – Set Pro theme as startup
#   community.general.osx_defaults:
#     domain: com.apple.Terminal
#     key: Startup Window Settings
#     type: string
#     value: Pro
#     state: present
#   notify: Restart Terminal
#
# - name: Terminal – Set the size 18 by default
#   community.general.osx_defaults:
#     domain: com.apple.Terminal
#     key: NSWindow Frame NSFontPanel
#     type: string
#     value: 929 42 445 105 0 0 1440 900
#     state: present
#   notify: Restart Terminal
#
# # See: https://security.stackexchange.com/a/47786/8918
# - name: Terminal - Enable secure keyboard entry
#   community.general.osx_defaults:
#     domain: com.apple.terminal
#     key: SecureKeyboardEntry
#     type: bool
#     value: true
#   notify: Restart Terminal
# ---
# - name: TextEdit –Open files as UTF-8
#   community.general.osx_defaults:
#     domain: com.apple.TextEdit
#     key: PlainTextEncoding
#     type: int
#     value: 4
#     state: present
#   notify: Restart TextEdit
#
# - name: TextEdit – Save files as UTF-8
#   community.general.osx_defaults:
#     domain: com.apple.TextEdit
#     key: PlainTextEncodingForWrite
#     type: int
#     value: 4
#     state: present
#   notify: Restart TextEdit
#
# - name: TextEdit - Save as plaintext
#   community.general.osx_defaults:
#     domain: com.apple.TextEdit
#     key: RichText
#     state: present
#     type: int
#     value: 0
#   notify: Restart TextEdit
# ---
# - name: Time Machine - Prevent prompting to use new hard drives as backup volume
#   community.general.osx_defaults:
#     domain: com.apple.TimeMachine
#     key: DoNotOfferNewDisksForBackup
#     type: bool
#     value: true
#     state: present
# ---
# - name: XQuartz – Auto-quit on close last window
#   community.general.osx_defaults:
#     domain: org.macosforge.xquartz.X11
#     key: wm_auto_quit
#     type: bool
#     value: true
#     state: present
#   notify: Restart XQuartz
# ---
# - name: Xcode - Turn off welcome windows
#   community.general.osx_defaults:
#     domain: com.apple.dt.Xcode
#     key: XCShowWelcomeWindow
#     type: bool
#     value: false
#     state: present
#   notify: Restart Xcode
#
# ---
# - name: Trackpad – enable click and drag
#   community.general.osx_defaults:
#     domain: com.apple.AppleMultitouchTrackpad
#     key: Dragging
#     type: int
#     value: 1
#     state: present
#
# - name: Trackpad - enable click and drag for bluetooth trackpads
#   community.general.osx_defaults:
#     domain: com.apple.driver.AppleBluetoothMultitouch.trackpad
#     key: Dragging
#     type: int
#     value: 1
#     state: present
#
# - name: System Preferences – Organize Alphabetically
#   community.general.osx_defaults:
#     domain: com.apple.systempreferences
#     key: ShowAllMode
#     type: bool
#     value: true
#     state: present
#
# - name: System Sound –Disable UI sounds
#   community.general.osx_defaults:
#     domain: com.apple.systemsound
#     key: com.apple.sound.uiaudio.enabled
#     type: int
#     value: 0
#     state: present
#
# - name: Bluetooth – Increase sound quality for headphones/headsets
#   community.general.osx_defaults:
#     domain: com.apple.BluetoothAudioAgent
#     key: Apple Bitpool Min (editable)
#     type: int
#     value: 40
#     state: present
#
# - name: IOKit - Enable display from automatically adjusting brightness
#   community.general.osx_defaults:
#     domain: com.apple.iokit.AmbientLightSensor
#     key: Automatic Display Enabled
#     type: bool
#     value: true
#     state: present
#
# - name: IOKit - Disable keyboard from automatically adjusting backlight brightness in low light
#   community.general.osx_defaults:
#     domain: com.apple.iokit.AmbientLightSensor
#     key: Automatic Keyboard Enabled
#     type: bool
#     value: false
#     state: present
#
# - name: Network Browser - Enable AirDrop over Ethernet and on Unsupported Macs
#   community.general.osx_defaults:
#     domain: com.apple.NetworkBrowser
#     key: BrowseAllInterfaces
#     type: bool
#     value: true
#     state: present
#
# - name: Network Connect –Show Time Connected to VPN
#   community.general.osx_defaults:
#     domain: com.apple.networkConnect
#     key: VPNShowTime
#     type: int
#     value: 1
#     state: present
#
# - name: Captive - Disable the built-in portal (use your browser instead)
#   community.general.osx_defaults:
#     domain: com.apple.captive.control
#     key: Active
#     type: bool
#     value: false
#     state: present
#
# - name: Dashboard - Disable
#   community.general.osx_defaults:
#     domain: com.apple.dashboard
#     key: mcx-disabled
#     type: bool
#     value: true
#
# - name: Desktop Services - Disable creating .DS_Store files on network shares
#   community.general.osx_defaults:
#     domain: com.apple.desktopservices
#     key: DSDontWriteNetworkStores
#     type: bool
#     value: true
#
# - name: Desktop Services - Disable creating .DS_Store files on usb drives
#   community.general.osx_defaults:
#     domain: com.apple.desktopservices
#     key: DSDontWriteUSBStores
#     type: bool
#     value: true
#
# - name: Disk Images - Disable verification
#   community.general.osx_defaults:
#     domain: com.apple.frameworks.diskimages
#     key: "{{ item }}"
#     type: bool
#     value: true
#   with_items:
#     - skip-verify
#     - skip-verify-locked
#     - skip-verify-remote
#
# - name: CrashReporter - Enable
#   community.general.osx_defaults:
#     domain: com.apple.CrashReporter
#     state: absent
#     key: DialogType
#     type: string
#     value: falsene
#
# - name: Spotlight - Disable indexing network volumes
#   become: true
#   community.general.osx_defaults:
#     domain: /Library/Preferences/com.apple.SpotlightServer.plist
#     key: ExternalVolumesIgnore
#     type: bool
#     value: true
#   tags: [become]
#  when: "wakeonnetworkaccess_power_settings_results.stdout != 'Wake On Network Access: On'"

{{ end -}}
