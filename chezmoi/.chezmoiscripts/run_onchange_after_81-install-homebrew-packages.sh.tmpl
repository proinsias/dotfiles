{{ if ne .chezmoi.os "windows" -}}
#!/usr/bin/env bash

set -o errexit    # Exit on error. Append || true if you expect an error.
set -o errtrace   # Exit on error inside any functions or subshells.
set -o noclobber  # don't allow overwriting files
set -o nounset    # Don't allow use of undefined vars. Use ${VAR:-} to use an undefined VAR.
set -o pipefail   # Produce a failure return code if any pipeline command errors
shopt -s failglob # Cause globs that don't get expanded to cause errors

echo -e "\n\nInstall homebrew packages."

# For homebrew
# Adds $HOMEBREW_PREFIX/bin as prefix to PATH.
{{ if eq .chezmoi.os "darwin" }}
# Intel homebrew
test -f /usr/local/bin/brew && OUTPUT="$(/usr/local/bin/brew shellenv)" && eval "${OUTPUT}"
# M1 home-brew â€“ do second in case we are also using Intel
# via Rosetta.
test -f /opt/homebrew/bin/brew && OUTPUT="$(/opt/homebrew/bin/brew shellenv)" && eval "${OUTPUT}"
{{ else if eq .chezmoi.os "linux" }}
# homebrew linuxbrew
test -d /home/linuxbrew/.linuxbrew && OUTPUT="$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" && eval "${OUTPUT}"
# shellcheck disable=SC2086
test -d "${HOME}/.linuxbrew/" && OUTPUT="$(${HOME}/.linuxbrew/bin/brew shellenv)" && eval "${OUTPUT}"
{{ end }}

# Update Homebrew
echo -e "\nbrew update"
brew update

# Brewfile hash: {{ include "./private_dot_config/homebrew/Brewfile.tmpl" | sha256sum }}
{{ if .test }}
if ! command brew bundle check --file "${TEST_HOME}/.config/homebrew/Brewfile" &> /dev/null; then
    echo -e "\nThe Brewfile's dependencies are not satisfied. Running brew bundle install --file..."
    brew bundle install --file "${TEST_HOME}/.config/homebrew/Brewfile"
else
    echo -e "\nThe Brewfile's dependencies are satisfied. Skipping brew bundle install --file..."
fi
{{ else }}
if ! command brew bundle check --global &> /dev/null; then
    echo -e "\nThe Brewfile's dependencies are not satisfied. Running brew bundle install --global..."
    brew bundle install --global
else
    echo -e "\nThe Brewfile's dependencies are satisfied. Skipping brew bundle install --global..."
fi
{{ end }}
{{ end }}
