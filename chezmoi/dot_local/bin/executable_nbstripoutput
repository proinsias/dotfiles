#!/usr/bin/env python
# -*- coding: utf-8 -*-

# /// script
# dependencies = [
#   "nbformat",
# ]
# [tool.uv]
# exclude-newer = "2024-10-14T00:00:00Z"
# ///

"""strip outputs from a Jupyter Notebook

Reads a notebook from stdin, strips its output, and writes the outputless version
to stdout.

Edited version of <https://gist.github.com/minrk/6176788#file-nbstripout-L34>
"""
import sys

# Jupyter >= 4
from nbformat import read, write, NO_CONVERT


def _cells(nb):
    """Yield all cells in an nbformat-insensitive manner"""
    if nb.nbformat < 4:
        for ws in nb.worksheets:
            for cell in ws.cells:
                yield cell
    else:
        for cell in nb.cells:
            yield cell


def strip_output(nb):
    """strip the outputs from a notebook object"""
    nb.metadata.pop('signature', None)
    for cell in _cells(nb):
        if 'outputs' in cell:
            cell['outputs'] = []
        if 'prompt_number' in cell:
            cell['prompt_number'] = None
    return nb

if __name__ == '__main__':
    with sys.stdin as f:
        nb = read(f, as_version=NO_CONVERT)
    nb = strip_output(nb)
    with sys.stdout as f:
        write(nb, f)
